// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: Serialize.proto

package models

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// 公用
type SerData struct {
	PushRecord           []*StrInt `protobuf:"bytes,1,rep,name=pushRecord" json:"pushRecord,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SerData) Reset()         { *m = SerData{} }
func (m *SerData) String() string { return proto.CompactTextString(m) }
func (*SerData) ProtoMessage()    {}
func (*SerData) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{0}
}
func (m *SerData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerData.Unmarshal(m, b)
}
func (m *SerData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerData.Marshal(b, m, deterministic)
}
func (m *SerData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerData.Merge(m, src)
}
func (m *SerData) XXX_Size() int {
	return xxx_messageInfo_SerData.Size(m)
}
func (m *SerData) XXX_DiscardUnknown() {
	xxx_messageInfo_SerData.DiscardUnknown(m)
}

var xxx_messageInfo_SerData proto.InternalMessageInfo

func (m *SerData) GetPushRecord() []*StrInt {
	if m != nil {
		return m.PushRecord
	}
	return nil
}

// 将领,特工
type SerHero struct {
	Hero                 []*Hero  `protobuf:"bytes,1,rep,name=hero" json:"hero,omitempty"`
	Cia                  *DbCia   `protobuf:"bytes,2,opt,name=cia" json:"cia,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SerHero) Reset()         { *m = SerHero{} }
func (m *SerHero) String() string { return proto.CompactTextString(m) }
func (*SerHero) ProtoMessage()    {}
func (*SerHero) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{1}
}
func (m *SerHero) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerHero.Unmarshal(m, b)
}
func (m *SerHero) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerHero.Marshal(b, m, deterministic)
}
func (m *SerHero) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerHero.Merge(m, src)
}
func (m *SerHero) XXX_Size() int {
	return xxx_messageInfo_SerHero.Size(m)
}
func (m *SerHero) XXX_DiscardUnknown() {
	xxx_messageInfo_SerHero.DiscardUnknown(m)
}

var xxx_messageInfo_SerHero proto.InternalMessageInfo

func (m *SerHero) GetHero() []*Hero {
	if m != nil {
		return m.Hero
	}
	return nil
}

func (m *SerHero) GetCia() *DbCia {
	if m != nil {
		return m.Cia
	}
	return nil
}

// 装备
type SerEquip struct {
	Equip                []*Equip `protobuf:"bytes,1,rep,name=equip" json:"equip,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SerEquip) Reset()         { *m = SerEquip{} }
func (m *SerEquip) String() string { return proto.CompactTextString(m) }
func (*SerEquip) ProtoMessage()    {}
func (*SerEquip) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{2}
}
func (m *SerEquip) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerEquip.Unmarshal(m, b)
}
func (m *SerEquip) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerEquip.Marshal(b, m, deterministic)
}
func (m *SerEquip) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerEquip.Merge(m, src)
}
func (m *SerEquip) XXX_Size() int {
	return xxx_messageInfo_SerEquip.Size(m)
}
func (m *SerEquip) XXX_DiscardUnknown() {
	xxx_messageInfo_SerEquip.DiscardUnknown(m)
}

var xxx_messageInfo_SerEquip proto.InternalMessageInfo

func (m *SerEquip) GetEquip() []*Equip {
	if m != nil {
		return m.Equip
	}
	return nil
}

// 勋章
type SerMedal struct {
	Medal                []*Medal `protobuf:"bytes,1,rep,name=medal" json:"medal,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SerMedal) Reset()         { *m = SerMedal{} }
func (m *SerMedal) String() string { return proto.CompactTextString(m) }
func (*SerMedal) ProtoMessage()    {}
func (*SerMedal) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{3}
}
func (m *SerMedal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerMedal.Unmarshal(m, b)
}
func (m *SerMedal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerMedal.Marshal(b, m, deterministic)
}
func (m *SerMedal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerMedal.Merge(m, src)
}
func (m *SerMedal) XXX_Size() int {
	return xxx_messageInfo_SerMedal.Size(m)
}
func (m *SerMedal) XXX_DiscardUnknown() {
	xxx_messageInfo_SerMedal.DiscardUnknown(m)
}

var xxx_messageInfo_SerMedal proto.InternalMessageInfo

func (m *SerMedal) GetMedal() []*Medal {
	if m != nil {
		return m.Medal
	}
	return nil
}

// 道具
type SerProp struct {
	Prop                 []*Prop  `protobuf:"bytes,1,rep,name=prop" json:"prop,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SerProp) Reset()         { *m = SerProp{} }
func (m *SerProp) String() string { return proto.CompactTextString(m) }
func (*SerProp) ProtoMessage()    {}
func (*SerProp) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{4}
}
func (m *SerProp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerProp.Unmarshal(m, b)
}
func (m *SerProp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerProp.Marshal(b, m, deterministic)
}
func (m *SerProp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerProp.Merge(m, src)
}
func (m *SerProp) XXX_Size() int {
	return xxx_messageInfo_SerProp.Size(m)
}
func (m *SerProp) XXX_DiscardUnknown() {
	xxx_messageInfo_SerProp.DiscardUnknown(m)
}

var xxx_messageInfo_SerProp proto.InternalMessageInfo

func (m *SerProp) GetProp() []*Prop {
	if m != nil {
		return m.Prop
	}
	return nil
}

// 建造队列
type SerBuildQue struct {
	BuildQue             []*BuildQue `protobuf:"bytes,1,rep,name=buildQue" json:"buildQue,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *SerBuildQue) Reset()         { *m = SerBuildQue{} }
func (m *SerBuildQue) String() string { return proto.CompactTextString(m) }
func (*SerBuildQue) ProtoMessage()    {}
func (*SerBuildQue) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{5}
}
func (m *SerBuildQue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerBuildQue.Unmarshal(m, b)
}
func (m *SerBuildQue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerBuildQue.Marshal(b, m, deterministic)
}
func (m *SerBuildQue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerBuildQue.Merge(m, src)
}
func (m *SerBuildQue) XXX_Size() int {
	return xxx_messageInfo_SerBuildQue.Size(m)
}
func (m *SerBuildQue) XXX_DiscardUnknown() {
	xxx_messageInfo_SerBuildQue.DiscardUnknown(m)
}

var xxx_messageInfo_SerBuildQue proto.InternalMessageInfo

func (m *SerBuildQue) GetBuildQue() []*BuildQue {
	if m != nil {
		return m.BuildQue
	}
	return nil
}

// 打造队列
type SerEquipQue struct {
	Que                  []*EquipQue `protobuf:"bytes,1,rep,name=que" json:"que,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *SerEquipQue) Reset()         { *m = SerEquipQue{} }
func (m *SerEquipQue) String() string { return proto.CompactTextString(m) }
func (*SerEquipQue) ProtoMessage()    {}
func (*SerEquipQue) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{6}
}
func (m *SerEquipQue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerEquipQue.Unmarshal(m, b)
}
func (m *SerEquipQue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerEquipQue.Marshal(b, m, deterministic)
}
func (m *SerEquipQue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerEquipQue.Merge(m, src)
}
func (m *SerEquipQue) XXX_Size() int {
	return xxx_messageInfo_SerEquipQue.Size(m)
}
func (m *SerEquipQue) XXX_DiscardUnknown() {
	xxx_messageInfo_SerEquipQue.DiscardUnknown(m)
}

var xxx_messageInfo_SerEquipQue proto.InternalMessageInfo

func (m *SerEquipQue) GetQue() []*EquipQue {
	if m != nil {
		return m.Que
	}
	return nil
}

// 任务相关
type SerTask struct {
	MajorTask            []*Task        `protobuf:"bytes,1,rep,name=majorTask" json:"majorTask,omitempty"`
	DayiyTask            []*Task        `protobuf:"bytes,2,rep,name=dayiyTask" json:"dayiyTask,omitempty"`
	LiveTask             []*Task        `protobuf:"bytes,3,rep,name=liveTask" json:"liveTask,omitempty"`
	WorldTask            []*Task        `protobuf:"bytes,4,rep,name=worldTask" json:"worldTask,omitempty"`
	Section              []*Sectiontask `protobuf:"bytes,5,rep,name=section" json:"section,omitempty"`
	DailyIsGet           []int32        `protobuf:"varint,6,rep,name=dailyIsGet" json:"dailyIsGet,omitempty"`
	DailyTaskLivenss     *int32         `protobuf:"varint,7,opt,name=dailyTaskLivenss" json:"dailyTaskLivenss,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SerTask) Reset()         { *m = SerTask{} }
func (m *SerTask) String() string { return proto.CompactTextString(m) }
func (*SerTask) ProtoMessage()    {}
func (*SerTask) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{7}
}
func (m *SerTask) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerTask.Unmarshal(m, b)
}
func (m *SerTask) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerTask.Marshal(b, m, deterministic)
}
func (m *SerTask) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerTask.Merge(m, src)
}
func (m *SerTask) XXX_Size() int {
	return xxx_messageInfo_SerTask.Size(m)
}
func (m *SerTask) XXX_DiscardUnknown() {
	xxx_messageInfo_SerTask.DiscardUnknown(m)
}

var xxx_messageInfo_SerTask proto.InternalMessageInfo

func (m *SerTask) GetMajorTask() []*Task {
	if m != nil {
		return m.MajorTask
	}
	return nil
}

func (m *SerTask) GetDayiyTask() []*Task {
	if m != nil {
		return m.DayiyTask
	}
	return nil
}

func (m *SerTask) GetLiveTask() []*Task {
	if m != nil {
		return m.LiveTask
	}
	return nil
}

func (m *SerTask) GetWorldTask() []*Task {
	if m != nil {
		return m.WorldTask
	}
	return nil
}

func (m *SerTask) GetSection() []*Sectiontask {
	if m != nil {
		return m.Section
	}
	return nil
}

func (m *SerTask) GetDailyIsGet() []int32 {
	if m != nil {
		return m.DailyIsGet
	}
	return nil
}

func (m *SerTask) GetDailyTaskLivenss() int32 {
	if m != nil && m.DailyTaskLivenss != nil {
		return *m.DailyTaskLivenss
	}
	return 0
}

// 关卡
type SerCombat struct {
	Combat               []*Combat `protobuf:"bytes,1,rep,name=combat" json:"combat,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SerCombat) Reset()         { *m = SerCombat{} }
func (m *SerCombat) String() string { return proto.CompactTextString(m) }
func (*SerCombat) ProtoMessage()    {}
func (*SerCombat) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{8}
}
func (m *SerCombat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerCombat.Unmarshal(m, b)
}
func (m *SerCombat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerCombat.Marshal(b, m, deterministic)
}
func (m *SerCombat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerCombat.Merge(m, src)
}
func (m *SerCombat) XXX_Size() int {
	return xxx_messageInfo_SerCombat.Size(m)
}
func (m *SerCombat) XXX_DiscardUnknown() {
	xxx_messageInfo_SerCombat.DiscardUnknown(m)
}

var xxx_messageInfo_SerCombat proto.InternalMessageInfo

func (m *SerCombat) GetCombat() []*Combat {
	if m != nil {
		return m.Combat
	}
	return nil
}

// 副本
type SerCombatFb struct {
	CombatFb             []*CombatFB    `protobuf:"bytes,1,rep,name=combatFb" json:"combatFb,omitempty"`
	StoneCombat          []*StoneCombat `protobuf:"bytes,2,rep,name=stoneCombat" json:"stoneCombat,omitempty"`
	PitchCombat          []*PitchCombat `protobuf:"bytes,3,rep,name=pitchCombat" json:"pitchCombat,omitempty"`
	MultCombat           *MultCombat    `protobuf:"bytes,4,opt,name=multCombat" json:"multCombat,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SerCombatFb) Reset()         { *m = SerCombatFb{} }
func (m *SerCombatFb) String() string { return proto.CompactTextString(m) }
func (*SerCombatFb) ProtoMessage()    {}
func (*SerCombatFb) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{9}
}
func (m *SerCombatFb) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerCombatFb.Unmarshal(m, b)
}
func (m *SerCombatFb) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerCombatFb.Marshal(b, m, deterministic)
}
func (m *SerCombatFb) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerCombatFb.Merge(m, src)
}
func (m *SerCombatFb) XXX_Size() int {
	return xxx_messageInfo_SerCombatFb.Size(m)
}
func (m *SerCombatFb) XXX_DiscardUnknown() {
	xxx_messageInfo_SerCombatFb.DiscardUnknown(m)
}

var xxx_messageInfo_SerCombatFb proto.InternalMessageInfo

func (m *SerCombatFb) GetCombatFb() []*CombatFB {
	if m != nil {
		return m.CombatFb
	}
	return nil
}

func (m *SerCombatFb) GetStoneCombat() []*StoneCombat {
	if m != nil {
		return m.StoneCombat
	}
	return nil
}

func (m *SerCombatFb) GetPitchCombat() []*PitchCombat {
	if m != nil {
		return m.PitchCombat
	}
	return nil
}

func (m *SerCombatFb) GetMultCombat() *MultCombat {
	if m != nil {
		return m.MultCombat
	}
	return nil
}

// 资源
type SerRoleData struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SerRoleData) Reset()         { *m = SerRoleData{} }
func (m *SerRoleData) String() string { return proto.CompactTextString(m) }
func (*SerRoleData) ProtoMessage()    {}
func (*SerRoleData) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{10}
}
func (m *SerRoleData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerRoleData.Unmarshal(m, b)
}
func (m *SerRoleData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerRoleData.Marshal(b, m, deterministic)
}
func (m *SerRoleData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerRoleData.Merge(m, src)
}
func (m *SerRoleData) XXX_Size() int {
	return xxx_messageInfo_SerRoleData.Size(m)
}
func (m *SerRoleData) XXX_DiscardUnknown() {
	xxx_messageInfo_SerRoleData.DiscardUnknown(m)
}

var xxx_messageInfo_SerRoleData proto.InternalMessageInfo

// 邮件
type SerMail struct {
	Mail                 []*Mail  `protobuf:"bytes,1,rep,name=mail" json:"mail,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SerMail) Reset()         { *m = SerMail{} }
func (m *SerMail) String() string { return proto.CompactTextString(m) }
func (*SerMail) ProtoMessage()    {}
func (*SerMail) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{11}
}
func (m *SerMail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerMail.Unmarshal(m, b)
}
func (m *SerMail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerMail.Marshal(b, m, deterministic)
}
func (m *SerMail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerMail.Merge(m, src)
}
func (m *SerMail) XXX_Size() int {
	return xxx_messageInfo_SerMail.Size(m)
}
func (m *SerMail) XXX_DiscardUnknown() {
	xxx_messageInfo_SerMail.DiscardUnknown(m)
}

var xxx_messageInfo_SerMail proto.InternalMessageInfo

func (m *SerMail) GetMail() []*Mail {
	if m != nil {
		return m.Mail
	}
	return nil
}

// 邮件
type SerReport struct {
	Report               []*Report `protobuf:"bytes,1,rep,name=report" json:"report,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SerReport) Reset()         { *m = SerReport{} }
func (m *SerReport) String() string { return proto.CompactTextString(m) }
func (*SerReport) ProtoMessage()    {}
func (*SerReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{12}
}
func (m *SerReport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerReport.Unmarshal(m, b)
}
func (m *SerReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerReport.Marshal(b, m, deterministic)
}
func (m *SerReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerReport.Merge(m, src)
}
func (m *SerReport) XXX_Size() int {
	return xxx_messageInfo_SerReport.Size(m)
}
func (m *SerReport) XXX_DiscardUnknown() {
	xxx_messageInfo_SerReport.DiscardUnknown(m)
}

var xxx_messageInfo_SerReport proto.InternalMessageInfo

func (m *SerReport) GetReport() []*Report {
	if m != nil {
		return m.Report
	}
	return nil
}

// 世界分区
type SerArea struct {
	Area                 []*Area  `protobuf:"bytes,1,rep,name=area" json:"area,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SerArea) Reset()         { *m = SerArea{} }
func (m *SerArea) String() string { return proto.CompactTextString(m) }
func (*SerArea) ProtoMessage()    {}
func (*SerArea) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{13}
}
func (m *SerArea) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerArea.Unmarshal(m, b)
}
func (m *SerArea) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerArea.Marshal(b, m, deterministic)
}
func (m *SerArea) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerArea.Merge(m, src)
}
func (m *SerArea) XXX_Size() int {
	return xxx_messageInfo_SerArea.Size(m)
}
func (m *SerArea) XXX_DiscardUnknown() {
	xxx_messageInfo_SerArea.DiscardUnknown(m)
}

var xxx_messageInfo_SerArea proto.InternalMessageInfo

func (m *SerArea) GetArea() []*Area {
	if m != nil {
		return m.Area
	}
	return nil
}

// 城池
type SerCity struct {
	City                 []*City  `protobuf:"bytes,1,rep,name=city" json:"city,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SerCity) Reset()         { *m = SerCity{} }
func (m *SerCity) String() string { return proto.CompactTextString(m) }
func (*SerCity) ProtoMessage()    {}
func (*SerCity) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{14}
}
func (m *SerCity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerCity.Unmarshal(m, b)
}
func (m *SerCity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerCity.Marshal(b, m, deterministic)
}
func (m *SerCity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerCity.Merge(m, src)
}
func (m *SerCity) XXX_Size() int {
	return xxx_messageInfo_SerCity.Size(m)
}
func (m *SerCity) XXX_DiscardUnknown() {
	xxx_messageInfo_SerCity.DiscardUnknown(m)
}

var xxx_messageInfo_SerCity proto.InternalMessageInfo

func (m *SerCity) GetCity() []*City {
	if m != nil {
		return m.City
	}
	return nil
}

// 流寇
type SerBandit struct {
	Bandit               []*TwoInt `protobuf:"bytes,1,rep,name=bandit" json:"bandit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SerBandit) Reset()         { *m = SerBandit{} }
func (m *SerBandit) String() string { return proto.CompactTextString(m) }
func (*SerBandit) ProtoMessage()    {}
func (*SerBandit) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{15}
}
func (m *SerBandit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerBandit.Unmarshal(m, b)
}
func (m *SerBandit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerBandit.Marshal(b, m, deterministic)
}
func (m *SerBandit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerBandit.Merge(m, src)
}
func (m *SerBandit) XXX_Size() int {
	return xxx_messageInfo_SerBandit.Size(m)
}
func (m *SerBandit) XXX_DiscardUnknown() {
	xxx_messageInfo_SerBandit.DiscardUnknown(m)
}

var xxx_messageInfo_SerBandit proto.InternalMessageInfo

func (m *SerBandit) GetBandit() []*TwoInt {
	if m != nil {
		return m.Bandit
	}
	return nil
}

// 世界矿点
type SerMine struct {
	Mine                 []*TwoInt    `protobuf:"bytes,1,rep,name=mine" json:"mine,omitempty"`
	Resource             []*TwoInt    `protobuf:"bytes,2,rep,name=resource" json:"resource,omitempty"`
	SuperMine            []*SuperMine `protobuf:"bytes,3,rep,name=superMine" json:"superMine,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SerMine) Reset()         { *m = SerMine{} }
func (m *SerMine) String() string { return proto.CompactTextString(m) }
func (*SerMine) ProtoMessage()    {}
func (*SerMine) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{16}
}
func (m *SerMine) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerMine.Unmarshal(m, b)
}
func (m *SerMine) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerMine.Marshal(b, m, deterministic)
}
func (m *SerMine) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerMine.Merge(m, src)
}
func (m *SerMine) XXX_Size() int {
	return xxx_messageInfo_SerMine.Size(m)
}
func (m *SerMine) XXX_DiscardUnknown() {
	xxx_messageInfo_SerMine.DiscardUnknown(m)
}

var xxx_messageInfo_SerMine proto.InternalMessageInfo

func (m *SerMine) GetMine() []*TwoInt {
	if m != nil {
		return m.Mine
	}
	return nil
}

func (m *SerMine) GetResource() []*TwoInt {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (m *SerMine) GetSuperMine() []*SuperMine {
	if m != nil {
		return m.SuperMine
	}
	return nil
}

// 城战等战斗信息
type SerBattle struct {
	Battle               []*BattlePO `protobuf:"bytes,1,rep,name=battle" json:"battle,omitempty"`
	SpecialBattle        []*BattlePO `protobuf:"bytes,2,rep,name=specialBattle" json:"specialBattle,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *SerBattle) Reset()         { *m = SerBattle{} }
func (m *SerBattle) String() string { return proto.CompactTextString(m) }
func (*SerBattle) ProtoMessage()    {}
func (*SerBattle) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{17}
}
func (m *SerBattle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerBattle.Unmarshal(m, b)
}
func (m *SerBattle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerBattle.Marshal(b, m, deterministic)
}
func (m *SerBattle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerBattle.Merge(m, src)
}
func (m *SerBattle) XXX_Size() int {
	return xxx_messageInfo_SerBattle.Size(m)
}
func (m *SerBattle) XXX_DiscardUnknown() {
	xxx_messageInfo_SerBattle.DiscardUnknown(m)
}

var xxx_messageInfo_SerBattle proto.InternalMessageInfo

func (m *SerBattle) GetBattle() []*BattlePO {
	if m != nil {
		return m.Battle
	}
	return nil
}

func (m *SerBattle) GetSpecialBattle() []*BattlePO {
	if m != nil {
		return m.SpecialBattle
	}
	return nil
}

// 世界任务
type SerWorldTask struct {
	WorldTaskId          *int32       `protobuf:"varint,1,opt,name=worldTaskId" json:"worldTaskId,omitempty"`
	WorldTask            []*WorldTask `protobuf:"bytes,2,rep,name=worldTask" json:"worldTask,omitempty"`
	Force                []*Force     `protobuf:"bytes,3,rep,name=force" json:"force,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SerWorldTask) Reset()         { *m = SerWorldTask{} }
func (m *SerWorldTask) String() string { return proto.CompactTextString(m) }
func (*SerWorldTask) ProtoMessage()    {}
func (*SerWorldTask) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{18}
}
func (m *SerWorldTask) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerWorldTask.Unmarshal(m, b)
}
func (m *SerWorldTask) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerWorldTask.Marshal(b, m, deterministic)
}
func (m *SerWorldTask) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerWorldTask.Merge(m, src)
}
func (m *SerWorldTask) XXX_Size() int {
	return xxx_messageInfo_SerWorldTask.Size(m)
}
func (m *SerWorldTask) XXX_DiscardUnknown() {
	xxx_messageInfo_SerWorldTask.DiscardUnknown(m)
}

var xxx_messageInfo_SerWorldTask proto.InternalMessageInfo

func (m *SerWorldTask) GetWorldTaskId() int32 {
	if m != nil && m.WorldTaskId != nil {
		return *m.WorldTaskId
	}
	return 0
}

func (m *SerWorldTask) GetWorldTask() []*WorldTask {
	if m != nil {
		return m.WorldTask
	}
	return nil
}

func (m *SerWorldTask) GetForce() []*Force {
	if m != nil {
		return m.Force
	}
	return nil
}

// 世界进度
type SerWroldSchedule struct {
	CurrentScheduleId    *int32           `protobuf:"varint,1,opt,name=currentScheduleId" json:"currentScheduleId,omitempty"`
	WorldSchedule        []*WorldSchedule `protobuf:"bytes,2,rep,name=worldSchedule" json:"worldSchedule,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *SerWroldSchedule) Reset()         { *m = SerWroldSchedule{} }
func (m *SerWroldSchedule) String() string { return proto.CompactTextString(m) }
func (*SerWroldSchedule) ProtoMessage()    {}
func (*SerWroldSchedule) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{19}
}
func (m *SerWroldSchedule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerWroldSchedule.Unmarshal(m, b)
}
func (m *SerWroldSchedule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerWroldSchedule.Marshal(b, m, deterministic)
}
func (m *SerWroldSchedule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerWroldSchedule.Merge(m, src)
}
func (m *SerWroldSchedule) XXX_Size() int {
	return xxx_messageInfo_SerWroldSchedule.Size(m)
}
func (m *SerWroldSchedule) XXX_DiscardUnknown() {
	xxx_messageInfo_SerWroldSchedule.DiscardUnknown(m)
}

var xxx_messageInfo_SerWroldSchedule proto.InternalMessageInfo

func (m *SerWroldSchedule) GetCurrentScheduleId() int32 {
	if m != nil && m.CurrentScheduleId != nil {
		return *m.CurrentScheduleId
	}
	return 0
}

func (m *SerWroldSchedule) GetWorldSchedule() []*WorldSchedule {
	if m != nil {
		return m.WorldSchedule
	}
	return nil
}

// 资源
type SerMill struct {
	Mill                 []*Mill         `protobuf:"bytes,1,rep,name=mill" json:"mill,omitempty"`
	BuildExt             []*BuildingBase `protobuf:"bytes,2,rep,name=buildExt" json:"buildExt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SerMill) Reset()         { *m = SerMill{} }
func (m *SerMill) String() string { return proto.CompactTextString(m) }
func (*SerMill) ProtoMessage()    {}
func (*SerMill) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{20}
}
func (m *SerMill) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerMill.Unmarshal(m, b)
}
func (m *SerMill) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerMill.Marshal(b, m, deterministic)
}
func (m *SerMill) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerMill.Merge(m, src)
}
func (m *SerMill) XXX_Size() int {
	return xxx_messageInfo_SerMill.Size(m)
}
func (m *SerMill) XXX_DiscardUnknown() {
	xxx_messageInfo_SerMill.DiscardUnknown(m)
}

var xxx_messageInfo_SerMill proto.InternalMessageInfo

func (m *SerMill) GetMill() []*Mill {
	if m != nil {
		return m.Mill
	}
	return nil
}

func (m *SerMill) GetBuildExt() []*BuildingBase {
	if m != nil {
		return m.BuildExt
	}
	return nil
}

// 兵营募兵
type SerFactory struct {
	Factory              []*Factory `protobuf:"bytes,1,rep,name=factory" json:"factory,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SerFactory) Reset()         { *m = SerFactory{} }
func (m *SerFactory) String() string { return proto.CompactTextString(m) }
func (*SerFactory) ProtoMessage()    {}
func (*SerFactory) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{21}
}
func (m *SerFactory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerFactory.Unmarshal(m, b)
}
func (m *SerFactory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerFactory.Marshal(b, m, deterministic)
}
func (m *SerFactory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerFactory.Merge(m, src)
}
func (m *SerFactory) XXX_Size() int {
	return xxx_messageInfo_SerFactory.Size(m)
}
func (m *SerFactory) XXX_DiscardUnknown() {
	xxx_messageInfo_SerFactory.DiscardUnknown(m)
}

var xxx_messageInfo_SerFactory proto.InternalMessageInfo

func (m *SerFactory) GetFactory() []*Factory {
	if m != nil {
		return m.Factory
	}
	return nil
}

// 官员效果加成
type SerGains struct {
	Gains                []*Gains `protobuf:"bytes,1,rep,name=gains" json:"gains,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SerGains) Reset()         { *m = SerGains{} }
func (m *SerGains) String() string { return proto.CompactTextString(m) }
func (*SerGains) ProtoMessage()    {}
func (*SerGains) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{22}
}
func (m *SerGains) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerGains.Unmarshal(m, b)
}
func (m *SerGains) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerGains.Marshal(b, m, deterministic)
}
func (m *SerGains) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerGains.Merge(m, src)
}
func (m *SerGains) XXX_Size() int {
	return xxx_messageInfo_SerGains.Size(m)
}
func (m *SerGains) XXX_DiscardUnknown() {
	xxx_messageInfo_SerGains.DiscardUnknown(m)
}

var xxx_messageInfo_SerGains proto.InternalMessageInfo

func (m *SerGains) GetGains() []*Gains {
	if m != nil {
		return m.Gains
	}
	return nil
}

// 行军队列
type SerArmy struct {
	Army                 []*Army  `protobuf:"bytes,1,rep,name=army" json:"army,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SerArmy) Reset()         { *m = SerArmy{} }
func (m *SerArmy) String() string { return proto.CompactTextString(m) }
func (*SerArmy) ProtoMessage()    {}
func (*SerArmy) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{23}
}
func (m *SerArmy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerArmy.Unmarshal(m, b)
}
func (m *SerArmy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerArmy.Marshal(b, m, deterministic)
}
func (m *SerArmy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerArmy.Merge(m, src)
}
func (m *SerArmy) XXX_Size() int {
	return xxx_messageInfo_SerArmy.Size(m)
}
func (m *SerArmy) XXX_DiscardUnknown() {
	xxx_messageInfo_SerArmy.DiscardUnknown(m)
}

var xxx_messageInfo_SerArmy proto.InternalMessageInfo

func (m *SerArmy) GetArmy() []*Army {
	if m != nil {
		return m.Army
	}
	return nil
}

// 科技
type SerTech struct {
	Tech                 []*Tech  `protobuf:"bytes,1,rep,name=tech" json:"tech,omitempty"`
	TechQue              *TechQue `protobuf:"bytes,2,opt,name=techQue" json:"techQue,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SerTech) Reset()         { *m = SerTech{} }
func (m *SerTech) String() string { return proto.CompactTextString(m) }
func (*SerTech) ProtoMessage()    {}
func (*SerTech) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{24}
}
func (m *SerTech) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerTech.Unmarshal(m, b)
}
func (m *SerTech) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerTech.Marshal(b, m, deterministic)
}
func (m *SerTech) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerTech.Merge(m, src)
}
func (m *SerTech) XXX_Size() int {
	return xxx_messageInfo_SerTech.Size(m)
}
func (m *SerTech) XXX_DiscardUnknown() {
	xxx_messageInfo_SerTech.DiscardUnknown(m)
}

var xxx_messageInfo_SerTech proto.InternalMessageInfo

func (m *SerTech) GetTech() []*Tech {
	if m != nil {
		return m.Tech
	}
	return nil
}

func (m *SerTech) GetTechQue() *TechQue {
	if m != nil {
		return m.TechQue
	}
	return nil
}

// 化工厂
type SerChemical struct {
	ExpandLv             *int32         `protobuf:"varint,1,opt,name=expandLv" json:"expandLv,omitempty"`
	Que                  []*ChemicalQue `protobuf:"bytes,2,rep,name=que" json:"que,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SerChemical) Reset()         { *m = SerChemical{} }
func (m *SerChemical) String() string { return proto.CompactTextString(m) }
func (*SerChemical) ProtoMessage()    {}
func (*SerChemical) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{25}
}
func (m *SerChemical) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerChemical.Unmarshal(m, b)
}
func (m *SerChemical) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerChemical.Marshal(b, m, deterministic)
}
func (m *SerChemical) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerChemical.Merge(m, src)
}
func (m *SerChemical) XXX_Size() int {
	return xxx_messageInfo_SerChemical.Size(m)
}
func (m *SerChemical) XXX_DiscardUnknown() {
	xxx_messageInfo_SerChemical.DiscardUnknown(m)
}

var xxx_messageInfo_SerChemical proto.InternalMessageInfo

func (m *SerChemical) GetExpandLv() int32 {
	if m != nil && m.ExpandLv != nil {
		return *m.ExpandLv
	}
	return 0
}

func (m *SerChemical) GetQue() []*ChemicalQue {
	if m != nil {
		return m.Que
	}
	return nil
}

// 聚宝盆
type SerTreasure struct {
	Status               *int32    `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	EndTime              *int32    `protobuf:"varint,2,opt,name=endTime" json:"endTime,omitempty"`
	ResTime              *int32    `protobuf:"varint,3,opt,name=resTime" json:"resTime,omitempty"`
	Red                  *bool     `protobuf:"varint,4,opt,name=red" json:"red,omitempty"`
	UpdTime              *int32    `protobuf:"varint,5,opt,name=updTime" json:"updTime,omitempty"`
	IdStatus             []*TwoInt `protobuf:"bytes,6,rep,name=idStatus" json:"idStatus,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SerTreasure) Reset()         { *m = SerTreasure{} }
func (m *SerTreasure) String() string { return proto.CompactTextString(m) }
func (*SerTreasure) ProtoMessage()    {}
func (*SerTreasure) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{26}
}
func (m *SerTreasure) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerTreasure.Unmarshal(m, b)
}
func (m *SerTreasure) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerTreasure.Marshal(b, m, deterministic)
}
func (m *SerTreasure) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerTreasure.Merge(m, src)
}
func (m *SerTreasure) XXX_Size() int {
	return xxx_messageInfo_SerTreasure.Size(m)
}
func (m *SerTreasure) XXX_DiscardUnknown() {
	xxx_messageInfo_SerTreasure.DiscardUnknown(m)
}

var xxx_messageInfo_SerTreasure proto.InternalMessageInfo

func (m *SerTreasure) GetStatus() int32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

func (m *SerTreasure) GetEndTime() int32 {
	if m != nil && m.EndTime != nil {
		return *m.EndTime
	}
	return 0
}

func (m *SerTreasure) GetResTime() int32 {
	if m != nil && m.ResTime != nil {
		return *m.ResTime
	}
	return 0
}

func (m *SerTreasure) GetRed() bool {
	if m != nil && m.Red != nil {
		return *m.Red
	}
	return false
}

func (m *SerTreasure) GetUpdTime() int32 {
	if m != nil && m.UpdTime != nil {
		return *m.UpdTime
	}
	return 0
}

func (m *SerTreasure) GetIdStatus() []*TwoInt {
	if m != nil {
		return m.IdStatus
	}
	return nil
}

// 完成记录 招募
type SerTypeInfo struct {
	History              []*History `protobuf:"bytes,1,rep,name=history" json:"history,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SerTypeInfo) Reset()         { *m = SerTypeInfo{} }
func (m *SerTypeInfo) String() string { return proto.CompactTextString(m) }
func (*SerTypeInfo) ProtoMessage()    {}
func (*SerTypeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{27}
}
func (m *SerTypeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerTypeInfo.Unmarshal(m, b)
}
func (m *SerTypeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerTypeInfo.Marshal(b, m, deterministic)
}
func (m *SerTypeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerTypeInfo.Merge(m, src)
}
func (m *SerTypeInfo) XXX_Size() int {
	return xxx_messageInfo_SerTypeInfo.Size(m)
}
func (m *SerTypeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SerTypeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SerTypeInfo proto.InternalMessageInfo

func (m *SerTypeInfo) GetHistory() []*History {
	if m != nil {
		return m.History
	}
	return nil
}

// 商店
type SerShop struct {
	IdCnt                []*TwoInt `protobuf:"bytes,1,rep,name=idCnt" json:"idCnt,omitempty"`
	VipId                []int32   `protobuf:"varint,2,rep,name=vipId" json:"vipId,omitempty"`
	RefreshTime          *int32    `protobuf:"varint,3,opt,name=refreshTime" json:"refreshTime,omitempty"`
	FreeCnt              []*TwoInt `protobuf:"bytes,4,rep,name=freeCnt" json:"freeCnt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SerShop) Reset()         { *m = SerShop{} }
func (m *SerShop) String() string { return proto.CompactTextString(m) }
func (*SerShop) ProtoMessage()    {}
func (*SerShop) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{28}
}
func (m *SerShop) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerShop.Unmarshal(m, b)
}
func (m *SerShop) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerShop.Marshal(b, m, deterministic)
}
func (m *SerShop) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerShop.Merge(m, src)
}
func (m *SerShop) XXX_Size() int {
	return xxx_messageInfo_SerShop.Size(m)
}
func (m *SerShop) XXX_DiscardUnknown() {
	xxx_messageInfo_SerShop.DiscardUnknown(m)
}

var xxx_messageInfo_SerShop proto.InternalMessageInfo

func (m *SerShop) GetIdCnt() []*TwoInt {
	if m != nil {
		return m.IdCnt
	}
	return nil
}

func (m *SerShop) GetVipId() []int32 {
	if m != nil {
		return m.VipId
	}
	return nil
}

func (m *SerShop) GetRefreshTime() int32 {
	if m != nil && m.RefreshTime != nil {
		return *m.RefreshTime
	}
	return 0
}

func (m *SerShop) GetFreeCnt() []*TwoInt {
	if m != nil {
		return m.FreeCnt
	}
	return nil
}

// 军团荣誉排行榜
type SerPartyHonorRank struct {
	Rank                 []*PartyHonorRank `protobuf:"bytes,1,rep,name=rank" json:"rank,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SerPartyHonorRank) Reset()         { *m = SerPartyHonorRank{} }
func (m *SerPartyHonorRank) String() string { return proto.CompactTextString(m) }
func (*SerPartyHonorRank) ProtoMessage()    {}
func (*SerPartyHonorRank) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{29}
}
func (m *SerPartyHonorRank) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerPartyHonorRank.Unmarshal(m, b)
}
func (m *SerPartyHonorRank) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerPartyHonorRank.Marshal(b, m, deterministic)
}
func (m *SerPartyHonorRank) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerPartyHonorRank.Merge(m, src)
}
func (m *SerPartyHonorRank) XXX_Size() int {
	return xxx_messageInfo_SerPartyHonorRank.Size(m)
}
func (m *SerPartyHonorRank) XXX_DiscardUnknown() {
	xxx_messageInfo_SerPartyHonorRank.DiscardUnknown(m)
}

var xxx_messageInfo_SerPartyHonorRank proto.InternalMessageInfo

func (m *SerPartyHonorRank) GetRank() []*PartyHonorRank {
	if m != nil {
		return m.Rank
	}
	return nil
}

// 军团日志
type SerPartyLog struct {
	Log                  []*PartyLog `protobuf:"bytes,1,rep,name=log" json:"log,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *SerPartyLog) Reset()         { *m = SerPartyLog{} }
func (m *SerPartyLog) String() string { return proto.CompactTextString(m) }
func (*SerPartyLog) ProtoMessage()    {}
func (*SerPartyLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{30}
}
func (m *SerPartyLog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerPartyLog.Unmarshal(m, b)
}
func (m *SerPartyLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerPartyLog.Marshal(b, m, deterministic)
}
func (m *SerPartyLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerPartyLog.Merge(m, src)
}
func (m *SerPartyLog) XXX_Size() int {
	return xxx_messageInfo_SerPartyLog.Size(m)
}
func (m *SerPartyLog) XXX_DiscardUnknown() {
	xxx_messageInfo_SerPartyLog.DiscardUnknown(m)
}

var xxx_messageInfo_SerPartyLog proto.InternalMessageInfo

func (m *SerPartyLog) GetLog() []*PartyLog {
	if m != nil {
		return m.Log
	}
	return nil
}

// 军团官员
type SerPartyJob struct {
	Job                  []*PartyJob      `protobuf:"bytes,1,rep,name=job" json:"job,omitempty"`
	Elect                []*PartyElection `protobuf:"bytes,2,rep,name=elect" json:"elect,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *SerPartyJob) Reset()         { *m = SerPartyJob{} }
func (m *SerPartyJob) String() string { return proto.CompactTextString(m) }
func (*SerPartyJob) ProtoMessage()    {}
func (*SerPartyJob) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{31}
}
func (m *SerPartyJob) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerPartyJob.Unmarshal(m, b)
}
func (m *SerPartyJob) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerPartyJob.Marshal(b, m, deterministic)
}
func (m *SerPartyJob) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerPartyJob.Merge(m, src)
}
func (m *SerPartyJob) XXX_Size() int {
	return xxx_messageInfo_SerPartyJob.Size(m)
}
func (m *SerPartyJob) XXX_DiscardUnknown() {
	xxx_messageInfo_SerPartyJob.DiscardUnknown(m)
}

var xxx_messageInfo_SerPartyJob proto.InternalMessageInfo

func (m *SerPartyJob) GetJob() []*PartyJob {
	if m != nil {
		return m.Job
	}
	return nil
}

func (m *SerPartyJob) GetElect() []*PartyElection {
	if m != nil {
		return m.Elect
	}
	return nil
}

// 军团的附加信息
type SerPartyExt struct {
	CabinetLeadLv              *int32            `protobuf:"varint,1,opt,name=cabinetLeadLv" json:"cabinetLeadLv,omitempty"`
	CabinetLeadExp             *int64            `protobuf:"varint,2,opt,name=cabinetLeadExp" json:"cabinetLeadExp,omitempty"`
	FirstOpenJobTime           *int32            `protobuf:"varint,3,opt,name=firstOpenJobTime" json:"firstOpenJobTime,omitempty"`
	SupplyRecord               *SerSupplyRecord  `protobuf:"bytes,4,opt,name=supplyRecord" json:"supplyRecord,omitempty"`
	SuperSupply                *PartySuperSupply `protobuf:"bytes,5,opt,name=superSupply" json:"superSupply,omitempty"`
	PartySupply                []*PartySupply    `protobuf:"bytes,6,rep,name=partySupply" json:"partySupply,omitempty"`
	WorldWarRankingIntegral    *int32            `protobuf:"varint,7,opt,name=worldWarRankingIntegral" json:"worldWarRankingIntegral,omitempty"`
	WorldWarAttackCityIntegral *int32            `protobuf:"varint,8,opt,name=worldWarAttackCityIntegral" json:"worldWarAttackCityIntegral,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}          `json:"-"`
	XXX_unrecognized           []byte            `json:"-"`
	XXX_sizecache              int32             `json:"-"`
}

func (m *SerPartyExt) Reset()         { *m = SerPartyExt{} }
func (m *SerPartyExt) String() string { return proto.CompactTextString(m) }
func (*SerPartyExt) ProtoMessage()    {}
func (*SerPartyExt) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{32}
}
func (m *SerPartyExt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerPartyExt.Unmarshal(m, b)
}
func (m *SerPartyExt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerPartyExt.Marshal(b, m, deterministic)
}
func (m *SerPartyExt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerPartyExt.Merge(m, src)
}
func (m *SerPartyExt) XXX_Size() int {
	return xxx_messageInfo_SerPartyExt.Size(m)
}
func (m *SerPartyExt) XXX_DiscardUnknown() {
	xxx_messageInfo_SerPartyExt.DiscardUnknown(m)
}

var xxx_messageInfo_SerPartyExt proto.InternalMessageInfo

func (m *SerPartyExt) GetCabinetLeadLv() int32 {
	if m != nil && m.CabinetLeadLv != nil {
		return *m.CabinetLeadLv
	}
	return 0
}

func (m *SerPartyExt) GetCabinetLeadExp() int64 {
	if m != nil && m.CabinetLeadExp != nil {
		return *m.CabinetLeadExp
	}
	return 0
}

func (m *SerPartyExt) GetFirstOpenJobTime() int32 {
	if m != nil && m.FirstOpenJobTime != nil {
		return *m.FirstOpenJobTime
	}
	return 0
}

func (m *SerPartyExt) GetSupplyRecord() *SerSupplyRecord {
	if m != nil {
		return m.SupplyRecord
	}
	return nil
}

func (m *SerPartyExt) GetSuperSupply() *PartySuperSupply {
	if m != nil {
		return m.SuperSupply
	}
	return nil
}

func (m *SerPartyExt) GetPartySupply() []*PartySupply {
	if m != nil {
		return m.PartySupply
	}
	return nil
}

func (m *SerPartyExt) GetWorldWarRankingIntegral() int32 {
	if m != nil && m.WorldWarRankingIntegral != nil {
		return *m.WorldWarRankingIntegral
	}
	return 0
}

func (m *SerPartyExt) GetWorldWarAttackCityIntegral() int32 {
	if m != nil && m.WorldWarAttackCityIntegral != nil {
		return *m.WorldWarAttackCityIntegral
	}
	return 0
}

// 个人资源点
type SerAcquisition struct {
	CollectDate          *int32    `protobuf:"varint,1,opt,name=collectDate" json:"collectDate,omitempty"`
	Reward               []*TwoInt `protobuf:"bytes,2,rep,name=reward" json:"reward,omitempty"`
	Collect              []*TwoInt `protobuf:"bytes,3,rep,name=collect" json:"collect,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SerAcquisition) Reset()         { *m = SerAcquisition{} }
func (m *SerAcquisition) String() string { return proto.CompactTextString(m) }
func (*SerAcquisition) ProtoMessage()    {}
func (*SerAcquisition) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{33}
}
func (m *SerAcquisition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerAcquisition.Unmarshal(m, b)
}
func (m *SerAcquisition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerAcquisition.Marshal(b, m, deterministic)
}
func (m *SerAcquisition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerAcquisition.Merge(m, src)
}
func (m *SerAcquisition) XXX_Size() int {
	return xxx_messageInfo_SerAcquisition.Size(m)
}
func (m *SerAcquisition) XXX_DiscardUnknown() {
	xxx_messageInfo_SerAcquisition.DiscardUnknown(m)
}

var xxx_messageInfo_SerAcquisition proto.InternalMessageInfo

func (m *SerAcquisition) GetCollectDate() int32 {
	if m != nil && m.CollectDate != nil {
		return *m.CollectDate
	}
	return 0
}

func (m *SerAcquisition) GetReward() []*TwoInt {
	if m != nil {
		return m.Reward
	}
	return nil
}

func (m *SerAcquisition) GetCollect() []*TwoInt {
	if m != nil {
		return m.Collect
	}
	return nil
}

// 个人成就
type SerTrophy struct {
	Trophy               []*TwoInt `protobuf:"bytes,1,rep,name=trophy" json:"trophy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SerTrophy) Reset()         { *m = SerTrophy{} }
func (m *SerTrophy) String() string { return proto.CompactTextString(m) }
func (*SerTrophy) ProtoMessage()    {}
func (*SerTrophy) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{34}
}
func (m *SerTrophy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerTrophy.Unmarshal(m, b)
}
func (m *SerTrophy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerTrophy.Marshal(b, m, deterministic)
}
func (m *SerTrophy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerTrophy.Merge(m, src)
}
func (m *SerTrophy) XXX_Size() int {
	return xxx_messageInfo_SerTrophy.Size(m)
}
func (m *SerTrophy) XXX_DiscardUnknown() {
	xxx_messageInfo_SerTrophy.DiscardUnknown(m)
}

var xxx_messageInfo_SerTrophy proto.InternalMessageInfo

func (m *SerTrophy) GetTrophy() []*TwoInt {
	if m != nil {
		return m.Trophy
	}
	return nil
}

// 全服成就
type SerGlobalTrophy struct {
	Glod                 *int64       `protobuf:"varint,1,opt,name=glod" json:"glod,omitempty"`
	SolarTermsStartTime  *int32       `protobuf:"varint,2,opt,name=solarTermsStartTime" json:"solarTermsStartTime,omitempty"`
	RankEquips           []*RankEquip `protobuf:"bytes,3,rep,name=rankEquips" json:"rankEquips,omitempty"`
	PassMultCombat       []int32      `protobuf:"varint,4,rep,name=passMultCombat" json:"passMultCombat,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SerGlobalTrophy) Reset()         { *m = SerGlobalTrophy{} }
func (m *SerGlobalTrophy) String() string { return proto.CompactTextString(m) }
func (*SerGlobalTrophy) ProtoMessage()    {}
func (*SerGlobalTrophy) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{35}
}
func (m *SerGlobalTrophy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerGlobalTrophy.Unmarshal(m, b)
}
func (m *SerGlobalTrophy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerGlobalTrophy.Marshal(b, m, deterministic)
}
func (m *SerGlobalTrophy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerGlobalTrophy.Merge(m, src)
}
func (m *SerGlobalTrophy) XXX_Size() int {
	return xxx_messageInfo_SerGlobalTrophy.Size(m)
}
func (m *SerGlobalTrophy) XXX_DiscardUnknown() {
	xxx_messageInfo_SerGlobalTrophy.DiscardUnknown(m)
}

var xxx_messageInfo_SerGlobalTrophy proto.InternalMessageInfo

func (m *SerGlobalTrophy) GetGlod() int64 {
	if m != nil && m.Glod != nil {
		return *m.Glod
	}
	return 0
}

func (m *SerGlobalTrophy) GetSolarTermsStartTime() int32 {
	if m != nil && m.SolarTermsStartTime != nil {
		return *m.SolarTermsStartTime
	}
	return 0
}

func (m *SerGlobalTrophy) GetRankEquips() []*RankEquip {
	if m != nil {
		return m.RankEquips
	}
	return nil
}

func (m *SerGlobalTrophy) GetPassMultCombat() []int32 {
	if m != nil {
		return m.PassMultCombat
	}
	return nil
}

// 奖励(类型,奖励) 重建家园
type SerTypeAwards struct {
	Reward               []*TypeAwards `protobuf:"bytes,1,rep,name=reward" json:"reward,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SerTypeAwards) Reset()         { *m = SerTypeAwards{} }
func (m *SerTypeAwards) String() string { return proto.CompactTextString(m) }
func (*SerTypeAwards) ProtoMessage()    {}
func (*SerTypeAwards) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{36}
}
func (m *SerTypeAwards) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerTypeAwards.Unmarshal(m, b)
}
func (m *SerTypeAwards) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerTypeAwards.Marshal(b, m, deterministic)
}
func (m *SerTypeAwards) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerTypeAwards.Merge(m, src)
}
func (m *SerTypeAwards) XXX_Size() int {
	return xxx_messageInfo_SerTypeAwards.Size(m)
}
func (m *SerTypeAwards) XXX_DiscardUnknown() {
	xxx_messageInfo_SerTypeAwards.DiscardUnknown(m)
}

var xxx_messageInfo_SerTypeAwards proto.InternalMessageInfo

func (m *SerTypeAwards) GetReward() []*TypeAwards {
	if m != nil {
		return m.Reward
	}
	return nil
}

//超级武器(国器)
type SerSuperEquip struct {
	SuperEquip           []*SuperEquip `protobuf:"bytes,1,rep,name=superEquip" json:"superEquip,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SerSuperEquip) Reset()         { *m = SerSuperEquip{} }
func (m *SerSuperEquip) String() string { return proto.CompactTextString(m) }
func (*SerSuperEquip) ProtoMessage()    {}
func (*SerSuperEquip) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{37}
}
func (m *SerSuperEquip) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerSuperEquip.Unmarshal(m, b)
}
func (m *SerSuperEquip) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerSuperEquip.Marshal(b, m, deterministic)
}
func (m *SerSuperEquip) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerSuperEquip.Merge(m, src)
}
func (m *SerSuperEquip) XXX_Size() int {
	return xxx_messageInfo_SerSuperEquip.Size(m)
}
func (m *SerSuperEquip) XXX_DiscardUnknown() {
	xxx_messageInfo_SerSuperEquip.DiscardUnknown(m)
}

var xxx_messageInfo_SerSuperEquip proto.InternalMessageInfo

func (m *SerSuperEquip) GetSuperEquip() []*SuperEquip {
	if m != nil {
		return m.SuperEquip
	}
	return nil
}

//超级武器队列(国器)
type SerSuperEquipQue struct {
	Que                  []*TwoInt `protobuf:"bytes,1,rep,name=que" json:"que,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SerSuperEquipQue) Reset()         { *m = SerSuperEquipQue{} }
func (m *SerSuperEquipQue) String() string { return proto.CompactTextString(m) }
func (*SerSuperEquipQue) ProtoMessage()    {}
func (*SerSuperEquipQue) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{38}
}
func (m *SerSuperEquipQue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerSuperEquipQue.Unmarshal(m, b)
}
func (m *SerSuperEquipQue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerSuperEquipQue.Marshal(b, m, deterministic)
}
func (m *SerSuperEquipQue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerSuperEquipQue.Merge(m, src)
}
func (m *SerSuperEquipQue) XXX_Size() int {
	return xxx_messageInfo_SerSuperEquipQue.Size(m)
}
func (m *SerSuperEquipQue) XXX_DiscardUnknown() {
	xxx_messageInfo_SerSuperEquipQue.DiscardUnknown(m)
}

var xxx_messageInfo_SerSuperEquipQue proto.InternalMessageInfo

func (m *SerSuperEquipQue) GetQue() []*TwoInt {
	if m != nil {
		return m.Que
	}
	return nil
}

//操作记录
type SerRoleOpt struct {
	Opt                  []*RoleOpt `protobuf:"bytes,1,rep,name=opt" json:"opt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SerRoleOpt) Reset()         { *m = SerRoleOpt{} }
func (m *SerRoleOpt) String() string { return proto.CompactTextString(m) }
func (*SerRoleOpt) ProtoMessage()    {}
func (*SerRoleOpt) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{39}
}
func (m *SerRoleOpt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerRoleOpt.Unmarshal(m, b)
}
func (m *SerRoleOpt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerRoleOpt.Marshal(b, m, deterministic)
}
func (m *SerRoleOpt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerRoleOpt.Merge(m, src)
}
func (m *SerRoleOpt) XXX_Size() int {
	return xxx_messageInfo_SerRoleOpt.Size(m)
}
func (m *SerRoleOpt) XXX_DiscardUnknown() {
	xxx_messageInfo_SerRoleOpt.DiscardUnknown(m)
}

var xxx_messageInfo_SerRoleOpt proto.InternalMessageInfo

func (m *SerRoleOpt) GetOpt() []*RoleOpt {
	if m != nil {
		return m.Opt
	}
	return nil
}

//城墙NPC
type SerWallNpc struct {
	WallNpc              []*WallNpc `protobuf:"bytes,1,rep,name=wallNpc" json:"wallNpc,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SerWallNpc) Reset()         { *m = SerWallNpc{} }
func (m *SerWallNpc) String() string { return proto.CompactTextString(m) }
func (*SerWallNpc) ProtoMessage()    {}
func (*SerWallNpc) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{40}
}
func (m *SerWallNpc) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerWallNpc.Unmarshal(m, b)
}
func (m *SerWallNpc) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerWallNpc.Marshal(b, m, deterministic)
}
func (m *SerWallNpc) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerWallNpc.Merge(m, src)
}
func (m *SerWallNpc) XXX_Size() int {
	return xxx_messageInfo_SerWallNpc.Size(m)
}
func (m *SerWallNpc) XXX_DiscardUnknown() {
	xxx_messageInfo_SerWallNpc.DiscardUnknown(m)
}

var xxx_messageInfo_SerWallNpc proto.InternalMessageInfo

func (m *SerWallNpc) GetWallNpc() []*WallNpc {
	if m != nil {
		return m.WallNpc
	}
	return nil
}

//效果
type SerEffects struct {
	Effect               []*Effect `protobuf:"bytes,1,rep,name=effect" json:"effect,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SerEffects) Reset()         { *m = SerEffects{} }
func (m *SerEffects) String() string { return proto.CompactTextString(m) }
func (*SerEffects) ProtoMessage()    {}
func (*SerEffects) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{41}
}
func (m *SerEffects) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerEffects.Unmarshal(m, b)
}
func (m *SerEffects) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerEffects.Marshal(b, m, deterministic)
}
func (m *SerEffects) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerEffects.Merge(m, src)
}
func (m *SerEffects) XXX_Size() int {
	return xxx_messageInfo_SerEffects.Size(m)
}
func (m *SerEffects) XXX_DiscardUnknown() {
	xxx_messageInfo_SerEffects.DiscardUnknown(m)
}

var xxx_messageInfo_SerEffects proto.InternalMessageInfo

func (m *SerEffects) GetEffect() []*Effect {
	if m != nil {
		return m.Effect
	}
	return nil
}

//好友列表
type SerFriend struct {
	DbFriend             []*DbFriend `protobuf:"bytes,1,rep,name=dbFriend" json:"dbFriend,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *SerFriend) Reset()         { *m = SerFriend{} }
func (m *SerFriend) String() string { return proto.CompactTextString(m) }
func (*SerFriend) ProtoMessage()    {}
func (*SerFriend) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{42}
}
func (m *SerFriend) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerFriend.Unmarshal(m, b)
}
func (m *SerFriend) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerFriend.Marshal(b, m, deterministic)
}
func (m *SerFriend) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerFriend.Merge(m, src)
}
func (m *SerFriend) XXX_Size() int {
	return xxx_messageInfo_SerFriend.Size(m)
}
func (m *SerFriend) XXX_DiscardUnknown() {
	xxx_messageInfo_SerFriend.DiscardUnknown(m)
}

var xxx_messageInfo_SerFriend proto.InternalMessageInfo

func (m *SerFriend) GetDbFriend() []*DbFriend {
	if m != nil {
		return m.DbFriend
	}
	return nil
}

//师徒
type SerMasterApprentice struct {
	Master               *DbMasterApprentice   `protobuf:"bytes,1,opt,name=master" json:"master,omitempty"`
	Apprentices          []*DbMasterApprentice `protobuf:"bytes,2,rep,name=apprentices" json:"apprentices,omitempty"`
	AwardedIds           []*TwoInt             `protobuf:"bytes,3,rep,name=awardedIds" json:"awardedIds,omitempty"`
	BoughtIds            []int32               `protobuf:"varint,4,rep,name=boughtIds" json:"boughtIds,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *SerMasterApprentice) Reset()         { *m = SerMasterApprentice{} }
func (m *SerMasterApprentice) String() string { return proto.CompactTextString(m) }
func (*SerMasterApprentice) ProtoMessage()    {}
func (*SerMasterApprentice) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{43}
}
func (m *SerMasterApprentice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerMasterApprentice.Unmarshal(m, b)
}
func (m *SerMasterApprentice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerMasterApprentice.Marshal(b, m, deterministic)
}
func (m *SerMasterApprentice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerMasterApprentice.Merge(m, src)
}
func (m *SerMasterApprentice) XXX_Size() int {
	return xxx_messageInfo_SerMasterApprentice.Size(m)
}
func (m *SerMasterApprentice) XXX_DiscardUnknown() {
	xxx_messageInfo_SerMasterApprentice.DiscardUnknown(m)
}

var xxx_messageInfo_SerMasterApprentice proto.InternalMessageInfo

func (m *SerMasterApprentice) GetMaster() *DbMasterApprentice {
	if m != nil {
		return m.Master
	}
	return nil
}

func (m *SerMasterApprentice) GetApprentices() []*DbMasterApprentice {
	if m != nil {
		return m.Apprentices
	}
	return nil
}

func (m *SerMasterApprentice) GetAwardedIds() []*TwoInt {
	if m != nil {
		return m.AwardedIds
	}
	return nil
}

func (m *SerMasterApprentice) GetBoughtIds() []int32 {
	if m != nil {
		return m.BoughtIds
	}
	return nil
}

//内阁相关存储数据
type SerCabinet struct {
	PrePlanId            *int32   `protobuf:"varint,1,opt,name=prePlanId" json:"prePlanId,omitempty"`
	CurPlanId            *int32   `protobuf:"varint,2,opt,name=curPlanId" json:"curPlanId,omitempty"`
	LeadStep             *int32   `protobuf:"varint,3,opt,name=leadStep" json:"leadStep,omitempty"`
	IsFinsh              *bool    `protobuf:"varint,4,opt,name=isFinsh" json:"isFinsh,omitempty"`
	IsCreateLead         *bool    `protobuf:"varint,5,opt,name=isCreateLead" json:"isCreateLead,omitempty"`
	IsLvFinish           *bool    `protobuf:"varint,6,opt,name=isLvFinish" json:"isLvFinish,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SerCabinet) Reset()         { *m = SerCabinet{} }
func (m *SerCabinet) String() string { return proto.CompactTextString(m) }
func (*SerCabinet) ProtoMessage()    {}
func (*SerCabinet) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{44}
}
func (m *SerCabinet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerCabinet.Unmarshal(m, b)
}
func (m *SerCabinet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerCabinet.Marshal(b, m, deterministic)
}
func (m *SerCabinet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerCabinet.Merge(m, src)
}
func (m *SerCabinet) XXX_Size() int {
	return xxx_messageInfo_SerCabinet.Size(m)
}
func (m *SerCabinet) XXX_DiscardUnknown() {
	xxx_messageInfo_SerCabinet.DiscardUnknown(m)
}

var xxx_messageInfo_SerCabinet proto.InternalMessageInfo

func (m *SerCabinet) GetPrePlanId() int32 {
	if m != nil && m.PrePlanId != nil {
		return *m.PrePlanId
	}
	return 0
}

func (m *SerCabinet) GetCurPlanId() int32 {
	if m != nil && m.CurPlanId != nil {
		return *m.CurPlanId
	}
	return 0
}

func (m *SerCabinet) GetLeadStep() int32 {
	if m != nil && m.LeadStep != nil {
		return *m.LeadStep
	}
	return 0
}

func (m *SerCabinet) GetIsFinsh() bool {
	if m != nil && m.IsFinsh != nil {
		return *m.IsFinsh
	}
	return false
}

func (m *SerCabinet) GetIsCreateLead() bool {
	if m != nil && m.IsCreateLead != nil {
		return *m.IsCreateLead
	}
	return false
}

func (m *SerCabinet) GetIsLvFinish() bool {
	if m != nil && m.IsLvFinish != nil {
		return *m.IsLvFinish
	}
	return false
}

// 地图点兵统领
type SerCabinetLead struct {
	CabinetLead          []*CabinetLead `protobuf:"bytes,1,rep,name=cabinetLead" json:"cabinetLead,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SerCabinetLead) Reset()         { *m = SerCabinetLead{} }
func (m *SerCabinetLead) String() string { return proto.CompactTextString(m) }
func (*SerCabinetLead) ProtoMessage()    {}
func (*SerCabinetLead) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{45}
}
func (m *SerCabinetLead) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerCabinetLead.Unmarshal(m, b)
}
func (m *SerCabinetLead) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerCabinetLead.Marshal(b, m, deterministic)
}
func (m *SerCabinetLead) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerCabinetLead.Merge(m, src)
}
func (m *SerCabinetLead) XXX_Size() int {
	return xxx_messageInfo_SerCabinetLead.Size(m)
}
func (m *SerCabinetLead) XXX_DiscardUnknown() {
	xxx_messageInfo_SerCabinetLead.DiscardUnknown(m)
}

var xxx_messageInfo_SerCabinetLead proto.InternalMessageInfo

func (m *SerCabinetLead) GetCabinetLead() []*CabinetLead {
	if m != nil {
		return m.CabinetLead
	}
	return nil
}

// 地图盖世太保,飞艇
type SerGestapo struct {
	Gestapo              []*Gestapo `protobuf:"bytes,1,rep,name=gestapo" json:"gestapo,omitempty"`
	Airship              []*Airship `protobuf:"bytes,2,rep,name=airship" json:"airship,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SerGestapo) Reset()         { *m = SerGestapo{} }
func (m *SerGestapo) String() string { return proto.CompactTextString(m) }
func (*SerGestapo) ProtoMessage()    {}
func (*SerGestapo) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{46}
}
func (m *SerGestapo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerGestapo.Unmarshal(m, b)
}
func (m *SerGestapo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerGestapo.Marshal(b, m, deterministic)
}
func (m *SerGestapo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerGestapo.Merge(m, src)
}
func (m *SerGestapo) XXX_Size() int {
	return xxx_messageInfo_SerGestapo.Size(m)
}
func (m *SerGestapo) XXX_DiscardUnknown() {
	xxx_messageInfo_SerGestapo.DiscardUnknown(m)
}

var xxx_messageInfo_SerGestapo proto.InternalMessageInfo

func (m *SerGestapo) GetGestapo() []*Gestapo {
	if m != nil {
		return m.Gestapo
	}
	return nil
}

func (m *SerGestapo) GetAirship() []*Airship {
	if m != nil {
		return m.Airship
	}
	return nil
}

// 公用数据的额外字段
type SerGlobalExt struct {
	Boss                   []*SerLightningWarBoss `protobuf:"bytes,1,rep,name=boss" json:"boss,omitempty"`
	SendChatCnt            []*TwoInt              `protobuf:"bytes,2,rep,name=sendChatCnt" json:"sendChatCnt,omitempty"`
	BerlinWar              *SerBerlinWar          `protobuf:"bytes,3,opt,name=berlinWar" json:"berlinWar,omitempty"`
	HonorDaily             *SerHonorDaily         `protobuf:"bytes,4,opt,name=honorDaily" json:"honorDaily,omitempty"`
	GlobalRebellion        *GlobalRebellion       `protobuf:"bytes,5,opt,name=globalRebellion" json:"globalRebellion,omitempty"`
	CounterAttack          *SerCounterAttack      `protobuf:"bytes,6,opt,name=counterAttack" json:"counterAttack,omitempty"`
	CrossCityNpcChgAttrCnt *int32                 `protobuf:"varint,7,opt,name=crossCityNpcChgAttrCnt" json:"crossCityNpcChgAttrCnt,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}               `json:"-"`
	XXX_unrecognized       []byte                 `json:"-"`
	XXX_sizecache          int32                  `json:"-"`
}

func (m *SerGlobalExt) Reset()         { *m = SerGlobalExt{} }
func (m *SerGlobalExt) String() string { return proto.CompactTextString(m) }
func (*SerGlobalExt) ProtoMessage()    {}
func (*SerGlobalExt) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{47}
}
func (m *SerGlobalExt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerGlobalExt.Unmarshal(m, b)
}
func (m *SerGlobalExt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerGlobalExt.Marshal(b, m, deterministic)
}
func (m *SerGlobalExt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerGlobalExt.Merge(m, src)
}
func (m *SerGlobalExt) XXX_Size() int {
	return xxx_messageInfo_SerGlobalExt.Size(m)
}
func (m *SerGlobalExt) XXX_DiscardUnknown() {
	xxx_messageInfo_SerGlobalExt.DiscardUnknown(m)
}

var xxx_messageInfo_SerGlobalExt proto.InternalMessageInfo

func (m *SerGlobalExt) GetBoss() []*SerLightningWarBoss {
	if m != nil {
		return m.Boss
	}
	return nil
}

func (m *SerGlobalExt) GetSendChatCnt() []*TwoInt {
	if m != nil {
		return m.SendChatCnt
	}
	return nil
}

func (m *SerGlobalExt) GetBerlinWar() *SerBerlinWar {
	if m != nil {
		return m.BerlinWar
	}
	return nil
}

func (m *SerGlobalExt) GetHonorDaily() *SerHonorDaily {
	if m != nil {
		return m.HonorDaily
	}
	return nil
}

func (m *SerGlobalExt) GetGlobalRebellion() *GlobalRebellion {
	if m != nil {
		return m.GlobalRebellion
	}
	return nil
}

func (m *SerGlobalExt) GetCounterAttack() *SerCounterAttack {
	if m != nil {
		return m.CounterAttack
	}
	return nil
}

func (m *SerGlobalExt) GetCrossCityNpcChgAttrCnt() int32 {
	if m != nil && m.CrossCityNpcChgAttrCnt != nil {
		return *m.CrossCityNpcChgAttrCnt
	}
	return 0
}

// 反攻德意志序列化
type SerCounterAttack struct {
	CycleData            *CycleData        `protobuf:"bytes,1,opt,name=cycleData" json:"cycleData,omitempty"`
	CityId               *int32            `protobuf:"varint,2,opt,name=cityId" json:"cityId,omitempty"`
	Pos                  *int32            `protobuf:"varint,3,opt,name=pos" json:"pos,omitempty"`
	Status               *int32            `protobuf:"varint,4,opt,name=status" json:"status,omitempty"`
	RoleInfo             []*IntLong        `protobuf:"bytes,5,rep,name=roleInfo" json:"roleInfo,omitempty"`
	CurrentBoss          *int32            `protobuf:"varint,6,opt,name=currentBoss" json:"currentBoss,omitempty"`
	CurrentAtkCnt        *int32            `protobuf:"varint,7,opt,name=currentAtkCnt" json:"currentAtkCnt,omitempty"`
	Force                []*Force          `protobuf:"bytes,8,rep,name=force" json:"force,omitempty"`
	JoinBattleRole       []int64           `protobuf:"varint,9,rep,name=joinBattleRole" json:"joinBattleRole,omitempty"`
	ShopInfo             []*SerCounterShop `protobuf:"bytes,10,rep,name=shopInfo" json:"shopInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SerCounterAttack) Reset()         { *m = SerCounterAttack{} }
func (m *SerCounterAttack) String() string { return proto.CompactTextString(m) }
func (*SerCounterAttack) ProtoMessage()    {}
func (*SerCounterAttack) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{48}
}
func (m *SerCounterAttack) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerCounterAttack.Unmarshal(m, b)
}
func (m *SerCounterAttack) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerCounterAttack.Marshal(b, m, deterministic)
}
func (m *SerCounterAttack) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerCounterAttack.Merge(m, src)
}
func (m *SerCounterAttack) XXX_Size() int {
	return xxx_messageInfo_SerCounterAttack.Size(m)
}
func (m *SerCounterAttack) XXX_DiscardUnknown() {
	xxx_messageInfo_SerCounterAttack.DiscardUnknown(m)
}

var xxx_messageInfo_SerCounterAttack proto.InternalMessageInfo

func (m *SerCounterAttack) GetCycleData() *CycleData {
	if m != nil {
		return m.CycleData
	}
	return nil
}

func (m *SerCounterAttack) GetCityId() int32 {
	if m != nil && m.CityId != nil {
		return *m.CityId
	}
	return 0
}

func (m *SerCounterAttack) GetPos() int32 {
	if m != nil && m.Pos != nil {
		return *m.Pos
	}
	return 0
}

func (m *SerCounterAttack) GetStatus() int32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

func (m *SerCounterAttack) GetRoleInfo() []*IntLong {
	if m != nil {
		return m.RoleInfo
	}
	return nil
}

func (m *SerCounterAttack) GetCurrentBoss() int32 {
	if m != nil && m.CurrentBoss != nil {
		return *m.CurrentBoss
	}
	return 0
}

func (m *SerCounterAttack) GetCurrentAtkCnt() int32 {
	if m != nil && m.CurrentAtkCnt != nil {
		return *m.CurrentAtkCnt
	}
	return 0
}

func (m *SerCounterAttack) GetForce() []*Force {
	if m != nil {
		return m.Force
	}
	return nil
}

func (m *SerCounterAttack) GetJoinBattleRole() []int64 {
	if m != nil {
		return m.JoinBattleRole
	}
	return nil
}

func (m *SerCounterAttack) GetShopInfo() []*SerCounterShop {
	if m != nil {
		return m.ShopInfo
	}
	return nil
}

// 军火库信息
type SerCounterShop struct {
	RoleId               *int64    `protobuf:"varint,1,opt,name=roleId" json:"roleId,omitempty"`
	ShopInfo             []*TwoInt `protobuf:"bytes,2,rep,name=shopInfo" json:"shopInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SerCounterShop) Reset()         { *m = SerCounterShop{} }
func (m *SerCounterShop) String() string { return proto.CompactTextString(m) }
func (*SerCounterShop) ProtoMessage()    {}
func (*SerCounterShop) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{49}
}
func (m *SerCounterShop) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerCounterShop.Unmarshal(m, b)
}
func (m *SerCounterShop) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerCounterShop.Marshal(b, m, deterministic)
}
func (m *SerCounterShop) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerCounterShop.Merge(m, src)
}
func (m *SerCounterShop) XXX_Size() int {
	return xxx_messageInfo_SerCounterShop.Size(m)
}
func (m *SerCounterShop) XXX_DiscardUnknown() {
	xxx_messageInfo_SerCounterShop.DiscardUnknown(m)
}

var xxx_messageInfo_SerCounterShop proto.InternalMessageInfo

func (m *SerCounterShop) GetRoleId() int64 {
	if m != nil && m.RoleId != nil {
		return *m.RoleId
	}
	return 0
}

func (m *SerCounterShop) GetShopInfo() []*TwoInt {
	if m != nil {
		return m.ShopInfo
	}
	return nil
}

// 荣耀日常
type SerHonorDaily struct {
	CreateTime           *int32          `protobuf:"varint,1,opt,name=createTime" json:"createTime,omitempty"`
	DailyReports         []*HonorReport  `protobuf:"bytes,2,rep,name=dailyReports" json:"dailyReports,omitempty"`
	Reports2             []*HonorReport2 `protobuf:"bytes,3,rep,name=reports2" json:"reports2,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SerHonorDaily) Reset()         { *m = SerHonorDaily{} }
func (m *SerHonorDaily) String() string { return proto.CompactTextString(m) }
func (*SerHonorDaily) ProtoMessage()    {}
func (*SerHonorDaily) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{50}
}
func (m *SerHonorDaily) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerHonorDaily.Unmarshal(m, b)
}
func (m *SerHonorDaily) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerHonorDaily.Marshal(b, m, deterministic)
}
func (m *SerHonorDaily) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerHonorDaily.Merge(m, src)
}
func (m *SerHonorDaily) XXX_Size() int {
	return xxx_messageInfo_SerHonorDaily.Size(m)
}
func (m *SerHonorDaily) XXX_DiscardUnknown() {
	xxx_messageInfo_SerHonorDaily.DiscardUnknown(m)
}

var xxx_messageInfo_SerHonorDaily proto.InternalMessageInfo

func (m *SerHonorDaily) GetCreateTime() int32 {
	if m != nil && m.CreateTime != nil {
		return *m.CreateTime
	}
	return 0
}

func (m *SerHonorDaily) GetDailyReports() []*HonorReport {
	if m != nil {
		return m.DailyReports
	}
	return nil
}

func (m *SerHonorDaily) GetReports2() []*HonorReport2 {
	if m != nil {
		return m.Reports2
	}
	return nil
}

// 闪电战Boss信息
type SerLightningWarBoss struct {
	Id                   *int32   `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	CityId               *int32   `protobuf:"varint,2,opt,name=cityId" json:"cityId,omitempty"`
	Pos                  *int32   `protobuf:"varint,3,opt,name=pos" json:"pos,omitempty"`
	LastFightTime        *int32   `protobuf:"varint,4,opt,name=lastFightTime" json:"lastFightTime,omitempty"`
	Status               *int32   `protobuf:"varint,5,opt,name=status" json:"status,omitempty"`
	Force                []*Force `protobuf:"bytes,6,rep,name=force" json:"force,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SerLightningWarBoss) Reset()         { *m = SerLightningWarBoss{} }
func (m *SerLightningWarBoss) String() string { return proto.CompactTextString(m) }
func (*SerLightningWarBoss) ProtoMessage()    {}
func (*SerLightningWarBoss) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{51}
}
func (m *SerLightningWarBoss) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerLightningWarBoss.Unmarshal(m, b)
}
func (m *SerLightningWarBoss) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerLightningWarBoss.Marshal(b, m, deterministic)
}
func (m *SerLightningWarBoss) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerLightningWarBoss.Merge(m, src)
}
func (m *SerLightningWarBoss) XXX_Size() int {
	return xxx_messageInfo_SerLightningWarBoss.Size(m)
}
func (m *SerLightningWarBoss) XXX_DiscardUnknown() {
	xxx_messageInfo_SerLightningWarBoss.DiscardUnknown(m)
}

var xxx_messageInfo_SerLightningWarBoss proto.InternalMessageInfo

func (m *SerLightningWarBoss) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *SerLightningWarBoss) GetCityId() int32 {
	if m != nil && m.CityId != nil {
		return *m.CityId
	}
	return 0
}

func (m *SerLightningWarBoss) GetPos() int32 {
	if m != nil && m.Pos != nil {
		return *m.Pos
	}
	return 0
}

func (m *SerLightningWarBoss) GetLastFightTime() int32 {
	if m != nil && m.LastFightTime != nil {
		return *m.LastFightTime
	}
	return 0
}

func (m *SerLightningWarBoss) GetStatus() int32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

func (m *SerLightningWarBoss) GetForce() []*Force {
	if m != nil {
		return m.Force
	}
	return nil
}

// 柏林会战序列化
type SerBerlinWar struct {
	BerlinCity           *SerBerlinCityInfo   `protobuf:"bytes,1,opt,name=berlinCity" json:"berlinCity,omitempty"`
	BattleFront          []*SerBerlinCityInfo `protobuf:"bytes,2,rep,name=battleFront" json:"battleFront,omitempty"`
	Reports              []*Report            `protobuf:"bytes,3,rep,name=reports" json:"reports,omitempty"`
	Records              []*SerBerlinRecord   `protobuf:"bytes,4,rep,name=records" json:"records,omitempty"`
	LastDate             *int32               `protobuf:"varint,5,opt,name=lastDate" json:"lastDate,omitempty"`
	HistoryWinner        []*IntLong           `protobuf:"bytes,6,rep,name=historyWinner" json:"historyWinner,omitempty"`
	Status               *int32               `protobuf:"varint,7,opt,name=status" json:"status,omitempty"`
	BeginDate            *int32               `protobuf:"varint,8,opt,name=beginDate" json:"beginDate,omitempty"`
	EndDate              *int32               `protobuf:"varint,9,opt,name=endDate" json:"endDate,omitempty"`
	PreViewDate          *int32               `protobuf:"varint,10,opt,name=preViewDate" json:"preViewDate,omitempty"`
	AtkCD                *int32               `protobuf:"varint,11,opt,name=atkCD" json:"atkCD,omitempty"`
	BerliJobs            []*IntLong           `protobuf:"bytes,12,rep,name=berliJobs" json:"berliJobs,omitempty"`
	JoinBerlinWar        []int64              `protobuf:"varint,13,rep,name=joinBerlinWar" json:"joinBerlinWar,omitempty"`
	RoleInfos            []*SerBerlinRoleInfo `protobuf:"bytes,14,rep,name=roleInfos" json:"roleInfos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SerBerlinWar) Reset()         { *m = SerBerlinWar{} }
func (m *SerBerlinWar) String() string { return proto.CompactTextString(m) }
func (*SerBerlinWar) ProtoMessage()    {}
func (*SerBerlinWar) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{52}
}
func (m *SerBerlinWar) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerBerlinWar.Unmarshal(m, b)
}
func (m *SerBerlinWar) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerBerlinWar.Marshal(b, m, deterministic)
}
func (m *SerBerlinWar) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerBerlinWar.Merge(m, src)
}
func (m *SerBerlinWar) XXX_Size() int {
	return xxx_messageInfo_SerBerlinWar.Size(m)
}
func (m *SerBerlinWar) XXX_DiscardUnknown() {
	xxx_messageInfo_SerBerlinWar.DiscardUnknown(m)
}

var xxx_messageInfo_SerBerlinWar proto.InternalMessageInfo

func (m *SerBerlinWar) GetBerlinCity() *SerBerlinCityInfo {
	if m != nil {
		return m.BerlinCity
	}
	return nil
}

func (m *SerBerlinWar) GetBattleFront() []*SerBerlinCityInfo {
	if m != nil {
		return m.BattleFront
	}
	return nil
}

func (m *SerBerlinWar) GetReports() []*Report {
	if m != nil {
		return m.Reports
	}
	return nil
}

func (m *SerBerlinWar) GetRecords() []*SerBerlinRecord {
	if m != nil {
		return m.Records
	}
	return nil
}

func (m *SerBerlinWar) GetLastDate() int32 {
	if m != nil && m.LastDate != nil {
		return *m.LastDate
	}
	return 0
}

func (m *SerBerlinWar) GetHistoryWinner() []*IntLong {
	if m != nil {
		return m.HistoryWinner
	}
	return nil
}

func (m *SerBerlinWar) GetStatus() int32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

func (m *SerBerlinWar) GetBeginDate() int32 {
	if m != nil && m.BeginDate != nil {
		return *m.BeginDate
	}
	return 0
}

func (m *SerBerlinWar) GetEndDate() int32 {
	if m != nil && m.EndDate != nil {
		return *m.EndDate
	}
	return 0
}

func (m *SerBerlinWar) GetPreViewDate() int32 {
	if m != nil && m.PreViewDate != nil {
		return *m.PreViewDate
	}
	return 0
}

func (m *SerBerlinWar) GetAtkCD() int32 {
	if m != nil && m.AtkCD != nil {
		return *m.AtkCD
	}
	return 0
}

func (m *SerBerlinWar) GetBerliJobs() []*IntLong {
	if m != nil {
		return m.BerliJobs
	}
	return nil
}

func (m *SerBerlinWar) GetJoinBerlinWar() []int64 {
	if m != nil {
		return m.JoinBerlinWar
	}
	return nil
}

func (m *SerBerlinWar) GetRoleInfos() []*SerBerlinRoleInfo {
	if m != nil {
		return m.RoleInfos
	}
	return nil
}

// 柏林玩家数据
type SerBerlinRoleInfo struct {
	RoleId               *int64    `protobuf:"varint,1,req,name=roleId" json:"roleId,omitempty"`
	AtkCD                *int32    `protobuf:"varint,2,opt,name=atkCD" json:"atkCD,omitempty"`
	StatusData           []*TwoInt `protobuf:"bytes,6,rep,name=statusData" json:"statusData,omitempty"`
	CountData            []*TwoInt `protobuf:"bytes,7,rep,name=countData" json:"countData,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SerBerlinRoleInfo) Reset()         { *m = SerBerlinRoleInfo{} }
func (m *SerBerlinRoleInfo) String() string { return proto.CompactTextString(m) }
func (*SerBerlinRoleInfo) ProtoMessage()    {}
func (*SerBerlinRoleInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{53}
}
func (m *SerBerlinRoleInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerBerlinRoleInfo.Unmarshal(m, b)
}
func (m *SerBerlinRoleInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerBerlinRoleInfo.Marshal(b, m, deterministic)
}
func (m *SerBerlinRoleInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerBerlinRoleInfo.Merge(m, src)
}
func (m *SerBerlinRoleInfo) XXX_Size() int {
	return xxx_messageInfo_SerBerlinRoleInfo.Size(m)
}
func (m *SerBerlinRoleInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SerBerlinRoleInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SerBerlinRoleInfo proto.InternalMessageInfo

func (m *SerBerlinRoleInfo) GetRoleId() int64 {
	if m != nil && m.RoleId != nil {
		return *m.RoleId
	}
	return 0
}

func (m *SerBerlinRoleInfo) GetAtkCD() int32 {
	if m != nil && m.AtkCD != nil {
		return *m.AtkCD
	}
	return 0
}

func (m *SerBerlinRoleInfo) GetStatusData() []*TwoInt {
	if m != nil {
		return m.StatusData
	}
	return nil
}

func (m *SerBerlinRoleInfo) GetCountData() []*TwoInt {
	if m != nil {
		return m.CountData
	}
	return nil
}

// 据点详情
type SerBerlinCityInfo struct {
	StatusTime           []*TwoInt      `protobuf:"bytes,1,rep,name=statusTime" json:"statusTime,omitempty"`
	CityDef              []*Force       `protobuf:"bytes,2,rep,name=cityDef" json:"cityDef,omitempty"`
	RoleQueue            []*BerlinForce `protobuf:"bytes,3,rep,name=roleQueue" json:"roleQueue,omitempty"`
	Camp                 *int32         `protobuf:"varint,4,opt,name=camp" json:"camp,omitempty"`
	AtkArm               *int32         `protobuf:"varint,5,opt,name=atkArm" json:"atkArm,omitempty"`
	DefArm               *int32         `protobuf:"varint,6,opt,name=defArm" json:"defArm,omitempty"`
	CityId               *int32         `protobuf:"varint,7,opt,name=cityId" json:"cityId,omitempty"`
	Pos                  *int32         `protobuf:"varint,8,opt,name=pos" json:"pos,omitempty"`
	LastOccupyTime       *int32         `protobuf:"varint,9,opt,name=lastOccupyTime" json:"lastOccupyTime,omitempty"`
	NextAtkTime          *int32         `protobuf:"varint,10,opt,name=nextAtkTime" json:"nextAtkTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SerBerlinCityInfo) Reset()         { *m = SerBerlinCityInfo{} }
func (m *SerBerlinCityInfo) String() string { return proto.CompactTextString(m) }
func (*SerBerlinCityInfo) ProtoMessage()    {}
func (*SerBerlinCityInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{54}
}
func (m *SerBerlinCityInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerBerlinCityInfo.Unmarshal(m, b)
}
func (m *SerBerlinCityInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerBerlinCityInfo.Marshal(b, m, deterministic)
}
func (m *SerBerlinCityInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerBerlinCityInfo.Merge(m, src)
}
func (m *SerBerlinCityInfo) XXX_Size() int {
	return xxx_messageInfo_SerBerlinCityInfo.Size(m)
}
func (m *SerBerlinCityInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SerBerlinCityInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SerBerlinCityInfo proto.InternalMessageInfo

func (m *SerBerlinCityInfo) GetStatusTime() []*TwoInt {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

func (m *SerBerlinCityInfo) GetCityDef() []*Force {
	if m != nil {
		return m.CityDef
	}
	return nil
}

func (m *SerBerlinCityInfo) GetRoleQueue() []*BerlinForce {
	if m != nil {
		return m.RoleQueue
	}
	return nil
}

func (m *SerBerlinCityInfo) GetCamp() int32 {
	if m != nil && m.Camp != nil {
		return *m.Camp
	}
	return 0
}

func (m *SerBerlinCityInfo) GetAtkArm() int32 {
	if m != nil && m.AtkArm != nil {
		return *m.AtkArm
	}
	return 0
}

func (m *SerBerlinCityInfo) GetDefArm() int32 {
	if m != nil && m.DefArm != nil {
		return *m.DefArm
	}
	return 0
}

func (m *SerBerlinCityInfo) GetCityId() int32 {
	if m != nil && m.CityId != nil {
		return *m.CityId
	}
	return 0
}

func (m *SerBerlinCityInfo) GetPos() int32 {
	if m != nil && m.Pos != nil {
		return *m.Pos
	}
	return 0
}

func (m *SerBerlinCityInfo) GetLastOccupyTime() int32 {
	if m != nil && m.LastOccupyTime != nil {
		return *m.LastOccupyTime
	}
	return 0
}

func (m *SerBerlinCityInfo) GetNextAtkTime() int32 {
	if m != nil && m.NextAtkTime != nil {
		return *m.NextAtkTime
	}
	return 0
}

// 会战记录
type SerBerlinRecord struct {
	KillCnt              *int32   `protobuf:"varint,1,opt,name=killCnt" json:"killCnt,omitempty"`
	TempKill             *int32   `protobuf:"varint,2,opt,name=tempKill" json:"tempKill,omitempty"`
	TempKillHero         *int32   `protobuf:"varint,3,opt,name=tempKillHero" json:"tempKillHero,omitempty"`
	KillStreakHero       *int32   `protobuf:"varint,4,opt,name=killStreakHero" json:"killStreakHero,omitempty"`
	KillStreak           *int32   `protobuf:"varint,5,opt,name=killStreak" json:"killStreak,omitempty"`
	KillRankTime         *int32   `protobuf:"varint,6,opt,name=killRankTime" json:"killRankTime,omitempty"`
	StreakRankTime       *int32   `protobuf:"varint,7,opt,name=streakRankTime" json:"streakRankTime,omitempty"`
	RoleId               *int64   `protobuf:"varint,8,opt,name=roleId" json:"roleId,omitempty"`
	Exploit              *int32   `protobuf:"varint,9,opt,name=exploit" json:"exploit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SerBerlinRecord) Reset()         { *m = SerBerlinRecord{} }
func (m *SerBerlinRecord) String() string { return proto.CompactTextString(m) }
func (*SerBerlinRecord) ProtoMessage()    {}
func (*SerBerlinRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{55}
}
func (m *SerBerlinRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerBerlinRecord.Unmarshal(m, b)
}
func (m *SerBerlinRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerBerlinRecord.Marshal(b, m, deterministic)
}
func (m *SerBerlinRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerBerlinRecord.Merge(m, src)
}
func (m *SerBerlinRecord) XXX_Size() int {
	return xxx_messageInfo_SerBerlinRecord.Size(m)
}
func (m *SerBerlinRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_SerBerlinRecord.DiscardUnknown(m)
}

var xxx_messageInfo_SerBerlinRecord proto.InternalMessageInfo

func (m *SerBerlinRecord) GetKillCnt() int32 {
	if m != nil && m.KillCnt != nil {
		return *m.KillCnt
	}
	return 0
}

func (m *SerBerlinRecord) GetTempKill() int32 {
	if m != nil && m.TempKill != nil {
		return *m.TempKill
	}
	return 0
}

func (m *SerBerlinRecord) GetTempKillHero() int32 {
	if m != nil && m.TempKillHero != nil {
		return *m.TempKillHero
	}
	return 0
}

func (m *SerBerlinRecord) GetKillStreakHero() int32 {
	if m != nil && m.KillStreakHero != nil {
		return *m.KillStreakHero
	}
	return 0
}

func (m *SerBerlinRecord) GetKillStreak() int32 {
	if m != nil && m.KillStreak != nil {
		return *m.KillStreak
	}
	return 0
}

func (m *SerBerlinRecord) GetKillRankTime() int32 {
	if m != nil && m.KillRankTime != nil {
		return *m.KillRankTime
	}
	return 0
}

func (m *SerBerlinRecord) GetStreakRankTime() int32 {
	if m != nil && m.StreakRankTime != nil {
		return *m.StreakRankTime
	}
	return 0
}

func (m *SerBerlinRecord) GetRoleId() int64 {
	if m != nil && m.RoleId != nil {
		return *m.RoleId
	}
	return 0
}

func (m *SerBerlinRecord) GetExploit() int32 {
	if m != nil && m.Exploit != nil {
		return *m.Exploit
	}
	return 0
}

// 玩家的额外字段
type SerPlayerExt struct {
	Portraits             []int32              `protobuf:"varint,1,rep,name=portraits" json:"portraits,omitempty"`
	Summon                *Summon              `protobuf:"bytes,2,opt,name=summon" json:"summon,omitempty"`
	AppointFreeTime       *int32               `protobuf:"varint,3,opt,name=appointFreeTime" json:"appointFreeTime,omitempty"`
	CombatHeroForm        []int32              `protobuf:"varint,4,rep,name=combatHeroForm" json:"combatHeroForm,omitempty"`
	HeroSkin              *int32               `protobuf:"varint,5,opt,name=heroSkin" json:"heroSkin,omitempty"`
	LoginRewardTime       *int32               `protobuf:"varint,6,opt,name=loginRewardTime" json:"loginRewardTime,omitempty"`
	BattleHeroPos         []*IntListInt        `protobuf:"bytes,7,rep,name=battleHeroPos" json:"battleHeroPos,omitempty"`
	FirstPayDouble        []string             `protobuf:"bytes,8,rep,name=firstPayDouble" json:"firstPayDouble,omitempty"`
	BanditCnt             *int32               `protobuf:"varint,9,opt,name=banditCnt" json:"banditCnt,omitempty"`
	IsFireState           *bool                `protobuf:"varint,10,opt,name=isFireState" json:"isFireState,omitempty"`
	NightRaidBanditCnt    *int32               `protobuf:"varint,11,opt,name=nightRaidBanditCnt" json:"nightRaidBanditCnt,omitempty"`
	DbTriggerGiftMap      []*DbTriggerGiftMap  `protobuf:"bytes,12,rep,name=dbTriggerGiftMap" json:"dbTriggerGiftMap,omitempty"`
	HitFlyCount           *int32               `protobuf:"varint,13,opt,name=hitFlyCount" json:"hitFlyCount,omitempty"`
	IsOffOnlineHitFly     *bool                `protobuf:"varint,14,opt,name=isOffOnlineHitFly" json:"isOffOnlineHitFly,omitempty"`
	IsAdvanceAward        *bool                `protobuf:"varint,15,opt,name=isAdvanceAward" json:"isAdvanceAward,omitempty"`
	PackId                *string              `protobuf:"bytes,16,opt,name=packId" json:"packId,omitempty"`
	StoneInfo             *StoneInfo           `protobuf:"bytes,17,opt,name=stoneInfo" json:"stoneInfo,omitempty"`
	AtkCityAct            *DbAtkCityAct        `protobuf:"bytes,18,opt,name=atkCityAct" json:"atkCityAct,omitempty"`
	SpecialProp           []*DbSpecialProp     `protobuf:"bytes,19,rep,name=specialProp" json:"specialProp,omitempty"`
	MixtureData           []*TwoInt            `protobuf:"bytes,20,rep,name=mixtureData" json:"mixtureData,omitempty"`
	MilitaryExpenditure   *int32               `protobuf:"varint,21,opt,name=militaryExpenditure" json:"militaryExpenditure,omitempty"`
	CheatCode             []int32              `protobuf:"varint,22,rep,name=cheatCode" json:"cheatCode,omitempty"`
	Blacklist             []int64              `protobuf:"varint,23,rep,name=blacklist" json:"blacklist,omitempty"`
	OffLineBuild          []*OffLineBuild      `protobuf:"bytes,24,rep,name=offLineBuild" json:"offLineBuild,omitempty"`
	ChatBubble            []int32              `protobuf:"varint,25,rep,name=chatBubble" json:"chatBubble,omitempty"`
	CurChatBubble         *int32               `protobuf:"varint,26,opt,name=curChatBubble" json:"curChatBubble,omitempty"`
	BodyImage             []int32              `protobuf:"varint,27,rep,name=bodyImage" json:"bodyImage,omitempty"`
	CurBodyImage          *int32               `protobuf:"varint,28,opt,name=curBodyImage" json:"curBodyImage,omitempty"`
	MedalGoods            []int32              `protobuf:"varint,29,rep,name=medalGoods" json:"medalGoods,omitempty"`
	MedalGoodsRefNum      *int32               `protobuf:"varint,30,opt,name=medalGoodsRefNum" json:"medalGoodsRefNum,omitempty"`
	PeacekeepingForcesNum *int32               `protobuf:"varint,31,opt,name=peacekeepingForcesNum" json:"peacekeepingForcesNum,omitempty"`
	JGXHLastTime          *int32               `protobuf:"varint,32,opt,name=jGXHLastTime" json:"jGXHLastTime,omitempty"`
	PlaneChips            []*TwoInt            `protobuf:"bytes,33,rep,name=planeChips" json:"planeChips,omitempty"`
	DbPlane               []*DbWarPlane        `protobuf:"bytes,34,rep,name=dbPlane" json:"dbPlane,omitempty"`
	DbPlayerRebellion     *DbPlayerRebellion   `protobuf:"bytes,35,opt,name=dbPlayerRebellion" json:"dbPlayerRebellion,omitempty"`
	FunCard               []*FunCard           `protobuf:"bytes,36,rep,name=funCard" json:"funCard,omitempty"`
	DecisiveInfo          *SerDecisiveInfo     `protobuf:"bytes,37,opt,name=decisiveInfo" json:"decisiveInfo,omitempty"`
	MentorInfo            *SerMentorInfo       `protobuf:"bytes,38,opt,name=mentorInfo" json:"mentorInfo,omitempty"`
	AirshipPersonData     *DbAirshipPersonData `protobuf:"bytes,39,opt,name=airshipPersonData" json:"airshipPersonData,omitempty"`
	SupplyRecord          *SerSupplyRecord     `protobuf:"bytes,40,opt,name=supplyRecord" json:"supplyRecord,omitempty"`
	Jewel                 []*EquipJewel        `protobuf:"bytes,41,rep,name=jewel" json:"jewel,omitempty"`
	WorldWar              *SerPlayerWorldWar   `protobuf:"bytes,42,opt,name=worldWar" json:"worldWar,omitempty"`
	OwnCastleSkin         []int32              `protobuf:"varint,43,rep,name=ownCastleSkin" json:"ownCastleSkin,omitempty"`
	CurCastleSkin         *int32               `protobuf:"varint,44,opt,name=curCastleSkin" json:"curCastleSkin,omitempty"`
	NewYorkWar            *SerPlayerNewYorkWar `protobuf:"bytes,45,opt,name=newYorkWar" json:"newYorkWar,omitempty"`
	OwnCastleSkinTime     []*TwoInt            `protobuf:"bytes,46,rep,name=ownCastleSkinTime" json:"ownCastleSkinTime,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}             `json:"-"`
	XXX_unrecognized      []byte               `json:"-"`
	XXX_sizecache         int32                `json:"-"`
}

func (m *SerPlayerExt) Reset()         { *m = SerPlayerExt{} }
func (m *SerPlayerExt) String() string { return proto.CompactTextString(m) }
func (*SerPlayerExt) ProtoMessage()    {}
func (*SerPlayerExt) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{56}
}
func (m *SerPlayerExt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerPlayerExt.Unmarshal(m, b)
}
func (m *SerPlayerExt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerPlayerExt.Marshal(b, m, deterministic)
}
func (m *SerPlayerExt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerPlayerExt.Merge(m, src)
}
func (m *SerPlayerExt) XXX_Size() int {
	return xxx_messageInfo_SerPlayerExt.Size(m)
}
func (m *SerPlayerExt) XXX_DiscardUnknown() {
	xxx_messageInfo_SerPlayerExt.DiscardUnknown(m)
}

var xxx_messageInfo_SerPlayerExt proto.InternalMessageInfo

func (m *SerPlayerExt) GetPortraits() []int32 {
	if m != nil {
		return m.Portraits
	}
	return nil
}

func (m *SerPlayerExt) GetSummon() *Summon {
	if m != nil {
		return m.Summon
	}
	return nil
}

func (m *SerPlayerExt) GetAppointFreeTime() int32 {
	if m != nil && m.AppointFreeTime != nil {
		return *m.AppointFreeTime
	}
	return 0
}

func (m *SerPlayerExt) GetCombatHeroForm() []int32 {
	if m != nil {
		return m.CombatHeroForm
	}
	return nil
}

func (m *SerPlayerExt) GetHeroSkin() int32 {
	if m != nil && m.HeroSkin != nil {
		return *m.HeroSkin
	}
	return 0
}

func (m *SerPlayerExt) GetLoginRewardTime() int32 {
	if m != nil && m.LoginRewardTime != nil {
		return *m.LoginRewardTime
	}
	return 0
}

func (m *SerPlayerExt) GetBattleHeroPos() []*IntListInt {
	if m != nil {
		return m.BattleHeroPos
	}
	return nil
}

func (m *SerPlayerExt) GetFirstPayDouble() []string {
	if m != nil {
		return m.FirstPayDouble
	}
	return nil
}

func (m *SerPlayerExt) GetBanditCnt() int32 {
	if m != nil && m.BanditCnt != nil {
		return *m.BanditCnt
	}
	return 0
}

func (m *SerPlayerExt) GetIsFireState() bool {
	if m != nil && m.IsFireState != nil {
		return *m.IsFireState
	}
	return false
}

func (m *SerPlayerExt) GetNightRaidBanditCnt() int32 {
	if m != nil && m.NightRaidBanditCnt != nil {
		return *m.NightRaidBanditCnt
	}
	return 0
}

func (m *SerPlayerExt) GetDbTriggerGiftMap() []*DbTriggerGiftMap {
	if m != nil {
		return m.DbTriggerGiftMap
	}
	return nil
}

func (m *SerPlayerExt) GetHitFlyCount() int32 {
	if m != nil && m.HitFlyCount != nil {
		return *m.HitFlyCount
	}
	return 0
}

func (m *SerPlayerExt) GetIsOffOnlineHitFly() bool {
	if m != nil && m.IsOffOnlineHitFly != nil {
		return *m.IsOffOnlineHitFly
	}
	return false
}

func (m *SerPlayerExt) GetIsAdvanceAward() bool {
	if m != nil && m.IsAdvanceAward != nil {
		return *m.IsAdvanceAward
	}
	return false
}

func (m *SerPlayerExt) GetPackId() string {
	if m != nil && m.PackId != nil {
		return *m.PackId
	}
	return ""
}

func (m *SerPlayerExt) GetStoneInfo() *StoneInfo {
	if m != nil {
		return m.StoneInfo
	}
	return nil
}

func (m *SerPlayerExt) GetAtkCityAct() *DbAtkCityAct {
	if m != nil {
		return m.AtkCityAct
	}
	return nil
}

func (m *SerPlayerExt) GetSpecialProp() []*DbSpecialProp {
	if m != nil {
		return m.SpecialProp
	}
	return nil
}

func (m *SerPlayerExt) GetMixtureData() []*TwoInt {
	if m != nil {
		return m.MixtureData
	}
	return nil
}

func (m *SerPlayerExt) GetMilitaryExpenditure() int32 {
	if m != nil && m.MilitaryExpenditure != nil {
		return *m.MilitaryExpenditure
	}
	return 0
}

func (m *SerPlayerExt) GetCheatCode() []int32 {
	if m != nil {
		return m.CheatCode
	}
	return nil
}

func (m *SerPlayerExt) GetBlacklist() []int64 {
	if m != nil {
		return m.Blacklist
	}
	return nil
}

func (m *SerPlayerExt) GetOffLineBuild() []*OffLineBuild {
	if m != nil {
		return m.OffLineBuild
	}
	return nil
}

func (m *SerPlayerExt) GetChatBubble() []int32 {
	if m != nil {
		return m.ChatBubble
	}
	return nil
}

func (m *SerPlayerExt) GetCurChatBubble() int32 {
	if m != nil && m.CurChatBubble != nil {
		return *m.CurChatBubble
	}
	return 0
}

func (m *SerPlayerExt) GetBodyImage() []int32 {
	if m != nil {
		return m.BodyImage
	}
	return nil
}

func (m *SerPlayerExt) GetCurBodyImage() int32 {
	if m != nil && m.CurBodyImage != nil {
		return *m.CurBodyImage
	}
	return 0
}

func (m *SerPlayerExt) GetMedalGoods() []int32 {
	if m != nil {
		return m.MedalGoods
	}
	return nil
}

func (m *SerPlayerExt) GetMedalGoodsRefNum() int32 {
	if m != nil && m.MedalGoodsRefNum != nil {
		return *m.MedalGoodsRefNum
	}
	return 0
}

func (m *SerPlayerExt) GetPeacekeepingForcesNum() int32 {
	if m != nil && m.PeacekeepingForcesNum != nil {
		return *m.PeacekeepingForcesNum
	}
	return 0
}

func (m *SerPlayerExt) GetJGXHLastTime() int32 {
	if m != nil && m.JGXHLastTime != nil {
		return *m.JGXHLastTime
	}
	return 0
}

func (m *SerPlayerExt) GetPlaneChips() []*TwoInt {
	if m != nil {
		return m.PlaneChips
	}
	return nil
}

func (m *SerPlayerExt) GetDbPlane() []*DbWarPlane {
	if m != nil {
		return m.DbPlane
	}
	return nil
}

func (m *SerPlayerExt) GetDbPlayerRebellion() *DbPlayerRebellion {
	if m != nil {
		return m.DbPlayerRebellion
	}
	return nil
}

func (m *SerPlayerExt) GetFunCard() []*FunCard {
	if m != nil {
		return m.FunCard
	}
	return nil
}

func (m *SerPlayerExt) GetDecisiveInfo() *SerDecisiveInfo {
	if m != nil {
		return m.DecisiveInfo
	}
	return nil
}

func (m *SerPlayerExt) GetMentorInfo() *SerMentorInfo {
	if m != nil {
		return m.MentorInfo
	}
	return nil
}

func (m *SerPlayerExt) GetAirshipPersonData() *DbAirshipPersonData {
	if m != nil {
		return m.AirshipPersonData
	}
	return nil
}

func (m *SerPlayerExt) GetSupplyRecord() *SerSupplyRecord {
	if m != nil {
		return m.SupplyRecord
	}
	return nil
}

func (m *SerPlayerExt) GetJewel() []*EquipJewel {
	if m != nil {
		return m.Jewel
	}
	return nil
}

func (m *SerPlayerExt) GetWorldWar() *SerPlayerWorldWar {
	if m != nil {
		return m.WorldWar
	}
	return nil
}

func (m *SerPlayerExt) GetOwnCastleSkin() []int32 {
	if m != nil {
		return m.OwnCastleSkin
	}
	return nil
}

func (m *SerPlayerExt) GetCurCastleSkin() int32 {
	if m != nil && m.CurCastleSkin != nil {
		return *m.CurCastleSkin
	}
	return 0
}

func (m *SerPlayerExt) GetNewYorkWar() *SerPlayerNewYorkWar {
	if m != nil {
		return m.NewYorkWar
	}
	return nil
}

func (m *SerPlayerExt) GetOwnCastleSkinTime() []*TwoInt {
	if m != nil {
		return m.OwnCastleSkinTime
	}
	return nil
}

type SerPlayerNewYorkWar struct {
	MaxAttack            *int64    `protobuf:"varint,1,opt,name=maxAttack" json:"maxAttack,omitempty"`
	Achievements         []*TwoInt `protobuf:"bytes,2,rep,name=achievements" json:"achievements,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SerPlayerNewYorkWar) Reset()         { *m = SerPlayerNewYorkWar{} }
func (m *SerPlayerNewYorkWar) String() string { return proto.CompactTextString(m) }
func (*SerPlayerNewYorkWar) ProtoMessage()    {}
func (*SerPlayerNewYorkWar) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{57}
}
func (m *SerPlayerNewYorkWar) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerPlayerNewYorkWar.Unmarshal(m, b)
}
func (m *SerPlayerNewYorkWar) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerPlayerNewYorkWar.Marshal(b, m, deterministic)
}
func (m *SerPlayerNewYorkWar) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerPlayerNewYorkWar.Merge(m, src)
}
func (m *SerPlayerNewYorkWar) XXX_Size() int {
	return xxx_messageInfo_SerPlayerNewYorkWar.Size(m)
}
func (m *SerPlayerNewYorkWar) XXX_DiscardUnknown() {
	xxx_messageInfo_SerPlayerNewYorkWar.DiscardUnknown(m)
}

var xxx_messageInfo_SerPlayerNewYorkWar proto.InternalMessageInfo

func (m *SerPlayerNewYorkWar) GetMaxAttack() int64 {
	if m != nil && m.MaxAttack != nil {
		return *m.MaxAttack
	}
	return 0
}

func (m *SerPlayerNewYorkWar) GetAchievements() []*TwoInt {
	if m != nil {
		return m.Achievements
	}
	return nil
}

// 玩家世界争霸数据
type SerPlayerWorldWar struct {
	DailyAttack          *int32    `protobuf:"varint,1,opt,name=dailyAttack" json:"dailyAttack,omitempty"`
	DailyAttackAward     []*TwoInt `protobuf:"bytes,2,rep,name=dailyAttackAward" json:"dailyAttackAward,omitempty"`
	RestrictTask         []*TwoInt `protobuf:"bytes,3,rep,name=restrictTask" json:"restrictTask,omitempty"`
	RestrictTaskAward    []*TwoInt `protobuf:"bytes,4,rep,name=restrictTaskAward" json:"restrictTaskAward,omitempty"`
	WeekIntegral         *int32    `protobuf:"varint,5,opt,name=weekIntegral" json:"weekIntegral,omitempty"`
	WeekAward            []*TwoInt `protobuf:"bytes,6,rep,name=weekAward" json:"weekAward,omitempty"`
	SeasonIntegral       *int32    `protobuf:"varint,7,opt,name=seasonIntegral" json:"seasonIntegral,omitempty"`
	AttackCityAward      []*TwoInt `protobuf:"bytes,8,rep,name=attackCityAward" json:"attackCityAward,omitempty"`
	SeasonShop           []*TwoInt `protobuf:"bytes,9,rep,name=seasonShop" json:"seasonShop,omitempty"`
	IntegralSecond       *int32    `protobuf:"varint,10,opt,name=integralSecond" json:"integralSecond,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SerPlayerWorldWar) Reset()         { *m = SerPlayerWorldWar{} }
func (m *SerPlayerWorldWar) String() string { return proto.CompactTextString(m) }
func (*SerPlayerWorldWar) ProtoMessage()    {}
func (*SerPlayerWorldWar) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{58}
}
func (m *SerPlayerWorldWar) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerPlayerWorldWar.Unmarshal(m, b)
}
func (m *SerPlayerWorldWar) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerPlayerWorldWar.Marshal(b, m, deterministic)
}
func (m *SerPlayerWorldWar) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerPlayerWorldWar.Merge(m, src)
}
func (m *SerPlayerWorldWar) XXX_Size() int {
	return xxx_messageInfo_SerPlayerWorldWar.Size(m)
}
func (m *SerPlayerWorldWar) XXX_DiscardUnknown() {
	xxx_messageInfo_SerPlayerWorldWar.DiscardUnknown(m)
}

var xxx_messageInfo_SerPlayerWorldWar proto.InternalMessageInfo

func (m *SerPlayerWorldWar) GetDailyAttack() int32 {
	if m != nil && m.DailyAttack != nil {
		return *m.DailyAttack
	}
	return 0
}

func (m *SerPlayerWorldWar) GetDailyAttackAward() []*TwoInt {
	if m != nil {
		return m.DailyAttackAward
	}
	return nil
}

func (m *SerPlayerWorldWar) GetRestrictTask() []*TwoInt {
	if m != nil {
		return m.RestrictTask
	}
	return nil
}

func (m *SerPlayerWorldWar) GetRestrictTaskAward() []*TwoInt {
	if m != nil {
		return m.RestrictTaskAward
	}
	return nil
}

func (m *SerPlayerWorldWar) GetWeekIntegral() int32 {
	if m != nil && m.WeekIntegral != nil {
		return *m.WeekIntegral
	}
	return 0
}

func (m *SerPlayerWorldWar) GetWeekAward() []*TwoInt {
	if m != nil {
		return m.WeekAward
	}
	return nil
}

func (m *SerPlayerWorldWar) GetSeasonIntegral() int32 {
	if m != nil && m.SeasonIntegral != nil {
		return *m.SeasonIntegral
	}
	return 0
}

func (m *SerPlayerWorldWar) GetAttackCityAward() []*TwoInt {
	if m != nil {
		return m.AttackCityAward
	}
	return nil
}

func (m *SerPlayerWorldWar) GetSeasonShop() []*TwoInt {
	if m != nil {
		return m.SeasonShop
	}
	return nil
}

func (m *SerPlayerWorldWar) GetIntegralSecond() int32 {
	if m != nil && m.IntegralSecond != nil {
		return *m.IntegralSecond
	}
	return 0
}

// 补给记录
type SerSupplyRecord struct {
	StatusMap            []*TwoInt `protobuf:"bytes,1,rep,name=statusMap" json:"statusMap,omitempty"`
	SuperSupplyStatus    []*TwoInt `protobuf:"bytes,2,rep,name=superSupplyStatus" json:"superSupplyStatus,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SerSupplyRecord) Reset()         { *m = SerSupplyRecord{} }
func (m *SerSupplyRecord) String() string { return proto.CompactTextString(m) }
func (*SerSupplyRecord) ProtoMessage()    {}
func (*SerSupplyRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{59}
}
func (m *SerSupplyRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerSupplyRecord.Unmarshal(m, b)
}
func (m *SerSupplyRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerSupplyRecord.Marshal(b, m, deterministic)
}
func (m *SerSupplyRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerSupplyRecord.Merge(m, src)
}
func (m *SerSupplyRecord) XXX_Size() int {
	return xxx_messageInfo_SerSupplyRecord.Size(m)
}
func (m *SerSupplyRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_SerSupplyRecord.DiscardUnknown(m)
}

var xxx_messageInfo_SerSupplyRecord proto.InternalMessageInfo

func (m *SerSupplyRecord) GetStatusMap() []*TwoInt {
	if m != nil {
		return m.StatusMap
	}
	return nil
}

func (m *SerSupplyRecord) GetSuperSupplyStatus() []*TwoInt {
	if m != nil {
		return m.SuperSupplyStatus
	}
	return nil
}

// 决战信息
type SerDecisiveInfo struct {
	Decisive             *bool    `protobuf:"varint,1,opt,name=decisive" json:"decisive,omitempty"`
	FlyRole              *int64   `protobuf:"varint,2,opt,name=flyRole" json:"flyRole,omitempty"`
	FlyTime              *int32   `protobuf:"varint,3,opt,name=flyTime" json:"flyTime,omitempty"`
	PropTime             *int32   `protobuf:"varint,4,opt,name=propTime" json:"propTime,omitempty"`
	PropStatus           *bool    `protobuf:"varint,5,opt,name=propStatus" json:"propStatus,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SerDecisiveInfo) Reset()         { *m = SerDecisiveInfo{} }
func (m *SerDecisiveInfo) String() string { return proto.CompactTextString(m) }
func (*SerDecisiveInfo) ProtoMessage()    {}
func (*SerDecisiveInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{60}
}
func (m *SerDecisiveInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerDecisiveInfo.Unmarshal(m, b)
}
func (m *SerDecisiveInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerDecisiveInfo.Marshal(b, m, deterministic)
}
func (m *SerDecisiveInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerDecisiveInfo.Merge(m, src)
}
func (m *SerDecisiveInfo) XXX_Size() int {
	return xxx_messageInfo_SerDecisiveInfo.Size(m)
}
func (m *SerDecisiveInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SerDecisiveInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SerDecisiveInfo proto.InternalMessageInfo

func (m *SerDecisiveInfo) GetDecisive() bool {
	if m != nil && m.Decisive != nil {
		return *m.Decisive
	}
	return false
}

func (m *SerDecisiveInfo) GetFlyRole() int64 {
	if m != nil && m.FlyRole != nil {
		return *m.FlyRole
	}
	return 0
}

func (m *SerDecisiveInfo) GetFlyTime() int32 {
	if m != nil && m.FlyTime != nil {
		return *m.FlyTime
	}
	return 0
}

func (m *SerDecisiveInfo) GetPropTime() int32 {
	if m != nil && m.PropTime != nil {
		return *m.PropTime
	}
	return 0
}

func (m *SerDecisiveInfo) GetPropStatus() bool {
	if m != nil && m.PropStatus != nil {
		return *m.PropStatus
	}
	return false
}

// 教官的序列化
type SerMentorInfo struct {
	Mentors              []*Mentor            `protobuf:"bytes,1,rep,name=mentors" json:"mentors,omitempty"`
	Equips               []*MentorEquip       `protobuf:"bytes,2,rep,name=equips" json:"equips,omitempty"`
	Skills               []*MentorSkill       `protobuf:"bytes,3,rep,name=skills" json:"skills,omitempty"`
	Betters              []*MentorBetterEquip `protobuf:"bytes,4,rep,name=betters" json:"betters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SerMentorInfo) Reset()         { *m = SerMentorInfo{} }
func (m *SerMentorInfo) String() string { return proto.CompactTextString(m) }
func (*SerMentorInfo) ProtoMessage()    {}
func (*SerMentorInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{61}
}
func (m *SerMentorInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerMentorInfo.Unmarshal(m, b)
}
func (m *SerMentorInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerMentorInfo.Marshal(b, m, deterministic)
}
func (m *SerMentorInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerMentorInfo.Merge(m, src)
}
func (m *SerMentorInfo) XXX_Size() int {
	return xxx_messageInfo_SerMentorInfo.Size(m)
}
func (m *SerMentorInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SerMentorInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SerMentorInfo proto.InternalMessageInfo

func (m *SerMentorInfo) GetMentors() []*Mentor {
	if m != nil {
		return m.Mentors
	}
	return nil
}

func (m *SerMentorInfo) GetEquips() []*MentorEquip {
	if m != nil {
		return m.Equips
	}
	return nil
}

func (m *SerMentorInfo) GetSkills() []*MentorSkill {
	if m != nil {
		return m.Skills
	}
	return nil
}

func (m *SerMentorInfo) GetBetters() []*MentorBetterEquip {
	if m != nil {
		return m.Betters
	}
	return nil
}

// 可穿戴高战力装备
type MentorBetterEquip struct {
	MentorType           *int32    `protobuf:"varint,1,opt,name=mentorType" json:"mentorType,omitempty"`
	EquipInfo            []*TwoInt `protobuf:"bytes,2,rep,name=equipInfo" json:"equipInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *MentorBetterEquip) Reset()         { *m = MentorBetterEquip{} }
func (m *MentorBetterEquip) String() string { return proto.CompactTextString(m) }
func (*MentorBetterEquip) ProtoMessage()    {}
func (*MentorBetterEquip) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{62}
}
func (m *MentorBetterEquip) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MentorBetterEquip.Unmarshal(m, b)
}
func (m *MentorBetterEquip) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MentorBetterEquip.Marshal(b, m, deterministic)
}
func (m *MentorBetterEquip) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MentorBetterEquip.Merge(m, src)
}
func (m *MentorBetterEquip) XXX_Size() int {
	return xxx_messageInfo_MentorBetterEquip.Size(m)
}
func (m *MentorBetterEquip) XXX_DiscardUnknown() {
	xxx_messageInfo_MentorBetterEquip.DiscardUnknown(m)
}

var xxx_messageInfo_MentorBetterEquip proto.InternalMessageInfo

func (m *MentorBetterEquip) GetMentorType() int32 {
	if m != nil && m.MentorType != nil {
		return *m.MentorType
	}
	return 0
}

func (m *MentorBetterEquip) GetEquipInfo() []*TwoInt {
	if m != nil {
		return m.EquipInfo
	}
	return nil
}

// 战机的序列化
type DbWarPlane struct {
	HeroId               *int32   `protobuf:"varint,1,req,name=heroId" json:"heroId,omitempty"`
	Type                 *int32   `protobuf:"varint,2,req,name=type" json:"type,omitempty"`
	PlaneId              *int32   `protobuf:"varint,3,req,name=planeId" json:"planeId,omitempty"`
	Level                *int32   `protobuf:"varint,4,req,name=level" json:"level,omitempty"`
	Exp                  *int32   `protobuf:"varint,5,req,name=exp" json:"exp,omitempty"`
	Pos                  *int32   `protobuf:"varint,6,req,name=pos" json:"pos,omitempty"`
	State                *int32   `protobuf:"varint,7,req,name=state" json:"state,omitempty"`
	BattlePos            *int32   `protobuf:"varint,8,opt,name=battlePos" json:"battlePos,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DbWarPlane) Reset()         { *m = DbWarPlane{} }
func (m *DbWarPlane) String() string { return proto.CompactTextString(m) }
func (*DbWarPlane) ProtoMessage()    {}
func (*DbWarPlane) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{63}
}
func (m *DbWarPlane) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DbWarPlane.Unmarshal(m, b)
}
func (m *DbWarPlane) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DbWarPlane.Marshal(b, m, deterministic)
}
func (m *DbWarPlane) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DbWarPlane.Merge(m, src)
}
func (m *DbWarPlane) XXX_Size() int {
	return xxx_messageInfo_DbWarPlane.Size(m)
}
func (m *DbWarPlane) XXX_DiscardUnknown() {
	xxx_messageInfo_DbWarPlane.DiscardUnknown(m)
}

var xxx_messageInfo_DbWarPlane proto.InternalMessageInfo

func (m *DbWarPlane) GetHeroId() int32 {
	if m != nil && m.HeroId != nil {
		return *m.HeroId
	}
	return 0
}

func (m *DbWarPlane) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *DbWarPlane) GetPlaneId() int32 {
	if m != nil && m.PlaneId != nil {
		return *m.PlaneId
	}
	return 0
}

func (m *DbWarPlane) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *DbWarPlane) GetExp() int32 {
	if m != nil && m.Exp != nil {
		return *m.Exp
	}
	return 0
}

func (m *DbWarPlane) GetPos() int32 {
	if m != nil && m.Pos != nil {
		return *m.Pos
	}
	return 0
}

func (m *DbWarPlane) GetState() int32 {
	if m != nil && m.State != nil {
		return *m.State
	}
	return 0
}

func (m *DbWarPlane) GetBattlePos() int32 {
	if m != nil && m.BattlePos != nil {
		return *m.BattlePos
	}
	return 0
}

type DbDay7Act struct {
	RecvAwardIds         []int32            `protobuf:"varint,1,rep,name=recvAwardIds" json:"recvAwardIds,omitempty"`
	Status               []*TwoInt          `protobuf:"bytes,2,rep,name=status" json:"status,omitempty"`
	TankTypes            []*StrInt          `protobuf:"bytes,3,rep,name=tankTypes" json:"tankTypes,omitempty"`
	TypeCnt              []*DbDay7ActStatus `protobuf:"bytes,4,rep,name=typeCnt" json:"typeCnt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *DbDay7Act) Reset()         { *m = DbDay7Act{} }
func (m *DbDay7Act) String() string { return proto.CompactTextString(m) }
func (*DbDay7Act) ProtoMessage()    {}
func (*DbDay7Act) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{64}
}
func (m *DbDay7Act) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DbDay7Act.Unmarshal(m, b)
}
func (m *DbDay7Act) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DbDay7Act.Marshal(b, m, deterministic)
}
func (m *DbDay7Act) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DbDay7Act.Merge(m, src)
}
func (m *DbDay7Act) XXX_Size() int {
	return xxx_messageInfo_DbDay7Act.Size(m)
}
func (m *DbDay7Act) XXX_DiscardUnknown() {
	xxx_messageInfo_DbDay7Act.DiscardUnknown(m)
}

var xxx_messageInfo_DbDay7Act proto.InternalMessageInfo

func (m *DbDay7Act) GetRecvAwardIds() []int32 {
	if m != nil {
		return m.RecvAwardIds
	}
	return nil
}

func (m *DbDay7Act) GetStatus() []*TwoInt {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *DbDay7Act) GetTankTypes() []*StrInt {
	if m != nil {
		return m.TankTypes
	}
	return nil
}

func (m *DbDay7Act) GetTypeCnt() []*DbDay7ActStatus {
	if m != nil {
		return m.TypeCnt
	}
	return nil
}

type DbDay7ActStatus struct {
	Key                  *int32    `protobuf:"varint,1,opt,name=key" json:"key,omitempty"`
	Status               []*TwoInt `protobuf:"bytes,2,rep,name=status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *DbDay7ActStatus) Reset()         { *m = DbDay7ActStatus{} }
func (m *DbDay7ActStatus) String() string { return proto.CompactTextString(m) }
func (*DbDay7ActStatus) ProtoMessage()    {}
func (*DbDay7ActStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{65}
}
func (m *DbDay7ActStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DbDay7ActStatus.Unmarshal(m, b)
}
func (m *DbDay7ActStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DbDay7ActStatus.Marshal(b, m, deterministic)
}
func (m *DbDay7ActStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DbDay7ActStatus.Merge(m, src)
}
func (m *DbDay7ActStatus) XXX_Size() int {
	return xxx_messageInfo_DbDay7ActStatus.Size(m)
}
func (m *DbDay7ActStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_DbDay7ActStatus.DiscardUnknown(m)
}

var xxx_messageInfo_DbDay7ActStatus proto.InternalMessageInfo

func (m *DbDay7ActStatus) GetKey() int32 {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return 0
}

func (m *DbDay7ActStatus) GetStatus() []*TwoInt {
	if m != nil {
		return m.Status
	}
	return nil
}

type DbAtkCityAct struct {
	TankTypes            []*StrInt          `protobuf:"bytes,1,rep,name=tankTypes" json:"tankTypes,omitempty"`
	TypeCnt              []*DbDay7ActStatus `protobuf:"bytes,2,rep,name=typeCnt" json:"typeCnt,omitempty"`
	Status               []*TwoInt          `protobuf:"bytes,3,rep,name=status" json:"status,omitempty"`
	StatusCnt            []*TwoInt          `protobuf:"bytes,4,rep,name=statusCnt" json:"statusCnt,omitempty"`
	CanRecvKeyId         []int32            `protobuf:"varint,5,rep,name=canRecvKeyId" json:"canRecvKeyId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *DbAtkCityAct) Reset()         { *m = DbAtkCityAct{} }
func (m *DbAtkCityAct) String() string { return proto.CompactTextString(m) }
func (*DbAtkCityAct) ProtoMessage()    {}
func (*DbAtkCityAct) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{66}
}
func (m *DbAtkCityAct) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DbAtkCityAct.Unmarshal(m, b)
}
func (m *DbAtkCityAct) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DbAtkCityAct.Marshal(b, m, deterministic)
}
func (m *DbAtkCityAct) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DbAtkCityAct.Merge(m, src)
}
func (m *DbAtkCityAct) XXX_Size() int {
	return xxx_messageInfo_DbAtkCityAct.Size(m)
}
func (m *DbAtkCityAct) XXX_DiscardUnknown() {
	xxx_messageInfo_DbAtkCityAct.DiscardUnknown(m)
}

var xxx_messageInfo_DbAtkCityAct proto.InternalMessageInfo

func (m *DbAtkCityAct) GetTankTypes() []*StrInt {
	if m != nil {
		return m.TankTypes
	}
	return nil
}

func (m *DbAtkCityAct) GetTypeCnt() []*DbDay7ActStatus {
	if m != nil {
		return m.TypeCnt
	}
	return nil
}

func (m *DbAtkCityAct) GetStatus() []*TwoInt {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *DbAtkCityAct) GetStatusCnt() []*TwoInt {
	if m != nil {
		return m.StatusCnt
	}
	return nil
}

func (m *DbAtkCityAct) GetCanRecvKeyId() []int32 {
	if m != nil {
		return m.CanRecvKeyId
	}
	return nil
}

// 活动
type SerActivity struct {
	Activity             []*DbActivity `protobuf:"bytes,1,rep,name=activity" json:"activity,omitempty"`
	ActBlackhawk         *ActBlackhawk `protobuf:"bytes,2,opt,name=actBlackhawk" json:"actBlackhawk,omitempty"`
	ActBarton            []*ActBarton  `protobuf:"bytes,3,rep,name=actBarton" json:"actBarton,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SerActivity) Reset()         { *m = SerActivity{} }
func (m *SerActivity) String() string { return proto.CompactTextString(m) }
func (*SerActivity) ProtoMessage()    {}
func (*SerActivity) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{67}
}
func (m *SerActivity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerActivity.Unmarshal(m, b)
}
func (m *SerActivity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerActivity.Marshal(b, m, deterministic)
}
func (m *SerActivity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerActivity.Merge(m, src)
}
func (m *SerActivity) XXX_Size() int {
	return xxx_messageInfo_SerActivity.Size(m)
}
func (m *SerActivity) XXX_DiscardUnknown() {
	xxx_messageInfo_SerActivity.DiscardUnknown(m)
}

var xxx_messageInfo_SerActivity proto.InternalMessageInfo

func (m *SerActivity) GetActivity() []*DbActivity {
	if m != nil {
		return m.Activity
	}
	return nil
}

func (m *SerActivity) GetActBlackhawk() *ActBlackhawk {
	if m != nil {
		return m.ActBlackhawk
	}
	return nil
}

func (m *SerActivity) GetActBarton() []*ActBarton {
	if m != nil {
		return m.ActBarton
	}
	return nil
}

type DbActivity struct {
	ActivityId           *int32           `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	Status               []*IntLong       `protobuf:"bytes,2,rep,name=status" json:"status,omitempty"`
	TowInt               []*TwoInt        `protobuf:"bytes,3,rep,name=towInt" json:"towInt,omitempty"`
	BeginTime            *int32           `protobuf:"varint,4,opt,name=beginTime" json:"beginTime,omitempty"`
	Open                 *int32           `protobuf:"varint,5,opt,name=open" json:"open,omitempty"`
	EndTime              *int32           `protobuf:"varint,6,opt,name=endTime" json:"endTime,omitempty"`
	Prop                 []*TwoInt        `protobuf:"bytes,7,rep,name=prop" json:"prop,omitempty"`
	Save                 []*TwoInt        `protobuf:"bytes,8,rep,name=save" json:"save,omitempty"`
	ActivityType         *int32           `protobuf:"varint,9,opt,name=activityType" json:"activityType,omitempty"`
	Turnplat             *DbActTurnplat   `protobuf:"bytes,10,opt,name=turnplat" json:"turnplat,omitempty"`
	EquipTurnplat        *DbEquipTurnplat `protobuf:"bytes,11,opt,name=equipTurnplat" json:"equipTurnplat,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *DbActivity) Reset()         { *m = DbActivity{} }
func (m *DbActivity) String() string { return proto.CompactTextString(m) }
func (*DbActivity) ProtoMessage()    {}
func (*DbActivity) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{68}
}
func (m *DbActivity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DbActivity.Unmarshal(m, b)
}
func (m *DbActivity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DbActivity.Marshal(b, m, deterministic)
}
func (m *DbActivity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DbActivity.Merge(m, src)
}
func (m *DbActivity) XXX_Size() int {
	return xxx_messageInfo_DbActivity.Size(m)
}
func (m *DbActivity) XXX_DiscardUnknown() {
	xxx_messageInfo_DbActivity.DiscardUnknown(m)
}

var xxx_messageInfo_DbActivity proto.InternalMessageInfo

func (m *DbActivity) GetActivityId() int32 {
	if m != nil && m.ActivityId != nil {
		return *m.ActivityId
	}
	return 0
}

func (m *DbActivity) GetStatus() []*IntLong {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *DbActivity) GetTowInt() []*TwoInt {
	if m != nil {
		return m.TowInt
	}
	return nil
}

func (m *DbActivity) GetBeginTime() int32 {
	if m != nil && m.BeginTime != nil {
		return *m.BeginTime
	}
	return 0
}

func (m *DbActivity) GetOpen() int32 {
	if m != nil && m.Open != nil {
		return *m.Open
	}
	return 0
}

func (m *DbActivity) GetEndTime() int32 {
	if m != nil && m.EndTime != nil {
		return *m.EndTime
	}
	return 0
}

func (m *DbActivity) GetProp() []*TwoInt {
	if m != nil {
		return m.Prop
	}
	return nil
}

func (m *DbActivity) GetSave() []*TwoInt {
	if m != nil {
		return m.Save
	}
	return nil
}

func (m *DbActivity) GetActivityType() int32 {
	if m != nil && m.ActivityType != nil {
		return *m.ActivityType
	}
	return 0
}

func (m *DbActivity) GetTurnplat() *DbActTurnplat {
	if m != nil {
		return m.Turnplat
	}
	return nil
}

func (m *DbActivity) GetEquipTurnplat() *DbEquipTurnplat {
	if m != nil {
		return m.EquipTurnplat
	}
	return nil
}

// 聊天信息的序列化
type SerChat struct {
	ChatHistory          []*DbChatHistory      `protobuf:"bytes,1,rep,name=chatHistory" json:"chatHistory,omitempty"`
	ChatDialog           []*DbChatDialogByLord `protobuf:"bytes,2,rep,name=chatDialog" json:"chatDialog,omitempty"`
	WorldRoleChat        []*Chat               `protobuf:"bytes,3,rep,name=worldRoleChat" json:"worldRoleChat,omitempty"`
	RedPacket            []*RedPacket          `protobuf:"bytes,4,rep,name=redPacket" json:"redPacket,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *SerChat) Reset()         { *m = SerChat{} }
func (m *SerChat) String() string { return proto.CompactTextString(m) }
func (*SerChat) ProtoMessage()    {}
func (*SerChat) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{69}
}
func (m *SerChat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerChat.Unmarshal(m, b)
}
func (m *SerChat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerChat.Marshal(b, m, deterministic)
}
func (m *SerChat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerChat.Merge(m, src)
}
func (m *SerChat) XXX_Size() int {
	return xxx_messageInfo_SerChat.Size(m)
}
func (m *SerChat) XXX_DiscardUnknown() {
	xxx_messageInfo_SerChat.DiscardUnknown(m)
}

var xxx_messageInfo_SerChat proto.InternalMessageInfo

func (m *SerChat) GetChatHistory() []*DbChatHistory {
	if m != nil {
		return m.ChatHistory
	}
	return nil
}

func (m *SerChat) GetChatDialog() []*DbChatDialogByLord {
	if m != nil {
		return m.ChatDialog
	}
	return nil
}

func (m *SerChat) GetWorldRoleChat() []*Chat {
	if m != nil {
		return m.WorldRoleChat
	}
	return nil
}

func (m *SerChat) GetRedPacket() []*RedPacket {
	if m != nil {
		return m.RedPacket
	}
	return nil
}

// 触发式礼包序列化
type SerTriggerGift struct {
	GiftId               *int32   `protobuf:"varint,1,opt,name=giftId" json:"giftId,omitempty"`
	BeginTime            *int32   `protobuf:"varint,2,opt,name=beginTime" json:"beginTime,omitempty"`
	EndTime              *int32   `protobuf:"varint,3,opt,name=endTime" json:"endTime,omitempty"`
	Count                *int32   `protobuf:"varint,4,opt,name=count" json:"count,omitempty"`
	State                *int32   `protobuf:"varint,5,opt,name=state" json:"state,omitempty"`
	Status               *int32   `protobuf:"varint,6,opt,name=status" json:"status,omitempty"`
	KeyId                *int32   `protobuf:"varint,7,opt,name=keyId" json:"keyId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SerTriggerGift) Reset()         { *m = SerTriggerGift{} }
func (m *SerTriggerGift) String() string { return proto.CompactTextString(m) }
func (*SerTriggerGift) ProtoMessage()    {}
func (*SerTriggerGift) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{70}
}
func (m *SerTriggerGift) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerTriggerGift.Unmarshal(m, b)
}
func (m *SerTriggerGift) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerTriggerGift.Marshal(b, m, deterministic)
}
func (m *SerTriggerGift) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerTriggerGift.Merge(m, src)
}
func (m *SerTriggerGift) XXX_Size() int {
	return xxx_messageInfo_SerTriggerGift.Size(m)
}
func (m *SerTriggerGift) XXX_DiscardUnknown() {
	xxx_messageInfo_SerTriggerGift.DiscardUnknown(m)
}

var xxx_messageInfo_SerTriggerGift proto.InternalMessageInfo

func (m *SerTriggerGift) GetGiftId() int32 {
	if m != nil && m.GiftId != nil {
		return *m.GiftId
	}
	return 0
}

func (m *SerTriggerGift) GetBeginTime() int32 {
	if m != nil && m.BeginTime != nil {
		return *m.BeginTime
	}
	return 0
}

func (m *SerTriggerGift) GetEndTime() int32 {
	if m != nil && m.EndTime != nil {
		return *m.EndTime
	}
	return 0
}

func (m *SerTriggerGift) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *SerTriggerGift) GetState() int32 {
	if m != nil && m.State != nil {
		return *m.State
	}
	return 0
}

func (m *SerTriggerGift) GetStatus() int32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

func (m *SerTriggerGift) GetKeyId() int32 {
	if m != nil && m.KeyId != nil {
		return *m.KeyId
	}
	return 0
}

type DbTriggerGiftMap struct {
	Key                  *int32            `protobuf:"varint,1,opt,name=key" json:"key,omitempty"`
	SerTriggerGift       []*SerTriggerGift `protobuf:"bytes,2,rep,name=serTriggerGift" json:"serTriggerGift,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *DbTriggerGiftMap) Reset()         { *m = DbTriggerGiftMap{} }
func (m *DbTriggerGiftMap) String() string { return proto.CompactTextString(m) }
func (*DbTriggerGiftMap) ProtoMessage()    {}
func (*DbTriggerGiftMap) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{71}
}
func (m *DbTriggerGiftMap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DbTriggerGiftMap.Unmarshal(m, b)
}
func (m *DbTriggerGiftMap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DbTriggerGiftMap.Marshal(b, m, deterministic)
}
func (m *DbTriggerGiftMap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DbTriggerGiftMap.Merge(m, src)
}
func (m *DbTriggerGiftMap) XXX_Size() int {
	return xxx_messageInfo_DbTriggerGiftMap.Size(m)
}
func (m *DbTriggerGiftMap) XXX_DiscardUnknown() {
	xxx_messageInfo_DbTriggerGiftMap.DiscardUnknown(m)
}

var xxx_messageInfo_DbTriggerGiftMap proto.InternalMessageInfo

func (m *DbTriggerGiftMap) GetKey() int32 {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return 0
}

func (m *DbTriggerGiftMap) GetSerTriggerGift() []*SerTriggerGift {
	if m != nil {
		return m.SerTriggerGift
	}
	return nil
}

type DbCia struct {
	InteractionCnt       *int32         `protobuf:"varint,1,req,name=interactionCnt" json:"interactionCnt,omitempty"`
	LastTime             *int32         `protobuf:"varint,2,req,name=lastTime" json:"lastTime,omitempty"`
	FemaleAgent          []*FemaleAgent `protobuf:"bytes,3,rep,name=femaleAgent" json:"femaleAgent,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *DbCia) Reset()         { *m = DbCia{} }
func (m *DbCia) String() string { return proto.CompactTextString(m) }
func (*DbCia) ProtoMessage()    {}
func (*DbCia) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{72}
}
func (m *DbCia) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DbCia.Unmarshal(m, b)
}
func (m *DbCia) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DbCia.Marshal(b, m, deterministic)
}
func (m *DbCia) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DbCia.Merge(m, src)
}
func (m *DbCia) XXX_Size() int {
	return xxx_messageInfo_DbCia.Size(m)
}
func (m *DbCia) XXX_DiscardUnknown() {
	xxx_messageInfo_DbCia.DiscardUnknown(m)
}

var xxx_messageInfo_DbCia proto.InternalMessageInfo

func (m *DbCia) GetInteractionCnt() int32 {
	if m != nil && m.InteractionCnt != nil {
		return *m.InteractionCnt
	}
	return 0
}

func (m *DbCia) GetLastTime() int32 {
	if m != nil && m.LastTime != nil {
		return *m.LastTime
	}
	return 0
}

func (m *DbCia) GetFemaleAgent() []*FemaleAgent {
	if m != nil {
		return m.FemaleAgent
	}
	return nil
}

// 玩家身上的匪军叛乱的信息
type DbPlayerRebellion struct {
	Buffs                []*RebelBuff `protobuf:"bytes,1,rep,name=buffs" json:"buffs,omitempty"`
	Credit               *int32       `protobuf:"varint,2,opt,name=credit" json:"credit,omitempty"`
	IsDead               *bool        `protobuf:"varint,3,opt,name=isDead" json:"isDead,omitempty"`
	Round                *int32       `protobuf:"varint,4,opt,name=round" json:"round,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *DbPlayerRebellion) Reset()         { *m = DbPlayerRebellion{} }
func (m *DbPlayerRebellion) String() string { return proto.CompactTextString(m) }
func (*DbPlayerRebellion) ProtoMessage()    {}
func (*DbPlayerRebellion) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{73}
}
func (m *DbPlayerRebellion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DbPlayerRebellion.Unmarshal(m, b)
}
func (m *DbPlayerRebellion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DbPlayerRebellion.Marshal(b, m, deterministic)
}
func (m *DbPlayerRebellion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DbPlayerRebellion.Merge(m, src)
}
func (m *DbPlayerRebellion) XXX_Size() int {
	return xxx_messageInfo_DbPlayerRebellion.Size(m)
}
func (m *DbPlayerRebellion) XXX_DiscardUnknown() {
	xxx_messageInfo_DbPlayerRebellion.DiscardUnknown(m)
}

var xxx_messageInfo_DbPlayerRebellion proto.InternalMessageInfo

func (m *DbPlayerRebellion) GetBuffs() []*RebelBuff {
	if m != nil {
		return m.Buffs
	}
	return nil
}

func (m *DbPlayerRebellion) GetCredit() int32 {
	if m != nil && m.Credit != nil {
		return *m.Credit
	}
	return 0
}

func (m *DbPlayerRebellion) GetIsDead() bool {
	if m != nil && m.IsDead != nil {
		return *m.IsDead
	}
	return false
}

func (m *DbPlayerRebellion) GetRound() int32 {
	if m != nil && m.Round != nil {
		return *m.Round
	}
	return 0
}

// 飞艇个人数据
type DbAirshipPersonData struct {
	BelongAwardCnt       *int32   `protobuf:"varint,1,opt,name=belongAwardCnt" json:"belongAwardCnt,omitempty"`
	HelpAwardCnt         *int32   `protobuf:"varint,2,opt,name=helpAwardCnt" json:"helpAwardCnt,omitempty"`
	LastRefreshDate      *int32   `protobuf:"varint,3,opt,name=lastRefreshDate" json:"lastRefreshDate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DbAirshipPersonData) Reset()         { *m = DbAirshipPersonData{} }
func (m *DbAirshipPersonData) String() string { return proto.CompactTextString(m) }
func (*DbAirshipPersonData) ProtoMessage()    {}
func (*DbAirshipPersonData) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{74}
}
func (m *DbAirshipPersonData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DbAirshipPersonData.Unmarshal(m, b)
}
func (m *DbAirshipPersonData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DbAirshipPersonData.Marshal(b, m, deterministic)
}
func (m *DbAirshipPersonData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DbAirshipPersonData.Merge(m, src)
}
func (m *DbAirshipPersonData) XXX_Size() int {
	return xxx_messageInfo_DbAirshipPersonData.Size(m)
}
func (m *DbAirshipPersonData) XXX_DiscardUnknown() {
	xxx_messageInfo_DbAirshipPersonData.DiscardUnknown(m)
}

var xxx_messageInfo_DbAirshipPersonData proto.InternalMessageInfo

func (m *DbAirshipPersonData) GetBelongAwardCnt() int32 {
	if m != nil && m.BelongAwardCnt != nil {
		return *m.BelongAwardCnt
	}
	return 0
}

func (m *DbAirshipPersonData) GetHelpAwardCnt() int32 {
	if m != nil && m.HelpAwardCnt != nil {
		return *m.HelpAwardCnt
	}
	return 0
}

func (m *DbAirshipPersonData) GetLastRefreshDate() int32 {
	if m != nil && m.LastRefreshDate != nil {
		return *m.LastRefreshDate
	}
	return 0
}

// 对应 p_cross_map, city ,bandit,mine 字段
type SerMapEntityPb struct {
	MapEntity            []*MapEntityPb `protobuf:"bytes,1,rep,name=mapEntity" json:"mapEntity,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SerMapEntityPb) Reset()         { *m = SerMapEntityPb{} }
func (m *SerMapEntityPb) String() string { return proto.CompactTextString(m) }
func (*SerMapEntityPb) ProtoMessage()    {}
func (*SerMapEntityPb) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{75}
}
func (m *SerMapEntityPb) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerMapEntityPb.Unmarshal(m, b)
}
func (m *SerMapEntityPb) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerMapEntityPb.Marshal(b, m, deterministic)
}
func (m *SerMapEntityPb) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerMapEntityPb.Merge(m, src)
}
func (m *SerMapEntityPb) XXX_Size() int {
	return xxx_messageInfo_SerMapEntityPb.Size(m)
}
func (m *SerMapEntityPb) XXX_DiscardUnknown() {
	xxx_messageInfo_SerMapEntityPb.DiscardUnknown(m)
}

var xxx_messageInfo_SerMapEntityPb proto.InternalMessageInfo

func (m *SerMapEntityPb) GetMapEntity() []*MapEntityPb {
	if m != nil {
		return m.MapEntity
	}
	return nil
}

// 对应 p_cross_map 的playerArmy 字段
type SerPlayerArmyPb struct {
	Army                 []*Army  `protobuf:"bytes,1,rep,name=army" json:"army,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SerPlayerArmyPb) Reset()         { *m = SerPlayerArmyPb{} }
func (m *SerPlayerArmyPb) String() string { return proto.CompactTextString(m) }
func (*SerPlayerArmyPb) ProtoMessage()    {}
func (*SerPlayerArmyPb) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{76}
}
func (m *SerPlayerArmyPb) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerPlayerArmyPb.Unmarshal(m, b)
}
func (m *SerPlayerArmyPb) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerPlayerArmyPb.Marshal(b, m, deterministic)
}
func (m *SerPlayerArmyPb) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerPlayerArmyPb.Merge(m, src)
}
func (m *SerPlayerArmyPb) XXX_Size() int {
	return xxx_messageInfo_SerPlayerArmyPb.Size(m)
}
func (m *SerPlayerArmyPb) XXX_DiscardUnknown() {
	xxx_messageInfo_SerPlayerArmyPb.DiscardUnknown(m)
}

var xxx_messageInfo_SerPlayerArmyPb proto.InternalMessageInfo

func (m *SerPlayerArmyPb) GetArmy() []*Army {
	if m != nil {
		return m.Army
	}
	return nil
}

// 对应 p_cross_map 的mapInfo 字段
type SerMapBattlePb struct {
	Battle               []*BattlePO `protobuf:"bytes,1,rep,name=battle" json:"battle,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *SerMapBattlePb) Reset()         { *m = SerMapBattlePb{} }
func (m *SerMapBattlePb) String() string { return proto.CompactTextString(m) }
func (*SerMapBattlePb) ProtoMessage()    {}
func (*SerMapBattlePb) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{77}
}
func (m *SerMapBattlePb) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerMapBattlePb.Unmarshal(m, b)
}
func (m *SerMapBattlePb) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerMapBattlePb.Marshal(b, m, deterministic)
}
func (m *SerMapBattlePb) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerMapBattlePb.Merge(m, src)
}
func (m *SerMapBattlePb) XXX_Size() int {
	return xxx_messageInfo_SerMapBattlePb.Size(m)
}
func (m *SerMapBattlePb) XXX_DiscardUnknown() {
	xxx_messageInfo_SerMapBattlePb.DiscardUnknown(m)
}

var xxx_messageInfo_SerMapBattlePb proto.InternalMessageInfo

func (m *SerMapBattlePb) GetBattle() []*BattlePO {
	if m != nil {
		return m.Battle
	}
	return nil
}

// 对应 p_cross_map 的mapInfo 字段
type SerMapInfoPb struct {
	WarPlanInfo          *WorldWarPlanInfoPb `protobuf:"bytes,1,opt,name=warPlanInfo" json:"warPlanInfo,omitempty"`
	MapOpenType          *int32              `protobuf:"varint,2,opt,name=mapOpenType" json:"mapOpenType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *SerMapInfoPb) Reset()         { *m = SerMapInfoPb{} }
func (m *SerMapInfoPb) String() string { return proto.CompactTextString(m) }
func (*SerMapInfoPb) ProtoMessage()    {}
func (*SerMapInfoPb) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{78}
}
func (m *SerMapInfoPb) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerMapInfoPb.Unmarshal(m, b)
}
func (m *SerMapInfoPb) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerMapInfoPb.Marshal(b, m, deterministic)
}
func (m *SerMapInfoPb) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerMapInfoPb.Merge(m, src)
}
func (m *SerMapInfoPb) XXX_Size() int {
	return xxx_messageInfo_SerMapInfoPb.Size(m)
}
func (m *SerMapInfoPb) XXX_DiscardUnknown() {
	xxx_messageInfo_SerMapInfoPb.DiscardUnknown(m)
}

var xxx_messageInfo_SerMapInfoPb proto.InternalMessageInfo

func (m *SerMapInfoPb) GetWarPlanInfo() *WorldWarPlanInfoPb {
	if m != nil {
		return m.WarPlanInfo
	}
	return nil
}

func (m *SerMapInfoPb) GetMapOpenType() int32 {
	if m != nil && m.MapOpenType != nil {
		return *m.MapOpenType
	}
	return 0
}

//对应 p_cross_map 的 mapExt1 ,扩展使用
type SerMapExt1Pb struct {
	Airship              []*Airship `protobuf:"bytes,1,rep,name=airship" json:"airship,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SerMapExt1Pb) Reset()         { *m = SerMapExt1Pb{} }
func (m *SerMapExt1Pb) String() string { return proto.CompactTextString(m) }
func (*SerMapExt1Pb) ProtoMessage()    {}
func (*SerMapExt1Pb) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{79}
}
func (m *SerMapExt1Pb) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerMapExt1Pb.Unmarshal(m, b)
}
func (m *SerMapExt1Pb) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerMapExt1Pb.Marshal(b, m, deterministic)
}
func (m *SerMapExt1Pb) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerMapExt1Pb.Merge(m, src)
}
func (m *SerMapExt1Pb) XXX_Size() int {
	return xxx_messageInfo_SerMapExt1Pb.Size(m)
}
func (m *SerMapExt1Pb) XXX_DiscardUnknown() {
	xxx_messageInfo_SerMapExt1Pb.DiscardUnknown(m)
}

var xxx_messageInfo_SerMapExt1Pb proto.InternalMessageInfo

func (m *SerMapExt1Pb) GetAirship() []*Airship {
	if m != nil {
		return m.Airship
	}
	return nil
}

// 序列化签到信息
type SerSignInInfo struct {
	SignInInfo           []*SignInInfo `protobuf:"bytes,1,rep,name=signInInfo" json:"signInInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SerSignInInfo) Reset()         { *m = SerSignInInfo{} }
func (m *SerSignInInfo) String() string { return proto.CompactTextString(m) }
func (*SerSignInInfo) ProtoMessage()    {}
func (*SerSignInInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{80}
}
func (m *SerSignInInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerSignInInfo.Unmarshal(m, b)
}
func (m *SerSignInInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerSignInInfo.Marshal(b, m, deterministic)
}
func (m *SerSignInInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerSignInInfo.Merge(m, src)
}
func (m *SerSignInInfo) XXX_Size() int {
	return xxx_messageInfo_SerSignInInfo.Size(m)
}
func (m *SerSignInInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SerSignInInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SerSignInInfo proto.InternalMessageInfo

func (m *SerSignInInfo) GetSignInInfo() []*SignInInfo {
	if m != nil {
		return m.SignInInfo
	}
	return nil
}

// 跨服个人信息
type SerCrossPersonalData struct {
	KillNum              *int32   `protobuf:"varint,1,opt,name=killNum" json:"killNum,omitempty"`
	GainTrophyId         []int32  `protobuf:"varint,2,rep,name=gainTrophyId" json:"gainTrophyId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SerCrossPersonalData) Reset()         { *m = SerCrossPersonalData{} }
func (m *SerCrossPersonalData) String() string { return proto.CompactTextString(m) }
func (*SerCrossPersonalData) ProtoMessage()    {}
func (*SerCrossPersonalData) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{81}
}
func (m *SerCrossPersonalData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerCrossPersonalData.Unmarshal(m, b)
}
func (m *SerCrossPersonalData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerCrossPersonalData.Marshal(b, m, deterministic)
}
func (m *SerCrossPersonalData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerCrossPersonalData.Merge(m, src)
}
func (m *SerCrossPersonalData) XXX_Size() int {
	return xxx_messageInfo_SerCrossPersonalData.Size(m)
}
func (m *SerCrossPersonalData) XXX_DiscardUnknown() {
	xxx_messageInfo_SerCrossPersonalData.DiscardUnknown(m)
}

var xxx_messageInfo_SerCrossPersonalData proto.InternalMessageInfo

func (m *SerCrossPersonalData) GetKillNum() int32 {
	if m != nil && m.KillNum != nil {
		return *m.KillNum
	}
	return 0
}

func (m *SerCrossPersonalData) GetGainTrophyId() []int32 {
	if m != nil {
		return m.GainTrophyId
	}
	return nil
}

// 所有堡垒信息(跨服数据保存)
type SerCrossFort struct {
	Fort                 []*DbFortress `protobuf:"bytes,1,rep,name=fort" json:"fort,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SerCrossFort) Reset()         { *m = SerCrossFort{} }
func (m *SerCrossFort) String() string { return proto.CompactTextString(m) }
func (*SerCrossFort) ProtoMessage()    {}
func (*SerCrossFort) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{82}
}
func (m *SerCrossFort) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerCrossFort.Unmarshal(m, b)
}
func (m *SerCrossFort) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerCrossFort.Marshal(b, m, deterministic)
}
func (m *SerCrossFort) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerCrossFort.Merge(m, src)
}
func (m *SerCrossFort) XXX_Size() int {
	return xxx_messageInfo_SerCrossFort.Size(m)
}
func (m *SerCrossFort) XXX_DiscardUnknown() {
	xxx_messageInfo_SerCrossFort.DiscardUnknown(m)
}

var xxx_messageInfo_SerCrossFort proto.InternalMessageInfo

func (m *SerCrossFort) GetFort() []*DbFortress {
	if m != nil {
		return m.Fort
	}
	return nil
}

// 单个堡垒信息
type DbFortress struct {
	Id                   *int32   `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Type                 *int32   `protobuf:"varint,2,opt,name=type" json:"type,omitempty"`
	Camp                 *int32   `protobuf:"varint,3,opt,name=camp" json:"camp,omitempty"`
	NpcForce             []*Force `protobuf:"bytes,4,rep,name=npcForce" json:"npcForce,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DbFortress) Reset()         { *m = DbFortress{} }
func (m *DbFortress) String() string { return proto.CompactTextString(m) }
func (*DbFortress) ProtoMessage()    {}
func (*DbFortress) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{83}
}
func (m *DbFortress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DbFortress.Unmarshal(m, b)
}
func (m *DbFortress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DbFortress.Marshal(b, m, deterministic)
}
func (m *DbFortress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DbFortress.Merge(m, src)
}
func (m *DbFortress) XXX_Size() int {
	return xxx_messageInfo_DbFortress.Size(m)
}
func (m *DbFortress) XXX_DiscardUnknown() {
	xxx_messageInfo_DbFortress.DiscardUnknown(m)
}

var xxx_messageInfo_DbFortress proto.InternalMessageInfo

func (m *DbFortress) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *DbFortress) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *DbFortress) GetCamp() int32 {
	if m != nil && m.Camp != nil {
		return *m.Camp
	}
	return 0
}

func (m *DbFortress) GetNpcForce() []*Force {
	if m != nil {
		return m.NpcForce
	}
	return nil
}

// 跨服排行(跨服数据保存)
type SerCrossRank struct {
	CampRank             []*CrossRankItem `protobuf:"bytes,1,rep,name=campRank" json:"campRank,omitempty"`
	PersonalRank         []*CrossRankItem `protobuf:"bytes,2,rep,name=personalRank" json:"personalRank,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *SerCrossRank) Reset()         { *m = SerCrossRank{} }
func (m *SerCrossRank) String() string { return proto.CompactTextString(m) }
func (*SerCrossRank) ProtoMessage()    {}
func (*SerCrossRank) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{84}
}
func (m *SerCrossRank) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerCrossRank.Unmarshal(m, b)
}
func (m *SerCrossRank) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerCrossRank.Marshal(b, m, deterministic)
}
func (m *SerCrossRank) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerCrossRank.Merge(m, src)
}
func (m *SerCrossRank) XXX_Size() int {
	return xxx_messageInfo_SerCrossRank.Size(m)
}
func (m *SerCrossRank) XXX_DiscardUnknown() {
	xxx_messageInfo_SerCrossRank.DiscardUnknown(m)
}

var xxx_messageInfo_SerCrossRank proto.InternalMessageInfo

func (m *SerCrossRank) GetCampRank() []*CrossRankItem {
	if m != nil {
		return m.CampRank
	}
	return nil
}

func (m *SerCrossRank) GetPersonalRank() []*CrossRankItem {
	if m != nil {
		return m.PersonalRank
	}
	return nil
}

// 跨服玩家个人lord模块数据
type SerCrossPlayerLord struct {
	LordPb               *CrossLordPb `protobuf:"bytes,1,opt,name=lordPb" json:"lordPb,omitempty"`
	MainServerId         *int32       `protobuf:"varint,2,opt,name=mainServerId" json:"mainServerId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SerCrossPlayerLord) Reset()         { *m = SerCrossPlayerLord{} }
func (m *SerCrossPlayerLord) String() string { return proto.CompactTextString(m) }
func (*SerCrossPlayerLord) ProtoMessage()    {}
func (*SerCrossPlayerLord) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{85}
}
func (m *SerCrossPlayerLord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerCrossPlayerLord.Unmarshal(m, b)
}
func (m *SerCrossPlayerLord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerCrossPlayerLord.Marshal(b, m, deterministic)
}
func (m *SerCrossPlayerLord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerCrossPlayerLord.Merge(m, src)
}
func (m *SerCrossPlayerLord) XXX_Size() int {
	return xxx_messageInfo_SerCrossPlayerLord.Size(m)
}
func (m *SerCrossPlayerLord) XXX_DiscardUnknown() {
	xxx_messageInfo_SerCrossPlayerLord.DiscardUnknown(m)
}

var xxx_messageInfo_SerCrossPlayerLord proto.InternalMessageInfo

func (m *SerCrossPlayerLord) GetLordPb() *CrossLordPb {
	if m != nil {
		return m.LordPb
	}
	return nil
}

func (m *SerCrossPlayerLord) GetMainServerId() int32 {
	if m != nil && m.MainServerId != nil {
		return *m.MainServerId
	}
	return 0
}

// 跨服玩家个人War模块数据
type SerCrossPlayerWar struct {
	KillNum              *int32   `protobuf:"varint,1,opt,name=killNum" json:"killNum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SerCrossPlayerWar) Reset()         { *m = SerCrossPlayerWar{} }
func (m *SerCrossPlayerWar) String() string { return proto.CompactTextString(m) }
func (*SerCrossPlayerWar) ProtoMessage()    {}
func (*SerCrossPlayerWar) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c81ef5289f82af7, []int{86}
}
func (m *SerCrossPlayerWar) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerCrossPlayerWar.Unmarshal(m, b)
}
func (m *SerCrossPlayerWar) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerCrossPlayerWar.Marshal(b, m, deterministic)
}
func (m *SerCrossPlayerWar) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerCrossPlayerWar.Merge(m, src)
}
func (m *SerCrossPlayerWar) XXX_Size() int {
	return xxx_messageInfo_SerCrossPlayerWar.Size(m)
}
func (m *SerCrossPlayerWar) XXX_DiscardUnknown() {
	xxx_messageInfo_SerCrossPlayerWar.DiscardUnknown(m)
}

var xxx_messageInfo_SerCrossPlayerWar proto.InternalMessageInfo

func (m *SerCrossPlayerWar) GetKillNum() int32 {
	if m != nil && m.KillNum != nil {
		return *m.KillNum
	}
	return 0
}

func init() {
	proto.RegisterType((*SerData)(nil), "SerData")
	proto.RegisterType((*SerHero)(nil), "SerHero")
	proto.RegisterType((*SerEquip)(nil), "SerEquip")
	proto.RegisterType((*SerMedal)(nil), "SerMedal")
	proto.RegisterType((*SerProp)(nil), "SerProp")
	proto.RegisterType((*SerBuildQue)(nil), "SerBuildQue")
	proto.RegisterType((*SerEquipQue)(nil), "SerEquipQue")
	proto.RegisterType((*SerTask)(nil), "SerTask")
	proto.RegisterType((*SerCombat)(nil), "SerCombat")
	proto.RegisterType((*SerCombatFb)(nil), "SerCombatFb")
	proto.RegisterType((*SerRoleData)(nil), "SerRoleData")
	proto.RegisterType((*SerMail)(nil), "SerMail")
	proto.RegisterType((*SerReport)(nil), "SerReport")
	proto.RegisterType((*SerArea)(nil), "SerArea")
	proto.RegisterType((*SerCity)(nil), "SerCity")
	proto.RegisterType((*SerBandit)(nil), "SerBandit")
	proto.RegisterType((*SerMine)(nil), "SerMine")
	proto.RegisterType((*SerBattle)(nil), "SerBattle")
	proto.RegisterType((*SerWorldTask)(nil), "SerWorldTask")
	proto.RegisterType((*SerWroldSchedule)(nil), "SerWroldSchedule")
	proto.RegisterType((*SerMill)(nil), "SerMill")
	proto.RegisterType((*SerFactory)(nil), "SerFactory")
	proto.RegisterType((*SerGains)(nil), "SerGains")
	proto.RegisterType((*SerArmy)(nil), "SerArmy")
	proto.RegisterType((*SerTech)(nil), "SerTech")
	proto.RegisterType((*SerChemical)(nil), "SerChemical")
	proto.RegisterType((*SerTreasure)(nil), "SerTreasure")
	proto.RegisterType((*SerTypeInfo)(nil), "SerTypeInfo")
	proto.RegisterType((*SerShop)(nil), "SerShop")
	proto.RegisterType((*SerPartyHonorRank)(nil), "SerPartyHonorRank")
	proto.RegisterType((*SerPartyLog)(nil), "SerPartyLog")
	proto.RegisterType((*SerPartyJob)(nil), "SerPartyJob")
	proto.RegisterType((*SerPartyExt)(nil), "SerPartyExt")
	proto.RegisterType((*SerAcquisition)(nil), "SerAcquisition")
	proto.RegisterType((*SerTrophy)(nil), "SerTrophy")
	proto.RegisterType((*SerGlobalTrophy)(nil), "SerGlobalTrophy")
	proto.RegisterType((*SerTypeAwards)(nil), "SerTypeAwards")
	proto.RegisterType((*SerSuperEquip)(nil), "SerSuperEquip")
	proto.RegisterType((*SerSuperEquipQue)(nil), "SerSuperEquipQue")
	proto.RegisterType((*SerRoleOpt)(nil), "SerRoleOpt")
	proto.RegisterType((*SerWallNpc)(nil), "SerWallNpc")
	proto.RegisterType((*SerEffects)(nil), "SerEffects")
	proto.RegisterType((*SerFriend)(nil), "SerFriend")
	proto.RegisterType((*SerMasterApprentice)(nil), "SerMasterApprentice")
	proto.RegisterType((*SerCabinet)(nil), "SerCabinet")
	proto.RegisterType((*SerCabinetLead)(nil), "SerCabinetLead")
	proto.RegisterType((*SerGestapo)(nil), "SerGestapo")
	proto.RegisterType((*SerGlobalExt)(nil), "SerGlobalExt")
	proto.RegisterType((*SerCounterAttack)(nil), "SerCounterAttack")
	proto.RegisterType((*SerCounterShop)(nil), "SerCounterShop")
	proto.RegisterType((*SerHonorDaily)(nil), "SerHonorDaily")
	proto.RegisterType((*SerLightningWarBoss)(nil), "SerLightningWarBoss")
	proto.RegisterType((*SerBerlinWar)(nil), "SerBerlinWar")
	proto.RegisterType((*SerBerlinRoleInfo)(nil), "SerBerlinRoleInfo")
	proto.RegisterType((*SerBerlinCityInfo)(nil), "SerBerlinCityInfo")
	proto.RegisterType((*SerBerlinRecord)(nil), "SerBerlinRecord")
	proto.RegisterType((*SerPlayerExt)(nil), "SerPlayerExt")
	proto.RegisterType((*SerPlayerNewYorkWar)(nil), "SerPlayerNewYorkWar")
	proto.RegisterType((*SerPlayerWorldWar)(nil), "SerPlayerWorldWar")
	proto.RegisterType((*SerSupplyRecord)(nil), "SerSupplyRecord")
	proto.RegisterType((*SerDecisiveInfo)(nil), "SerDecisiveInfo")
	proto.RegisterType((*SerMentorInfo)(nil), "SerMentorInfo")
	proto.RegisterType((*MentorBetterEquip)(nil), "MentorBetterEquip")
	proto.RegisterType((*DbWarPlane)(nil), "DbWarPlane")
	proto.RegisterType((*DbDay7Act)(nil), "DbDay7Act")
	proto.RegisterType((*DbDay7ActStatus)(nil), "DbDay7ActStatus")
	proto.RegisterType((*DbAtkCityAct)(nil), "DbAtkCityAct")
	proto.RegisterType((*SerActivity)(nil), "SerActivity")
	proto.RegisterType((*DbActivity)(nil), "DbActivity")
	proto.RegisterType((*SerChat)(nil), "SerChat")
	proto.RegisterType((*SerTriggerGift)(nil), "SerTriggerGift")
	proto.RegisterType((*DbTriggerGiftMap)(nil), "DbTriggerGiftMap")
	proto.RegisterType((*DbCia)(nil), "DbCia")
	proto.RegisterType((*DbPlayerRebellion)(nil), "DbPlayerRebellion")
	proto.RegisterType((*DbAirshipPersonData)(nil), "DbAirshipPersonData")
	proto.RegisterType((*SerMapEntityPb)(nil), "SerMapEntityPb")
	proto.RegisterType((*SerPlayerArmyPb)(nil), "SerPlayerArmyPb")
	proto.RegisterType((*SerMapBattlePb)(nil), "SerMapBattlePb")
	proto.RegisterType((*SerMapInfoPb)(nil), "SerMapInfoPb")
	proto.RegisterType((*SerMapExt1Pb)(nil), "SerMapExt1Pb")
	proto.RegisterType((*SerSignInInfo)(nil), "SerSignInInfo")
	proto.RegisterType((*SerCrossPersonalData)(nil), "SerCrossPersonalData")
	proto.RegisterType((*SerCrossFort)(nil), "SerCrossFort")
	proto.RegisterType((*DbFortress)(nil), "DbFortress")
	proto.RegisterType((*SerCrossRank)(nil), "SerCrossRank")
	proto.RegisterType((*SerCrossPlayerLord)(nil), "SerCrossPlayerLord")
	proto.RegisterType((*SerCrossPlayerWar)(nil), "SerCrossPlayerWar")
}

func init() { proto.RegisterFile("Serialize.proto", fileDescriptor_4c81ef5289f82af7) }

var fileDescriptor_4c81ef5289f82af7 = []byte{
	// 4000 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x5a, 0x5b, 0x6f, 0x1b, 0x49,
	0x76, 0x86, 0x44, 0xf1, 0x76, 0x48, 0xdd, 0x5a, 0xb2, 0x4d, 0xdf, 0xc6, 0x72, 0x7b, 0x6c, 0x6b,
	0x67, 0x76, 0xe8, 0xac, 0xf7, 0x61, 0x91, 0x04, 0x41, 0x20, 0x91, 0x92, 0xa5, 0x59, 0xd9, 0xd6,
	0x88, 0xca, 0x7a, 0x77, 0x91, 0x20, 0x28, 0x76, 0x17, 0xc9, 0xb2, 0x9a, 0x5d, 0x3d, 0x55, 0x45,
	0x49, 0x0c, 0x02, 0x04, 0xc9, 0x43, 0x1e, 0x12, 0x20, 0x40, 0x80, 0x79, 0xc8, 0x3f, 0xc8, 0x63,
	0x7e, 0x41, 0x1e, 0xf3, 0x47, 0xf2, 0x2b, 0xf2, 0x18, 0x9c, 0x53, 0xd5, 0xd5, 0x4d, 0x5a, 0xbb,
	0x6f, 0xec, 0xef, 0xd4, 0xf5, 0xd4, 0xb9, 0x7c, 0x75, 0x8a, 0xb0, 0x39, 0xe0, 0x4a, 0xb0, 0x44,
	0xfc, 0x1d, 0xef, 0x66, 0x4a, 0x1a, 0xf9, 0xa8, 0xdd, 0x93, 0xd3, 0xa9, 0x4c, 0xed, 0x57, 0xf8,
	0x0a, 0xea, 0x03, 0xae, 0xfa, 0xcc, 0xb0, 0xe0, 0x31, 0x40, 0x36, 0xd3, 0x93, 0x0b, 0x1e, 0x49,
	0x15, 0x77, 0x56, 0xf6, 0x2a, 0xfb, 0xad, 0xb7, 0xf5, 0xee, 0xc0, 0xa8, 0xd3, 0xd4, 0x84, 0xbf,
	0xa4, 0x76, 0x27, 0x5c, 0xc9, 0x60, 0x07, 0xd6, 0x26, 0x5c, 0x49, 0xd7, 0xa2, 0xda, 0x75, 0x60,
	0x25, 0x12, 0xac, 0xb3, 0xba, 0xb7, 0xb2, 0xdf, 0x7a, 0x5b, 0xeb, 0xf6, 0x87, 0x3d, 0xc1, 0xc2,
	0xe7, 0xd0, 0x18, 0x70, 0x75, 0xf4, 0xe3, 0x4c, 0x64, 0xc1, 0x3d, 0xa8, 0x72, 0xfc, 0xe1, 0xba,
	0xd5, 0xba, 0x04, 0xbb, 0x26, 0xef, 0x79, 0xcc, 0x12, 0x6c, 0x32, 0xc5, 0x1f, 0xbe, 0x09, 0xc1,
	0xe1, 0x57, 0x34, 0xf5, 0xb9, 0x92, 0x19, 0x4e, 0x9d, 0x29, 0x99, 0xf9, 0xa9, 0x11, 0x0c, 0xbf,
	0x81, 0xd6, 0x80, 0xab, 0xc3, 0x99, 0x48, 0xe2, 0x1f, 0x66, 0x3c, 0x78, 0x0c, 0x8d, 0xa1, 0xfb,
	0xed, 0xda, 0x35, 0xbb, 0xb9, 0x30, 0x7c, 0x49, 0x6d, 0x69, 0x6a, 0x6c, 0x7b, 0x1f, 0x2a, 0x3f,
	0x96, 0x9a, 0xe5, 0x78, 0xf8, 0xdf, 0x2b, 0x34, 0xe7, 0x25, 0xd3, 0x57, 0x41, 0x07, 0x9a, 0x53,
	0xf6, 0x59, 0xd2, 0x87, 0x9f, 0x38, 0x97, 0xc4, 0x6c, 0x2e, 0xe6, 0x24, 0x59, 0x2d, 0x4b, 0x1e,
	0x40, 0x23, 0x11, 0xd7, 0x9c, 0x04, 0x95, 0xa5, 0x2e, 0x37, 0x52, 0x25, 0x31, 0x49, 0xd6, 0xca,
	0x92, 0xa7, 0x50, 0xd7, 0x3c, 0x32, 0x42, 0xa6, 0x9d, 0x2a, 0xe1, 0xed, 0xee, 0xc0, 0x7e, 0x1b,
	0x14, 0x07, 0x00, 0x31, 0x13, 0xc9, 0xfc, 0x54, 0xbf, 0xe3, 0xa6, 0x53, 0xdb, 0xab, 0xec, 0x57,
	0x83, 0x0e, 0x6c, 0x11, 0x86, 0xfd, 0xcf, 0xc4, 0x35, 0x4f, 0xb5, 0xee, 0xd4, 0xf7, 0x56, 0xf6,
	0xab, 0xe1, 0xd7, 0xd0, 0x1c, 0x70, 0xd5, 0x93, 0xd3, 0x21, 0x33, 0xc1, 0x03, 0xa8, 0x45, 0xf4,
	0xcb, 0x9f, 0xa9, 0x15, 0x84, 0xff, 0xbe, 0x42, 0xda, 0xb0, 0x5f, 0xc7, 0x43, 0xd4, 0x5c, 0xe4,
	0x7e, 0x7b, 0x95, 0x38, 0xe1, 0x61, 0xf0, 0x1c, 0x5a, 0xda, 0xc8, 0x94, 0x5b, 0xc0, 0x6d, 0xb7,
	0xdd, 0x1d, 0x14, 0x18, 0x36, 0xc9, 0x84, 0x89, 0x26, 0xae, 0x49, 0xc5, 0x35, 0x39, 0x2f, 0xb0,
	0xe0, 0x19, 0xc0, 0x74, 0x96, 0x18, 0xd7, 0x62, 0x8d, 0xac, 0xa5, 0xd5, 0x7d, 0xef, 0xa1, 0x70,
	0x9d, 0x96, 0x74, 0x21, 0x13, 0x8e, 0x36, 0xe9, 0xce, 0xfe, 0x3d, 0x13, 0x09, 0x9e, 0xfd, 0x94,
	0x89, 0xc4, 0x1f, 0x01, 0x82, 0x6e, 0xa3, 0x17, 0x3c, 0x93, 0x8a, 0x36, 0xaa, 0xe8, 0x97, 0xdf,
	0xa8, 0x15, 0xb8, 0x51, 0x0e, 0x14, 0x67, 0x38, 0x0a, 0x53, 0x9c, 0xf9, 0x51, 0x10, 0x74, 0xf2,
	0x9e, 0x30, 0x73, 0x94, 0x47, 0xc2, 0xcc, 0xbd, 0x1c, 0x41, 0x37, 0xcb, 0x21, 0x4b, 0x63, 0x41,
	0xb3, 0x0c, 0xe9, 0x97, 0x9f, 0xe5, 0xf2, 0x46, 0xa2, 0x8b, 0xfc, 0xde, 0xae, 0x55, 0xa4, 0x3c,
	0xb8, 0x07, 0x6b, 0x53, 0x91, 0xf2, 0xa5, 0x16, 0xc1, 0x43, 0x68, 0x28, 0xae, 0xe5, 0x4c, 0x45,
	0xdc, 0x29, 0xd0, 0x8b, 0x9e, 0x42, 0x53, 0xcf, 0x32, 0xdb, 0xdd, 0x69, 0x0e, 0xba, 0x83, 0x1c,
	0x09, 0x4f, 0xdc, 0x0a, 0x8c, 0x49, 0x78, 0xf0, 0x10, 0x57, 0x80, 0xbf, 0x0a, 0xfb, 0xa6, 0xcf,
	0xf3, 0x8f, 0xc1, 0x1e, 0xac, 0xeb, 0x8c, 0x47, 0x82, 0x25, 0x16, 0x72, 0xd3, 0x14, 0x2d, 0xc2,
	0xdf, 0x41, 0x7b, 0xc0, 0xd5, 0xa7, 0xdc, 0x08, 0x83, 0x1d, 0x68, 0x79, 0x8b, 0x3c, 0x45, 0xb7,
	0x5f, 0xd9, 0xaf, 0xe2, 0x6a, 0x0a, 0x33, 0x5d, 0x75, 0xab, 0x29, 0xfa, 0xdc, 0x83, 0xea, 0x48,
	0xe2, 0x26, 0x2a, 0xce, 0x51, 0x8f, 0xf1, 0x2b, 0xbc, 0x84, 0x2d, 0x1c, 0x5a, 0xc9, 0x24, 0x1e,
	0x44, 0x13, 0x1e, 0xcf, 0x68, 0xad, 0xdb, 0xd1, 0x4c, 0x29, 0x9e, 0x9a, 0x1c, 0xf2, 0x93, 0xbc,
	0x84, 0x75, 0x9a, 0x24, 0x17, 0xb8, 0x89, 0x36, 0xec, 0x44, 0x39, 0x1a, 0xfe, 0xa5, 0x53, 0x6b,
	0x62, 0x4d, 0x40, 0x24, 0x25, 0x13, 0x40, 0xf0, 0x99, 0xf3, 0xf7, 0xa3, 0xdb, 0xdc, 0x2a, 0xd7,
	0xad, 0xbf, 0x8b, 0x74, 0x7c, 0xc8, 0x34, 0x0f, 0x5f, 0x03, 0x0c, 0xb8, 0x3a, 0x66, 0x91, 0x91,
	0x6a, 0x1e, 0x3c, 0x84, 0xfa, 0xc8, 0xfe, 0x74, 0xc3, 0x34, 0xba, 0x4e, 0xe4, 0x62, 0xd1, 0x3b,
	0x26, 0x52, 0x8d, 0x5b, 0x1c, 0xe3, 0x0f, 0x1f, 0x8b, 0x08, 0xf6, 0x96, 0x34, 0x9d, 0x5b, 0x4b,
	0x9a, 0xce, 0x4b, 0x96, 0x34, 0x9d, 0x87, 0x7f, 0x6a, 0xe3, 0x06, 0x8f, 0x26, 0x28, 0x37, 0x3c,
	0x9a, 0x14, 0x21, 0x03, 0xc1, 0x87, 0x50, 0x47, 0x10, 0x63, 0x93, 0x0d, 0x95, 0x0d, 0xc2, 0x31,
	0xe6, 0xfc, 0x99, 0x75, 0xc6, 0x09, 0x9f, 0x8a, 0x88, 0x25, 0xc1, 0x16, 0x34, 0xf8, 0x6d, 0xc6,
	0xd2, 0xf8, 0xec, 0xda, 0xe9, 0xeb, 0xa1, 0x0d, 0x56, 0xb9, 0xe7, 0xe5, 0x2d, 0xb1, 0xef, 0x2d,
	0xf5, 0xbd, 0x54, 0x9c, 0xe9, 0x99, 0xe2, 0xc1, 0x06, 0xd4, 0xb4, 0x61, 0x66, 0xa6, 0x5d, 0xcf,
	0x4d, 0xa8, 0xf3, 0x34, 0xbe, 0x14, 0x53, 0x3b, 0x2b, 0x01, 0x8a, 0x6b, 0x02, 0x2a, 0x04, 0xb4,
	0xa0, 0xa2, 0x78, 0x4c, 0x0e, 0xd9, 0x40, 0xe9, 0x2c, 0xb3, 0xcd, 0xab, 0x6e, 0xe6, 0x86, 0x88,
	0x07, 0x76, 0xc4, 0xda, 0xa2, 0xd1, 0xef, 0xdb, 0x99, 0xe7, 0x19, 0x3f, 0x4d, 0x47, 0x12, 0xf7,
	0x37, 0x11, 0x7a, 0x41, 0xbb, 0x27, 0xf6, 0x3b, 0xfc, 0x5b, 0x52, 0xcd, 0x60, 0x22, 0xb3, 0xe0,
	0x3e, 0x54, 0x45, 0xdc, 0x4b, 0x97, 0x3d, 0x28, 0x58, 0x87, 0xea, 0xb5, 0xc8, 0x4e, 0x63, 0xda,
	0x63, 0x15, 0x4d, 0x53, 0xf1, 0x91, 0xe2, 0x7a, 0x52, 0x5a, 0x69, 0x07, 0xea, 0x23, 0xc5, 0x39,
	0xf6, 0x5e, 0x5b, 0x5c, 0xca, 0x5b, 0xd8, 0xc6, 0x3c, 0xc1, 0x94, 0x99, 0x9f, 0xc8, 0x54, 0xaa,
	0x0b, 0x96, 0x62, 0x58, 0x5d, 0x53, 0x2c, 0xcd, 0x03, 0xf7, 0x66, 0x77, 0x51, 0xec, 0xf2, 0x01,
	0x81, 0x67, 0x72, 0x8c, 0xf9, 0x20, 0x91, 0x63, 0xef, 0x56, 0x39, 0x1e, 0xf6, 0x8b, 0x66, 0xdf,
	0xcb, 0x21, 0x36, 0xfb, 0x2c, 0x87, 0x8b, 0xcd, 0x10, 0x7f, 0x0a, 0x55, 0x9e, 0xf0, 0xc8, 0x78,
	0x4b, 0x26, 0xc9, 0x51, 0x62, 0xe3, 0x78, 0xf8, 0x6f, 0xab, 0xc5, 0x30, 0x47, 0xb7, 0x26, 0xb8,
	0x07, 0xeb, 0x11, 0x1b, 0x8a, 0x94, 0x9b, 0x33, 0xce, 0x8a, 0x73, 0xbe, 0x0f, 0x1b, 0x25, 0xf8,
	0xe8, 0x36, 0xa3, 0x43, 0xab, 0x60, 0xb8, 0x1f, 0x09, 0xa5, 0xcd, 0xc7, 0x8c, 0xa7, 0xdf, 0xcb,
	0x61, 0x49, 0x27, 0xaf, 0xa0, 0xad, 0x67, 0x59, 0x96, 0xcc, 0x5d, 0xee, 0xb6, 0x71, 0x75, 0xab,
	0x8b, 0xfa, 0x2e, 0xe1, 0xc1, 0x2b, 0x68, 0x51, 0x90, 0xb1, 0x20, 0x1d, 0x6e, 0xeb, 0xed, 0xb6,
	0x5d, 0xe5, 0xa0, 0x10, 0x50, 0x20, 0x77, 0x18, 0xb6, 0xab, 0xe5, 0x81, 0xbc, 0xc0, 0x82, 0x67,
	0xf0, 0x80, 0x9c, 0xf7, 0x13, 0x23, 0x45, 0x8a, 0x74, 0x7c, 0x9a, 0x1a, 0x3e, 0x56, 0x2c, 0xb1,
	0x29, 0x28, 0x08, 0xe1, 0x51, 0xde, 0xe0, 0xc0, 0x18, 0x16, 0x5d, 0x61, 0x24, 0xf5, 0x6d, 0x1a,
	0x94, 0xa6, 0x7e, 0x0b, 0x1b, 0xe8, 0x4d, 0xd1, 0x8f, 0x33, 0xa1, 0x05, 0xaa, 0x08, 0x8f, 0x3c,
	0x92, 0x09, 0x2a, 0xac, 0xcf, 0x0c, 0x77, 0x0a, 0xa1, 0xb8, 0x7e, 0xc3, 0x54, 0xbc, 0x1c, 0x34,
	0x3b, 0x50, 0x77, 0xad, 0x5d, 0x24, 0xf2, 0xb6, 0x60, 0x23, 0xf6, 0xa5, 0x92, 0xd9, 0x64, 0x8e,
	0xfd, 0x0d, 0xfd, 0x5a, 0x8e, 0xd8, 0x86, 0xd8, 0xd1, 0xbb, 0x44, 0x0e, 0x59, 0xe2, 0xda, 0xb6,
	0x61, 0x6d, 0x9c, 0x48, 0x1b, 0xa2, 0x2a, 0xc1, 0x63, 0xd8, 0xd1, 0x32, 0x61, 0xea, 0x92, 0xab,
	0xa9, 0x1e, 0x18, 0xa6, 0x4c, 0xc9, 0x89, 0xbe, 0x02, 0x40, 0xd3, 0x22, 0xd2, 0xa0, 0x7d, 0xcc,
	0xbe, 0xc8, 0x21, 0x3c, 0xc7, 0x8c, 0x69, 0xfd, 0xbe, 0x9c, 0xef, 0x2a, 0xfb, 0xd5, 0xf0, 0xe7,
	0xb0, 0xee, 0x5c, 0xe6, 0x00, 0x37, 0xa5, 0x83, 0xc7, 0x7e, 0x7f, 0x76, 0x7d, 0xad, 0x6e, 0x21,
	0x0c, 0xff, 0x84, 0x5a, 0xd3, 0xe9, 0xd8, 0x61, 0x9f, 0x01, 0x68, 0xff, 0xe5, 0x7b, 0x14, 0x0d,
	0xc2, 0x7d, 0x0a, 0xc3, 0x05, 0x80, 0x44, 0x67, 0xb7, 0x4c, 0x74, 0xfc, 0xfe, 0x5f, 0x50, 0x64,
	0xc4, 0x64, 0xfb, 0x31, 0x43, 0x73, 0xac, 0xc8, 0xcc, 0x78, 0xbf, 0x75, 0xb0, 0x0b, 0x9f, 0x9f,
	0x58, 0x92, 0x7c, 0xc8, 0x22, 0x74, 0xf0, 0x1b, 0xfb, 0xd3, 0x37, 0x74, 0xa2, 0xf0, 0x25, 0x35,
	0x3c, 0x1a, 0x8d, 0x78, 0x64, 0x34, 0x2a, 0x9d, 0xd3, 0x4f, 0x3f, 0xa9, 0x95, 0x84, 0xfb, 0x74,
	0x34, 0xc7, 0x4a, 0xf0, 0x34, 0x46, 0xca, 0x11, 0x0f, 0xed, 0x6f, 0xef, 0x4e, 0x7d, 0x07, 0x84,
	0x3f, 0xad, 0xc0, 0x0e, 0x65, 0x7f, 0x6d, 0xb8, 0x3a, 0xc8, 0x32, 0xcc, 0x22, 0x22, 0xe2, 0xc1,
	0x0b, 0xa8, 0x4d, 0x09, 0xa3, 0x53, 0x6a, 0xbd, 0xdd, 0xe9, 0xf6, 0x87, 0x5f, 0x34, 0xda, 0x87,
	0x16, 0xf3, 0x5f, 0xda, 0x59, 0xce, 0x9d, 0x2d, 0x1f, 0x03, 0x30, 0xd4, 0x35, 0x8f, 0x4f, 0x63,
	0xbd, 0x64, 0x48, 0xc1, 0x36, 0x34, 0x87, 0x72, 0x36, 0x9e, 0x18, 0x94, 0xd9, 0xf3, 0xfb, 0x07,
	0xda, 0x67, 0xcf, 0xba, 0x28, 0x36, 0xc8, 0x14, 0x3f, 0x4f, 0x58, 0xea, 0x13, 0xdb, 0x36, 0x34,
	0xa3, 0x99, 0x72, 0x90, 0xb5, 0x95, 0x2d, 0x68, 0x24, 0x9c, 0xc5, 0x03, 0xc3, 0x33, 0xe7, 0xb3,
	0x9b, 0x50, 0x17, 0xfa, 0x58, 0xa4, 0x7a, 0xe2, 0xa2, 0xee, 0x2e, 0xb4, 0x85, 0xee, 0x29, 0xce,
	0x0c, 0x47, 0xbf, 0x27, 0xef, 0x6c, 0x20, 0xef, 0x13, 0xfa, 0xec, 0xfa, 0x58, 0xa4, 0x42, 0x4f,
	0x3a, 0x35, 0xc4, 0xc2, 0x5f, 0x92, 0xdb, 0xf4, 0x8a, 0x18, 0x81, 0x0e, 0x5b, 0x0a, 0x19, 0x4e,
	0x93, 0xed, 0x6e, 0xa9, 0x49, 0x78, 0x48, 0xab, 0x7e, 0xc7, 0xb5, 0x61, 0x19, 0xc5, 0xe9, 0xb1,
	0xfd, 0xe9, 0x8f, 0xb1, 0x24, 0x62, 0x42, 0xe9, 0x89, 0xc8, 0x9c, 0xd2, 0x1a, 0xdd, 0x03, 0xfb,
	0x1d, 0xfe, 0xeb, 0x2a, 0x91, 0x07, 0xeb, 0x30, 0x18, 0xc1, 0x42, 0x58, 0x1b, 0x4a, 0x9d, 0x27,
	0xc9, 0x5d, 0x0c, 0x38, 0x67, 0x62, 0x3c, 0x31, 0xa9, 0x48, 0xc7, 0x9f, 0x98, 0x3a, 0x94, 0x5a,
	0x07, 0x4f, 0xa0, 0xa5, 0x79, 0x1a, 0xf7, 0x26, 0xcc, 0x60, 0xd0, 0x5e, 0x72, 0xe1, 0x3d, 0x68,
	0x0e, 0xb9, 0x4a, 0x44, 0xfa, 0x89, 0x29, 0xd2, 0x0c, 0xa6, 0x6f, 0xa4, 0x3a, 0x39, 0x18, 0x84,
	0x00, 0x13, 0x8c, 0xd7, 0x7d, 0xa4, 0xba, 0x2e, 0xb4, 0x6d, 0x60, 0x93, 0x13, 0x8f, 0x06, 0x3f,
	0x83, 0xcd, 0x31, 0x2d, 0xea, 0x82, 0x0f, 0x79, 0x92, 0x58, 0x12, 0x6d, 0x63, 0xe0, 0xbb, 0x45,
	0x3c, 0xd8, 0x87, 0xf5, 0x48, 0xce, 0x52, 0x34, 0x01, 0x0a, 0x4b, 0xa4, 0x53, 0x8c, 0x82, 0xc4,
	0x84, 0x4b, 0x82, 0xe0, 0x2b, 0xb8, 0x1f, 0x29, 0xa9, 0x35, 0x06, 0xae, 0x0f, 0x59, 0xd4, 0x9b,
	0x8c, 0x0f, 0x8c, 0x51, 0xb8, 0x07, 0x4b, 0xb2, 0xff, 0x6f, 0x85, 0x1c, 0x6d, 0xb1, 0xd3, 0x53,
	0x68, 0x46, 0xf3, 0xc8, 0xb2, 0x57, 0x67, 0x9e, 0xd0, 0xed, 0xe5, 0x08, 0x66, 0x66, 0xa4, 0x97,
	0xde, 0x2e, 0x5a, 0x50, 0xc9, 0xa4, 0x76, 0x26, 0x51, 0xa4, 0xed, 0x35, 0xfa, 0x7e, 0x04, 0x0d,
	0x25, 0x13, 0x4a, 0xac, 0xee, 0x4e, 0xd0, 0xe8, 0x9e, 0xa6, 0xe6, 0x4c, 0xa6, 0x63, 0x0a, 0x94,
	0x96, 0x57, 0xa1, 0x92, 0x69, 0x13, 0x55, 0x4a, 0x28, 0x16, 0x3c, 0x30, 0x57, 0x7e, 0xa1, 0x05,
	0x5d, 0x6b, 0x94, 0xe9, 0x1a, 0xc6, 0xa7, 0xcf, 0x52, 0xa4, 0x96, 0x19, 0xa2, 0xb7, 0x77, 0x9a,
	0x7b, 0x95, 0xfd, 0x4a, 0xf0, 0x1c, 0x1a, 0x7a, 0x22, 0x33, 0x9a, 0x16, 0x5c, 0xda, 0x2c, 0xf6,
	0x89, 0x09, 0x3c, 0xfc, 0x73, 0x6b, 0x81, 0x05, 0x82, 0x6b, 0xa7, 0xb5, 0xe6, 0x91, 0xf3, 0x61,
	0x69, 0x90, 0xc5, 0x23, 0x0f, 0x27, 0x14, 0xd1, 0x4a, 0xa7, 0x17, 0x00, 0x44, 0x64, 0xf7, 0x14,
	0x5c, 0x57, 0x5c, 0xfa, 0x68, 0xd3, 0xdd, 0xc6, 0x32, 0x78, 0xed, 0x59, 0x8f, 0x4d, 0xdd, 0x96,
	0xef, 0x3f, 0x43, 0x3a, 0x4d, 0xe2, 0xb7, 0xce, 0x6d, 0xd7, 0xcb, 0xf2, 0xb7, 0xe1, 0xdf, 0x53,
	0xfc, 0xf8, 0xc2, 0x22, 0x01, 0x56, 0x45, 0xee, 0xab, 0x7f, 0xf4, 0x40, 0xee, 0xc1, 0x7a, 0xc2,
	0xb4, 0x39, 0xc6, 0x01, 0x68, 0x6d, 0x6b, 0x4b, 0xe7, 0x54, 0x5d, 0xd4, 0x6f, 0x6d, 0x81, 0x0e,
	0xff, 0x53, 0x85, 0xbc, 0xa5, 0xb0, 0xe4, 0x57, 0x00, 0xd6, 0xd6, 0x7b, 0xf6, 0x86, 0x81, 0xc6,
	0x11, 0x14, 0xc6, 0x6e, 0x13, 0xe4, 0x48, 0x06, 0xaf, 0xa1, 0x65, 0xf9, 0xfd, 0xb1, 0x92, 0xde,
	0x63, 0xee, 0x6a, 0xd8, 0x41, 0x1a, 0x67, 0xf5, 0x53, 0x59, 0xb8, 0xf1, 0x04, 0xcf, 0x51, 0x82,
	0x39, 0x5f, 0x3b, 0x96, 0xb4, 0x55, 0x74, 0x77, 0x64, 0x00, 0x43, 0x12, 0xd3, 0x36, 0xcf, 0xda,
	0x7d, 0x3c, 0x83, 0x75, 0x47, 0xde, 0x3e, 0x89, 0x34, 0xe5, 0xca, 0xed, 0xa7, 0x30, 0xba, 0x62,
	0xe3, 0xf5, 0x3c, 0xd0, 0x0d, 0xf9, 0x58, 0xa4, 0x34, 0x46, 0xa3, 0x44, 0x35, 0x09, 0x68, 0x12,
	0xb0, 0x03, 0xad, 0x4c, 0xf1, 0xdf, 0x08, 0x7e, 0x43, 0x20, 0x10, 0xb8, 0x0e, 0x55, 0x66, 0xae,
	0x7a, 0xfd, 0x4e, 0x8b, 0x3e, 0x1f, 0xbb, 0x20, 0xf0, 0xbd, 0x1c, 0xea, 0x4e, 0x7b, 0x69, 0xd2,
	0x7b, 0xb0, 0x4e, 0x66, 0xea, 0xa3, 0xc4, 0x3a, 0x59, 0xe9, 0x4b, 0x68, 0xe6, 0xce, 0xa1, 0x3b,
	0x1b, 0xcb, 0x2a, 0xba, 0x70, 0xa2, 0xf0, 0x8a, 0x48, 0xe1, 0x22, 0xb8, 0x60, 0xac, 0xab, 0xfb,
	0x95, 0x62, 0x39, 0xab, 0x6e, 0x39, 0x60, 0xb7, 0x49, 0x4e, 0xbc, 0x48, 0x78, 0x83, 0x47, 0xd0,
	0xa4, 0xf8, 0x41, 0xb2, 0xfa, 0xa2, 0x65, 0xff, 0xef, 0x4a, 0x69, 0x36, 0x7f, 0x4a, 0x7e, 0x38,
	0x67, 0xde, 0x0b, 0xc3, 0x3d, 0x80, 0x3a, 0xda, 0x5f, 0x9f, 0x8f, 0xdc, 0x39, 0xe7, 0xde, 0xf9,
	0xcc, 0xee, 0xef, 0x87, 0x19, 0x9f, 0x71, 0x7f, 0x95, 0xb6, 0x23, 0xdb, 0x06, 0x6d, 0x58, 0x8b,
	0xd8, 0x34, 0x2b, 0x6c, 0x92, 0x99, 0xab, 0x03, 0x35, 0x75, 0x67, 0xb9, 0x01, 0xb5, 0x98, 0x8f,
	0xf0, 0xbb, 0xb6, 0x64, 0xe7, 0xf5, 0xb2, 0x9d, 0x37, 0x72, 0xc6, 0x89, 0xa6, 0xf0, 0x31, 0x8a,
	0x66, 0xd9, 0x9c, 0x56, 0xe9, 0xcf, 0x2e, 0xe5, 0xb7, 0x18, 0x4c, 0x08, 0xa4, 0xb3, 0x0b, 0xff,
	0x67, 0x85, 0x58, 0xd3, 0x82, 0x2d, 0x6d, 0x42, 0xfd, 0x4a, 0x24, 0x89, 0xa5, 0xf4, 0x2e, 0xdf,
	0x19, 0x3e, 0xcd, 0x7e, 0x8d, 0xb7, 0x35, 0xab, 0xd4, 0x5d, 0x68, 0xe7, 0xc8, 0x09, 0x57, 0xd2,
	0x79, 0xd8, 0x7d, 0xd8, 0xc0, 0x8e, 0x03, 0xa3, 0x38, 0xbb, 0x22, 0xdc, 0x6e, 0x27, 0x00, 0x28,
	0x70, 0xb7, 0xa5, 0x5d, 0x68, 0x23, 0x86, 0x04, 0x8b, 0x96, 0x53, 0xcb, 0x47, 0xd0, 0xd4, 0xca,
	0xe3, 0xf5, 0x7c, 0xc3, 0xee, 0x8c, 0x1b, 0x14, 0x90, 0xd0, 0x30, 0x6f, 0xb3, 0x44, 0x0a, 0x63,
	0x37, 0x17, 0xfe, 0x27, 0x90, 0x7b, 0x9e, 0x27, 0x6c, 0xce, 0x15, 0x26, 0x33, 0xcc, 0xe4, 0x52,
	0x19, 0xc5, 0x84, 0xb1, 0x19, 0x8d, 0x98, 0xa7, 0x9e, 0x4d, 0xa7, 0x32, 0x75, 0xb7, 0xb5, 0x7a,
	0x77, 0x40, 0x9f, 0xc1, 0x03, 0xd8, 0x64, 0x59, 0x26, 0x45, 0x6a, 0x8e, 0x15, 0xe7, 0x25, 0x2a,
	0x8e, 0xe4, 0x9d, 0xc8, 0x1e, 0x6e, 0xe6, 0x58, 0xaa, 0xa9, 0x25, 0x0d, 0xa8, 0x90, 0x09, 0x57,
	0x72, 0x70, 0x25, 0x52, 0xb7, 0x9d, 0x07, 0xb0, 0x99, 0xc8, 0x31, 0xaa, 0x10, 0xc9, 0x47, 0x69,
	0x47, 0x21, 0xac, 0x5b, 0xf7, 0xc7, 0x21, 0xce, 0xa5, 0x76, 0x56, 0xd6, 0x22, 0x8f, 0x10, 0xda,
	0xa0, 0xd9, 0xdc, 0x87, 0x0d, 0xba, 0x0b, 0x9c, 0xb3, 0x79, 0x5f, 0xce, 0x86, 0x89, 0x8d, 0xed,
	0x4d, 0xf2, 0x48, 0x2a, 0x4e, 0xe0, 0x51, 0xf8, 0x43, 0x44, 0xa2, 0xa1, 0x38, 0x5e, 0xe0, 0xec,
	0x21, 0x36, 0x82, 0x47, 0x10, 0xa4, 0x18, 0xd5, 0x2e, 0x98, 0x88, 0x0f, 0x7d, 0x07, 0xeb, 0x8d,
	0xdf, 0xc2, 0x56, 0x3c, 0xbc, 0x54, 0x62, 0x3c, 0xe6, 0xea, 0x9d, 0x18, 0x99, 0xf7, 0x2c, 0x73,
	0x4e, 0xb9, 0xdd, 0xed, 0x2f, 0x09, 0x70, 0xf4, 0x89, 0x30, 0xc7, 0xc9, 0x9c, 0x92, 0x41, 0x67,
	0xdd, 0xdd, 0x17, 0xb7, 0x85, 0xfe, 0x38, 0x1a, 0x7d, 0x4c, 0x13, 0x91, 0xf2, 0x13, 0x92, 0x77,
	0x36, 0x68, 0xe2, 0xfb, 0xb0, 0x21, 0xf4, 0x41, 0x7c, 0xcd, 0xd2, 0xc8, 0x32, 0xdc, 0xce, 0x26,
	0xe1, 0x1b, 0x50, 0xcb, 0x58, 0x74, 0x75, 0x1a, 0x77, 0xb6, 0xf6, 0x56, 0xf6, 0x9b, 0x54, 0x0f,
	0x31, 0x32, 0xb5, 0xc9, 0x6f, 0xdb, 0xe5, 0xd1, 0x41, 0x8e, 0x04, 0xcf, 0x01, 0xd0, 0x63, 0x85,
	0x99, 0x1f, 0x44, 0xa6, 0x13, 0x38, 0xde, 0xd0, 0x1f, 0x1e, 0x78, 0x30, 0x78, 0x01, 0x2d, 0x57,
	0x0a, 0x39, 0x57, 0x32, 0xeb, 0xec, 0xb8, 0x2b, 0x59, 0x7f, 0x38, 0x28, 0x50, 0x24, 0x27, 0x53,
	0x71, 0x6b, 0x66, 0xca, 0x26, 0xec, 0xdd, 0x45, 0xe7, 0x7c, 0x0c, 0x3b, 0x53, 0x91, 0x08, 0xc3,
	0xd4, 0xfc, 0xe8, 0x36, 0xe3, 0xa8, 0xa6, 0x99, 0xe2, 0x9d, 0x7b, 0x9e, 0xe5, 0x4d, 0x38, 0x33,
	0x3d, 0x19, 0xf3, 0xce, 0x7d, 0x3a, 0x64, 0xd4, 0x7e, 0xc2, 0xa2, 0xab, 0x44, 0x68, 0xd3, 0x79,
	0x40, 0x61, 0xea, 0x05, 0xb4, 0xe5, 0x68, 0x74, 0x26, 0x52, 0x4e, 0x35, 0x89, 0x4e, 0xc7, 0xe5,
	0xa9, 0x8f, 0x25, 0x90, 0x12, 0xe0, 0x84, 0x99, 0xc3, 0xd9, 0x10, 0x4f, 0xf2, 0x21, 0x8d, 0x65,
	0x73, 0x79, 0xaf, 0x80, 0x1f, 0xf9, 0x90, 0x2b, 0xe3, 0xf9, 0xe9, 0x94, 0x8d, 0x79, 0xe7, 0x31,
	0xb5, 0xdc, 0x85, 0x76, 0x34, 0x53, 0x87, 0x1e, 0x7d, 0x92, 0x7b, 0x10, 0x15, 0x53, 0xdf, 0x49,
	0x19, 0xeb, 0xce, 0xd3, 0xbc, 0x60, 0x58, 0x60, 0x17, 0x7c, 0xf4, 0x61, 0x36, 0xed, 0x7c, 0xe5,
	0x0a, 0x3e, 0xf7, 0x32, 0xce, 0x22, 0x7e, 0xc5, 0x79, 0x26, 0xd2, 0x31, 0x45, 0x18, 0x8d, 0xe2,
	0x67, 0xb9, 0xeb, 0x7d, 0x7e, 0xf7, 0xdb, 0x93, 0x33, 0xa6, 0x6d, 0x1e, 0xdc, 0xcb, 0xe3, 0x64,
	0x96, 0xb0, 0x94, 0xf7, 0x26, 0x78, 0x01, 0x7a, 0xbe, 0xa8, 0xbb, 0x27, 0x50, 0x8f, 0x87, 0xc8,
	0x81, 0x79, 0x27, 0x74, 0xf6, 0xdb, 0x1f, 0x7e, 0x62, 0x44, 0x8b, 0x79, 0xf0, 0x1d, 0x6c, 0x93,
	0x74, 0xce, 0x55, 0x41, 0xd9, 0x5e, 0xb8, 0x8c, 0xd8, 0x5f, 0x96, 0x50, 0xd1, 0x66, 0x96, 0xf6,
	0xd0, 0x5c, 0xbe, 0xce, 0x8b, 0x36, 0xf6, 0x1b, 0xef, 0xbe, 0x31, 0x8f, 0x84, 0x16, 0xd7, 0xd6,
	0x56, 0x5e, 0x16, 0x77, 0xdf, 0x7e, 0x09, 0x47, 0x1a, 0x39, 0xe5, 0xa9, 0x91, 0x8a, 0x5a, 0xbd,
	0x2a, 0x68, 0xe4, 0x7b, 0x8f, 0x06, 0x6f, 0x60, 0xdb, 0x51, 0xdf, 0x73, 0xae, 0xb4, 0x4c, 0xc9,
	0x26, 0x5e, 0x53, 0xd3, 0x5d, 0x34, 0xae, 0x65, 0xd9, 0x17, 0x17, 0xef, 0xfd, 0x3f, 0x70, 0xf1,
	0x7e, 0x04, 0xd5, 0xcf, 0xfc, 0x86, 0x27, 0x9d, 0x9f, 0x39, 0x55, 0xd0, 0xc5, 0xec, 0x7b, 0x84,
	0x82, 0xaf, 0xa1, 0x91, 0x5f, 0x94, 0x3b, 0xdf, 0x14, 0x9c, 0xc0, 0xaa, 0xe0, 0x93, 0x93, 0xa0,
	0x39, 0xc8, 0x9b, 0xb4, 0xc7, 0xb4, 0x49, 0x38, 0x05, 0x91, 0x6f, 0xcb, 0x56, 0x52, 0xc0, 0x3f,
	0xa7, 0x93, 0xd9, 0x07, 0x48, 0xf9, 0xcd, 0xef, 0xa4, 0xba, 0xc2, 0x51, 0xbf, 0x73, 0x3b, 0xf0,
	0xa3, 0x7e, 0xf0, 0xb2, 0x20, 0x84, 0xed, 0x85, 0x71, 0xe9, 0x78, 0xbb, 0x8b, 0x69, 0xed, 0x1d,
	0xd1, 0xa8, 0x2f, 0xba, 0x6e, 0x43, 0x73, 0xca, 0x6e, 0x1d, 0x8b, 0xb6, 0xac, 0xef, 0x29, 0xb4,
	0x59, 0x34, 0x11, 0xfc, 0x9a, 0xa3, 0xae, 0xf5, 0x32, 0xf3, 0xfb, 0xaf, 0x55, 0x5b, 0xa2, 0x59,
	0xdc, 0xda, 0x0e, 0xb4, 0x88, 0xea, 0x95, 0x46, 0xaa, 0x06, 0xcf, 0x5d, 0x6d, 0xdb, 0x82, 0x07,
	0x77, 0xdd, 0xfe, 0x9f, 0x42, 0x5b, 0x71, 0x6d, 0x94, 0x88, 0x4c, 0xa9, 0xd0, 0xee, 0xc5, 0x21,
	0x6c, 0x97, 0xc5, 0x76, 0x88, 0xc5, 0x92, 0x11, 0xda, 0xf5, 0x0d, 0xe7, 0x57, 0xbe, 0x2c, 0x51,
	0x75, 0xbc, 0xbb, 0x89, 0xa8, 0xed, 0xb1, 0x94, 0xfe, 0x31, 0xdd, 0x70, 0xa6, 0x65, 0xba, 0x54,
	0xee, 0xd8, 0x83, 0x4d, 0xe6, 0xcb, 0x1c, 0xb6, 0x67, 0x63, 0x39, 0x98, 0x80, 0xed, 0x89, 0x7c,
	0x99, 0xa8, 0xf6, 0xe2, 0xb0, 0xc2, 0x0d, 0x38, 0xe0, 0x91, 0x4c, 0x63, 0x97, 0x6c, 0x7f, 0xa0,
	0x5c, 0xbb, 0x64, 0x4b, 0x4d, 0x4b, 0x27, 0x30, 0x2e, 0xaf, 0x7c, 0xb1, 0xe7, 0x52, 0x81, 0xc7,
	0x55, 0xec, 0x96, 0x0e, 0xe1, 0x8a, 0x86, 0x5c, 0xf0, 0x8d, 0x2d, 0x68, 0xe4, 0x3e, 0x44, 0xea,
	0xa7, 0x12, 0xe0, 0x28, 0x99, 0xd3, 0xa5, 0x60, 0x35, 0x4f, 0x9f, 0xa3, 0x64, 0x5e, 0x4a, 0x74,
	0x5b, 0xd0, 0xc8, 0x94, 0xcc, 0x4a, 0xb4, 0x38, 0x00, 0x40, 0x64, 0x50, 0x50, 0xe3, 0x46, 0xf8,
	0x2f, 0x2b, 0x44, 0xf6, 0x4b, 0x3e, 0xd6, 0x81, 0xba, 0xf5, 0x43, 0xed, 0x17, 0x6f, 0xa5, 0xc1,
	0x13, 0xa8, 0x71, 0x5b, 0x4b, 0xc9, 0xc9, 0xbe, 0x15, 0xd8, 0xb2, 0xc7, 0x13, 0xa8, 0x69, 0x4c,
	0xff, 0xda, 0x93, 0x21, 0x2b, 0x1d, 0x20, 0x18, 0xbc, 0x80, 0xfa, 0x90, 0x1b, 0xc3, 0x55, 0xce,
	0x77, 0x03, 0x27, 0x3e, 0x24, 0xd4, 0x16, 0x46, 0x7a, 0xb0, 0xfd, 0x05, 0x68, 0xe3, 0x24, 0x82,
	0x97, 0xf3, 0x2c, 0xbf, 0x7c, 0x3c, 0x82, 0x26, 0xad, 0xe4, 0xae, 0xdb, 0xcb, 0x3f, 0xaf, 0x00,
	0x94, 0x02, 0xd9, 0x06, 0xd4, 0x30, 0xaf, 0x3b, 0x2a, 0x59, 0x45, 0x56, 0x66, 0x70, 0xa0, 0x55,
	0xfa, 0xda, 0x84, 0x3a, 0x45, 0xc8, 0xd3, 0xb8, 0x53, 0x21, 0x60, 0x1d, 0xaa, 0x09, 0xbf, 0xe6,
	0x49, 0x67, 0x8d, 0x3e, 0x5b, 0x50, 0xe1, 0xb7, 0x59, 0xa7, 0x9a, 0x7f, 0x20, 0x25, 0xab, 0xe5,
	0x0d, 0x35, 0xe5, 0xeb, 0x3a, 0x7d, 0x52, 0x5e, 0xa7, 0x0a, 0x7e, 0x4e, 0xda, 0xc2, 0x39, 0x34,
	0xfb, 0xc3, 0x3e, 0x9b, 0xff, 0x0a, 0x93, 0xdd, 0x2e, 0xfa, 0x42, 0x74, 0x4d, 0x86, 0x77, 0x1a,
	0x97, 0xe9, 0xcb, 0x5d, 0x36, 0x80, 0x1b, 0x34, 0x48, 0x97, 0xe6, 0x19, 0x2f, 0xae, 0x0e, 0xf6,
	0xa5, 0x0f, 0xaf, 0x0e, 0xb8, 0x83, 0xa2, 0xc0, 0xba, 0xd5, 0xf5, 0xf3, 0xd8, 0xb3, 0x0d, 0x7f,
	0x05, 0x9b, 0x4b, 0x10, 0x2e, 0xfe, 0x8a, 0xcf, 0x8b, 0x82, 0xdd, 0x9d, 0xf3, 0x86, 0xff, 0xb1,
	0x02, 0xed, 0x85, 0x24, 0xbd, 0xb0, 0x90, 0x95, 0x3f, 0xb8, 0x90, 0xd5, 0xbb, 0x17, 0x52, 0x9a,
	0xa8, 0xf2, 0xc5, 0x06, 0xad, 0xe0, 0xcb, 0x3a, 0x31, 0xe5, 0x4b, 0x86, 0xcc, 0xf5, 0xfa, 0xd7,
	0x1c, 0x09, 0x71, 0x95, 0xaa, 0x3a, 0x19, 0xd5, 0x66, 0x0f, 0x22, 0x23, 0xae, 0x85, 0x99, 0x07,
	0x4f, 0xa1, 0xc1, 0xdc, 0x6f, 0x5f, 0x63, 0xeb, 0x0f, 0xbd, 0xf8, 0x05, 0x06, 0x3a, 0x73, 0x88,
	0xc9, 0x7e, 0xc2, 0x6e, 0xae, 0x1c, 0x3d, 0x5c, 0xef, 0x1e, 0x94, 0x40, 0xe4, 0x30, 0xd8, 0x88,
	0x29, 0x23, 0x53, 0x5f, 0x1f, 0x3c, 0xc8, 0x91, 0xf0, 0xa7, 0x55, 0xb4, 0x24, 0x3f, 0x64, 0x00,
	0x90, 0xcf, 0xe8, 0xad, 0xa9, 0xb3, 0xa4, 0xc8, 0xe2, 0x56, 0xf4, 0x00, 0x6a, 0x46, 0xde, 0x9c,
	0xa6, 0xe6, 0xae, 0x82, 0x15, 0xde, 0xc9, 0x4a, 0x8e, 0xd9, 0x86, 0x35, 0x99, 0xf1, 0x9c, 0x77,
	0x96, 0x1e, 0x03, 0xf2, 0xaa, 0x81, 0x7d, 0x54, 0x5d, 0xbc, 0xcc, 0x20, 0xac, 0xd9, 0x35, 0x5f,
	0x0e, 0x63, 0xbb, 0xb4, 0x73, 0x5a, 0x26, 0x79, 0x4c, 0xd3, 0x85, 0xbf, 0x86, 0x99, 0xa9, 0x34,
	0x4b, 0x98, 0xa1, 0xc8, 0x65, 0x99, 0xd6, 0x41, 0x64, 0x2e, 0x1d, 0x1a, 0xbc, 0x86, 0x75, 0xf2,
	0xa9, 0x1c, 0x20, 0xb2, 0x69, 0xcf, 0xf4, 0xa8, 0x8c, 0x87, 0x3f, 0xd9, 0xb7, 0x57, 0x64, 0x3e,
	0xc8, 0xe1, 0x90, 0x18, 0x9d, 0x2c, 0x3c, 0x29, 0xe0, 0xc8, 0xbd, 0x02, 0x0d, 0x5e, 0x5b, 0xf6,
	0xd4, 0x17, 0x2c, 0x91, 0xe3, 0x52, 0xa1, 0xaf, 0xe7, 0xc1, 0xc3, 0xf9, 0x19, 0x46, 0xce, 0x27,
	0xee, 0xc1, 0x09, 0xc3, 0x1a, 0x0a, 0xfd, 0xd3, 0x2c, 0xcd, 0xf5, 0x14, 0x9a, 0x8a, 0xc7, 0xe7,
	0x2c, 0xba, 0xe2, 0xb9, 0xc9, 0x40, 0xf7, 0x22, 0x47, 0xc2, 0x7f, 0x5c, 0xa1, 0x9a, 0x47, 0x89,
	0xfe, 0xa2, 0xef, 0x8f, 0xc5, 0xc8, 0x94, 0xeb, 0x7e, 0x85, 0xea, 0x57, 0x97, 0x95, 0x5d, 0xc9,
	0x6f, 0xbe, 0x74, 0x7d, 0x74, 0x47, 0xe3, 0xdd, 0xbc, 0xba, 0x54, 0x59, 0xa8, 0xe5, 0xe2, 0x2b,
	0xee, 0x2f, 0x6d, 0xe1, 0x09, 0x6c, 0x7d, 0x41, 0xc0, 0x17, 0x1c, 0xef, 0x35, 0x66, 0xa7, 0xf2,
	0x1a, 0x9d, 0x3a, 0xa8, 0x80, 0x53, 0x82, 0xc3, 0x4b, 0xa8, 0xd2, 0x13, 0x7d, 0x9e, 0x78, 0x14,
	0xa3, 0x27, 0x0a, 0x7b, 0x81, 0x5b, 0x75, 0x05, 0xcb, 0x9c, 0xed, 0xd9, 0x58, 0xf6, 0x1c, 0x5a,
	0x23, 0x3e, 0x65, 0x09, 0x3f, 0x18, 0xf3, 0xb4, 0x78, 0xdd, 0x3d, 0x2e, 0xb0, 0xf0, 0x6f, 0x60,
	0xfb, 0x2e, 0xee, 0x56, 0x1d, 0xce, 0x46, 0xa3, 0xdc, 0xbd, 0x51, 0xa7, 0x43, 0x9e, 0x1c, 0xce,
	0x46, 0x23, 0xba, 0x94, 0x2a, 0x1e, 0x0b, 0xe3, 0xb4, 0xb5, 0x01, 0x35, 0xa1, 0xfb, 0x9c, 0xc5,
	0xa4, 0xac, 0x06, 0x6e, 0x5f, 0xc9, 0x59, 0x6a, 0x1f, 0x34, 0xaa, 0xe1, 0x5f, 0xc3, 0xce, 0x5d,
	0x24, 0xec, 0x3e, 0x6c, 0x0c, 0x79, 0x22, 0xd3, 0x31, 0x45, 0xbf, 0xe2, 0x0e, 0xba, 0x0b, 0xed,
	0x09, 0x4f, 0x32, 0x8f, 0xae, 0xfa, 0x6b, 0x17, 0xd3, 0xe6, 0xc2, 0x3e, 0x2c, 0x51, 0x4d, 0x82,
	0x4e, 0x26, 0xfc, 0x05, 0x9d, 0xef, 0x7b, 0x96, 0x1d, 0xa5, 0x46, 0x98, 0xf9, 0xf9, 0x10, 0xaf,
	0xe0, 0xd3, 0xfc, 0xd3, 0xd7, 0x54, 0x4b, 0x0d, 0xc2, 0x57, 0x94, 0x4a, 0xed, 0x86, 0x0f, 0xd4,
	0x14, 0xfb, 0xdc, 0xf9, 0x2a, 0xf8, 0x6d, 0x3e, 0xb4, 0x7b, 0x85, 0x1d, 0xfe, 0x91, 0x27, 0xdc,
	0xf0, 0x3d, 0x5d, 0x4b, 0xdf, 0x33, 0xca, 0x3e, 0xe7, 0xc3, 0x60, 0x1f, 0x5a, 0x37, 0x36, 0xdb,
	0x50, 0x3a, 0xca, 0x4b, 0xde, 0x39, 0x7d, 0xca, 0x05, 0x34, 0x77, 0x6b, 0xca, 0xb2, 0x8f, 0x19,
	0x4f, 0x2f, 0x6d, 0x0a, 0xc2, 0x6d, 0xfd, 0x2c, 0x1f, 0xee, 0xe8, 0xd6, 0xfc, 0x82, 0x66, 0xf6,
	0xe5, 0xdd, 0x95, 0xa5, 0xf2, 0xae, 0x7b, 0x6a, 0x10, 0xe3, 0xf4, 0x94, 0x86, 0xa4, 0xa7, 0x06,
	0xff, 0x55, 0x3c, 0x35, 0x78, 0x28, 0xfc, 0x0b, 0xd8, 0x45, 0x57, 0x55, 0x52, 0x6b, 0x7b, 0x20,
	0x2c, 0xa1, 0x23, 0x71, 0xf5, 0x00, 0xbc, 0x40, 0xf8, 0xb3, 0x18, 0x33, 0x91, 0xda, 0x47, 0x96,
	0xfc, 0x81, 0xcf, 0xad, 0x8d, 0xba, 0x1f, 0x4b, 0x65, 0x82, 0x87, 0xb0, 0x36, 0x2a, 0x9e, 0xef,
	0x31, 0xe0, 0x22, 0xac, 0xb8, 0xd6, 0xe1, 0x07, 0x8c, 0x95, 0xf9, 0xd7, 0x42, 0x05, 0xaf, 0xc8,
	0xb8, 0xee, 0x8b, 0xaa, 0x22, 0xf9, 0x63, 0x61, 0x23, 0xcd, 0x22, 0xba, 0xcd, 0x38, 0x97, 0xce,
	0x8b, 0x73, 0xbf, 0x29, 0xa6, 0xa6, 0x77, 0xc2, 0x3d, 0x68, 0x60, 0xbf, 0x8b, 0xe2, 0xad, 0x70,
	0xa3, 0xeb, 0xa5, 0xa7, 0x86, 0x4f, 0x83, 0xaf, 0xa1, 0x9d, 0xb9, 0x3d, 0x52, 0xab, 0xd5, 0xbb,
	0x5a, 0x85, 0x27, 0x10, 0x78, 0x8d, 0x90, 0x5d, 0xb8, 0xc8, 0x53, 0x4b, 0xa4, 0x8a, 0xcf, 0x87,
	0xee, 0xf8, 0xda, 0xb6, 0xd7, 0x19, 0x61, 0xa8, 0x9c, 0x29, 0x13, 0xe9, 0x80, 0xab, 0x6b, 0xae,
	0xf2, 0x4a, 0x64, 0xf8, 0x35, 0x71, 0xe5, 0xd2, 0x48, 0xc8, 0x95, 0x97, 0x15, 0x7b, 0xf8, 0x57,
	0xf0, 0x28, 0x92, 0xd3, 0xee, 0x64, 0x96, 0xc6, 0x8a, 0xc7, 0x11, 0x4f, 0x4d, 0x77, 0xcc, 0xa6,
	0xbc, 0x3b, 0xbd, 0xe9, 0x66, 0xc3, 0xc3, 0x96, 0xff, 0xf3, 0xcf, 0xf9, 0xf0, 0xf7, 0xdf, 0x8c,
	0x85, 0x99, 0xcc, 0x86, 0xdd, 0x48, 0x4e, 0xdf, 0xfc, 0x28, 0x66, 0x13, 0x39, 0x8b, 0xf9, 0x9b,
	0xb1, 0xfc, 0xee, 0x86, 0x0f, 0xdf, 0xd0, 0x9f, 0x81, 0xde, 0x5c, 0xbf, 0x7d, 0x33, 0x95, 0x31,
	0x4f, 0xf4, 0xff, 0x07, 0x00, 0x00, 0xff, 0xff, 0x65, 0x88, 0x50, 0x25, 0x36, 0x24, 0x00, 0x00,
}
