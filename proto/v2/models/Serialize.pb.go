// Code generated by protoc-gen-go. DO NOT EDIT.
// source: Serialize.proto

package models

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoregistry "google.golang.org/protobuf/reflect/protoregistry"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	sync "sync"
)

const (
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 0)
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(0 - protoimpl.MinVersion)
)

// 公用
type SerData struct {
	PushRecord           []*StrInt               `protobuf:"bytes,1,rep,name=pushRecord" json:"pushRecord,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerData) Reset() {
	*x = SerData{}
}

func (x *SerData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerData) ProtoMessage() {}

func (x *SerData) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[0].MessageOf(x)
}

func (m *SerData) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[0].Methods()
}

// Deprecated: Use SerData.ProtoReflect.Type instead.
func (*SerData) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{0}
}

func (x *SerData) GetPushRecord() []*StrInt {
	if x != nil {
		return x.PushRecord
	}
	return nil
}

// 将领,特工
type SerHero struct {
	Hero                 []*Hero                 `protobuf:"bytes,1,rep,name=hero" json:"hero,omitempty"`
	Cia                  *DbCia                  `protobuf:"bytes,2,opt,name=cia" json:"cia,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerHero) Reset() {
	*x = SerHero{}
}

func (x *SerHero) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerHero) ProtoMessage() {}

func (x *SerHero) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[1].MessageOf(x)
}

func (m *SerHero) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[1].Methods()
}

// Deprecated: Use SerHero.ProtoReflect.Type instead.
func (*SerHero) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{1}
}

func (x *SerHero) GetHero() []*Hero {
	if x != nil {
		return x.Hero
	}
	return nil
}

func (x *SerHero) GetCia() *DbCia {
	if x != nil {
		return x.Cia
	}
	return nil
}

// 装备
type SerEquip struct {
	Equip                []*Equip                `protobuf:"bytes,1,rep,name=equip" json:"equip,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerEquip) Reset() {
	*x = SerEquip{}
}

func (x *SerEquip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerEquip) ProtoMessage() {}

func (x *SerEquip) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[2].MessageOf(x)
}

func (m *SerEquip) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[2].Methods()
}

// Deprecated: Use SerEquip.ProtoReflect.Type instead.
func (*SerEquip) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{2}
}

func (x *SerEquip) GetEquip() []*Equip {
	if x != nil {
		return x.Equip
	}
	return nil
}

// 勋章
type SerMedal struct {
	Medal                []*Medal                `protobuf:"bytes,1,rep,name=medal" json:"medal,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerMedal) Reset() {
	*x = SerMedal{}
}

func (x *SerMedal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerMedal) ProtoMessage() {}

func (x *SerMedal) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[3].MessageOf(x)
}

func (m *SerMedal) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[3].Methods()
}

// Deprecated: Use SerMedal.ProtoReflect.Type instead.
func (*SerMedal) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{3}
}

func (x *SerMedal) GetMedal() []*Medal {
	if x != nil {
		return x.Medal
	}
	return nil
}

// 道具
type SerProp struct {
	Prop                 []*Prop                 `protobuf:"bytes,1,rep,name=prop" json:"prop,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerProp) Reset() {
	*x = SerProp{}
}

func (x *SerProp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerProp) ProtoMessage() {}

func (x *SerProp) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[4].MessageOf(x)
}

func (m *SerProp) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[4].Methods()
}

// Deprecated: Use SerProp.ProtoReflect.Type instead.
func (*SerProp) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{4}
}

func (x *SerProp) GetProp() []*Prop {
	if x != nil {
		return x.Prop
	}
	return nil
}

// 建造队列
type SerBuildQue struct {
	BuildQue             []*BuildQue             `protobuf:"bytes,1,rep,name=buildQue" json:"buildQue,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerBuildQue) Reset() {
	*x = SerBuildQue{}
}

func (x *SerBuildQue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerBuildQue) ProtoMessage() {}

func (x *SerBuildQue) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[5].MessageOf(x)
}

func (m *SerBuildQue) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[5].Methods()
}

// Deprecated: Use SerBuildQue.ProtoReflect.Type instead.
func (*SerBuildQue) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{5}
}

func (x *SerBuildQue) GetBuildQue() []*BuildQue {
	if x != nil {
		return x.BuildQue
	}
	return nil
}

// 打造队列
type SerEquipQue struct {
	Que                  []*EquipQue             `protobuf:"bytes,1,rep,name=que" json:"que,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerEquipQue) Reset() {
	*x = SerEquipQue{}
}

func (x *SerEquipQue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerEquipQue) ProtoMessage() {}

func (x *SerEquipQue) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[6].MessageOf(x)
}

func (m *SerEquipQue) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[6].Methods()
}

// Deprecated: Use SerEquipQue.ProtoReflect.Type instead.
func (*SerEquipQue) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{6}
}

func (x *SerEquipQue) GetQue() []*EquipQue {
	if x != nil {
		return x.Que
	}
	return nil
}

// 任务相关
type SerTask struct {
	MajorTask            []*Task                 `protobuf:"bytes,1,rep,name=majorTask" json:"majorTask,omitempty"`
	DayiyTask            []*Task                 `protobuf:"bytes,2,rep,name=dayiyTask" json:"dayiyTask,omitempty"`
	LiveTask             []*Task                 `protobuf:"bytes,3,rep,name=liveTask" json:"liveTask,omitempty"`
	WorldTask            []*Task                 `protobuf:"bytes,4,rep,name=worldTask" json:"worldTask,omitempty"`
	Section              []*Sectiontask          `protobuf:"bytes,5,rep,name=section" json:"section,omitempty"`
	DailyIsGet           []int32                 `protobuf:"varint,6,rep,name=dailyIsGet" json:"dailyIsGet,omitempty"`
	DailyTaskLivenss     *int32                  `protobuf:"varint,7,opt,name=dailyTaskLivenss" json:"dailyTaskLivenss,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerTask) Reset() {
	*x = SerTask{}
}

func (x *SerTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerTask) ProtoMessage() {}

func (x *SerTask) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[7].MessageOf(x)
}

func (m *SerTask) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[7].Methods()
}

// Deprecated: Use SerTask.ProtoReflect.Type instead.
func (*SerTask) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{7}
}

func (x *SerTask) GetMajorTask() []*Task {
	if x != nil {
		return x.MajorTask
	}
	return nil
}

func (x *SerTask) GetDayiyTask() []*Task {
	if x != nil {
		return x.DayiyTask
	}
	return nil
}

func (x *SerTask) GetLiveTask() []*Task {
	if x != nil {
		return x.LiveTask
	}
	return nil
}

func (x *SerTask) GetWorldTask() []*Task {
	if x != nil {
		return x.WorldTask
	}
	return nil
}

func (x *SerTask) GetSection() []*Sectiontask {
	if x != nil {
		return x.Section
	}
	return nil
}

func (x *SerTask) GetDailyIsGet() []int32 {
	if x != nil {
		return x.DailyIsGet
	}
	return nil
}

func (x *SerTask) GetDailyTaskLivenss() int32 {
	if x != nil && x.DailyTaskLivenss != nil {
		return *x.DailyTaskLivenss
	}
	return 0
}

// 关卡
type SerCombat struct {
	Combat               []*Combat               `protobuf:"bytes,1,rep,name=combat" json:"combat,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerCombat) Reset() {
	*x = SerCombat{}
}

func (x *SerCombat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerCombat) ProtoMessage() {}

func (x *SerCombat) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[8].MessageOf(x)
}

func (m *SerCombat) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[8].Methods()
}

// Deprecated: Use SerCombat.ProtoReflect.Type instead.
func (*SerCombat) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{8}
}

func (x *SerCombat) GetCombat() []*Combat {
	if x != nil {
		return x.Combat
	}
	return nil
}

// 副本
type SerCombatFb struct {
	CombatFb             []*CombatFB             `protobuf:"bytes,1,rep,name=combatFb" json:"combatFb,omitempty"`
	StoneCombat          []*StoneCombat          `protobuf:"bytes,2,rep,name=stoneCombat" json:"stoneCombat,omitempty"`
	PitchCombat          []*PitchCombat          `protobuf:"bytes,3,rep,name=pitchCombat" json:"pitchCombat,omitempty"`
	MultCombat           *MultCombat             `protobuf:"bytes,4,opt,name=multCombat" json:"multCombat,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerCombatFb) Reset() {
	*x = SerCombatFb{}
}

func (x *SerCombatFb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerCombatFb) ProtoMessage() {}

func (x *SerCombatFb) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[9].MessageOf(x)
}

func (m *SerCombatFb) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[9].Methods()
}

// Deprecated: Use SerCombatFb.ProtoReflect.Type instead.
func (*SerCombatFb) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{9}
}

func (x *SerCombatFb) GetCombatFb() []*CombatFB {
	if x != nil {
		return x.CombatFb
	}
	return nil
}

func (x *SerCombatFb) GetStoneCombat() []*StoneCombat {
	if x != nil {
		return x.StoneCombat
	}
	return nil
}

func (x *SerCombatFb) GetPitchCombat() []*PitchCombat {
	if x != nil {
		return x.PitchCombat
	}
	return nil
}

func (x *SerCombatFb) GetMultCombat() *MultCombat {
	if x != nil {
		return x.MultCombat
	}
	return nil
}

// 资源
type SerRoleData struct {
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerRoleData) Reset() {
	*x = SerRoleData{}
}

func (x *SerRoleData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerRoleData) ProtoMessage() {}

func (x *SerRoleData) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[10].MessageOf(x)
}

func (m *SerRoleData) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[10].Methods()
}

// Deprecated: Use SerRoleData.ProtoReflect.Type instead.
func (*SerRoleData) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{10}
}

// 邮件
type SerMail struct {
	Mail                 []*Mail                 `protobuf:"bytes,1,rep,name=mail" json:"mail,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerMail) Reset() {
	*x = SerMail{}
}

func (x *SerMail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerMail) ProtoMessage() {}

func (x *SerMail) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[11].MessageOf(x)
}

func (m *SerMail) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[11].Methods()
}

// Deprecated: Use SerMail.ProtoReflect.Type instead.
func (*SerMail) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{11}
}

func (x *SerMail) GetMail() []*Mail {
	if x != nil {
		return x.Mail
	}
	return nil
}

// 邮件
type SerReport struct {
	Report               []*Report               `protobuf:"bytes,1,rep,name=report" json:"report,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerReport) Reset() {
	*x = SerReport{}
}

func (x *SerReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerReport) ProtoMessage() {}

func (x *SerReport) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[12].MessageOf(x)
}

func (m *SerReport) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[12].Methods()
}

// Deprecated: Use SerReport.ProtoReflect.Type instead.
func (*SerReport) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{12}
}

func (x *SerReport) GetReport() []*Report {
	if x != nil {
		return x.Report
	}
	return nil
}

// 世界分区
type SerArea struct {
	Area                 []*Area                 `protobuf:"bytes,1,rep,name=area" json:"area,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerArea) Reset() {
	*x = SerArea{}
}

func (x *SerArea) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerArea) ProtoMessage() {}

func (x *SerArea) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[13].MessageOf(x)
}

func (m *SerArea) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[13].Methods()
}

// Deprecated: Use SerArea.ProtoReflect.Type instead.
func (*SerArea) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{13}
}

func (x *SerArea) GetArea() []*Area {
	if x != nil {
		return x.Area
	}
	return nil
}

// 城池
type SerCity struct {
	City                 []*City                 `protobuf:"bytes,1,rep,name=city" json:"city,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerCity) Reset() {
	*x = SerCity{}
}

func (x *SerCity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerCity) ProtoMessage() {}

func (x *SerCity) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[14].MessageOf(x)
}

func (m *SerCity) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[14].Methods()
}

// Deprecated: Use SerCity.ProtoReflect.Type instead.
func (*SerCity) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{14}
}

func (x *SerCity) GetCity() []*City {
	if x != nil {
		return x.City
	}
	return nil
}

// 流寇
type SerBandit struct {
	Bandit               []*TwoInt               `protobuf:"bytes,1,rep,name=bandit" json:"bandit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerBandit) Reset() {
	*x = SerBandit{}
}

func (x *SerBandit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerBandit) ProtoMessage() {}

func (x *SerBandit) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[15].MessageOf(x)
}

func (m *SerBandit) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[15].Methods()
}

// Deprecated: Use SerBandit.ProtoReflect.Type instead.
func (*SerBandit) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{15}
}

func (x *SerBandit) GetBandit() []*TwoInt {
	if x != nil {
		return x.Bandit
	}
	return nil
}

// 世界矿点
type SerMine struct {
	Mine                 []*TwoInt               `protobuf:"bytes,1,rep,name=mine" json:"mine,omitempty"`
	Resource             []*TwoInt               `protobuf:"bytes,2,rep,name=resource" json:"resource,omitempty"`
	SuperMine            []*SuperMine            `protobuf:"bytes,3,rep,name=superMine" json:"superMine,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerMine) Reset() {
	*x = SerMine{}
}

func (x *SerMine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerMine) ProtoMessage() {}

func (x *SerMine) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[16].MessageOf(x)
}

func (m *SerMine) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[16].Methods()
}

// Deprecated: Use SerMine.ProtoReflect.Type instead.
func (*SerMine) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{16}
}

func (x *SerMine) GetMine() []*TwoInt {
	if x != nil {
		return x.Mine
	}
	return nil
}

func (x *SerMine) GetResource() []*TwoInt {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *SerMine) GetSuperMine() []*SuperMine {
	if x != nil {
		return x.SuperMine
	}
	return nil
}

// 城战等战斗信息
type SerBattle struct {
	Battle               []*BattlePO             `protobuf:"bytes,1,rep,name=battle" json:"battle,omitempty"`
	SpecialBattle        []*BattlePO             `protobuf:"bytes,2,rep,name=specialBattle" json:"specialBattle,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerBattle) Reset() {
	*x = SerBattle{}
}

func (x *SerBattle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerBattle) ProtoMessage() {}

func (x *SerBattle) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[17].MessageOf(x)
}

func (m *SerBattle) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[17].Methods()
}

// Deprecated: Use SerBattle.ProtoReflect.Type instead.
func (*SerBattle) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{17}
}

func (x *SerBattle) GetBattle() []*BattlePO {
	if x != nil {
		return x.Battle
	}
	return nil
}

func (x *SerBattle) GetSpecialBattle() []*BattlePO {
	if x != nil {
		return x.SpecialBattle
	}
	return nil
}

// 世界任务
type SerWorldTask struct {
	WorldTaskId          *int32                  `protobuf:"varint,1,opt,name=worldTaskId" json:"worldTaskId,omitempty"`
	WorldTask            []*WorldTask            `protobuf:"bytes,2,rep,name=worldTask" json:"worldTask,omitempty"`
	Force                []*Force                `protobuf:"bytes,3,rep,name=force" json:"force,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerWorldTask) Reset() {
	*x = SerWorldTask{}
}

func (x *SerWorldTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerWorldTask) ProtoMessage() {}

func (x *SerWorldTask) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[18].MessageOf(x)
}

func (m *SerWorldTask) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[18].Methods()
}

// Deprecated: Use SerWorldTask.ProtoReflect.Type instead.
func (*SerWorldTask) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{18}
}

func (x *SerWorldTask) GetWorldTaskId() int32 {
	if x != nil && x.WorldTaskId != nil {
		return *x.WorldTaskId
	}
	return 0
}

func (x *SerWorldTask) GetWorldTask() []*WorldTask {
	if x != nil {
		return x.WorldTask
	}
	return nil
}

func (x *SerWorldTask) GetForce() []*Force {
	if x != nil {
		return x.Force
	}
	return nil
}

// 世界进度
type SerWroldSchedule struct {
	CurrentScheduleId    *int32                  `protobuf:"varint,1,opt,name=currentScheduleId" json:"currentScheduleId,omitempty"`
	WorldSchedule        []*WorldSchedule        `protobuf:"bytes,2,rep,name=worldSchedule" json:"worldSchedule,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerWroldSchedule) Reset() {
	*x = SerWroldSchedule{}
}

func (x *SerWroldSchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerWroldSchedule) ProtoMessage() {}

func (x *SerWroldSchedule) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[19].MessageOf(x)
}

func (m *SerWroldSchedule) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[19].Methods()
}

// Deprecated: Use SerWroldSchedule.ProtoReflect.Type instead.
func (*SerWroldSchedule) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{19}
}

func (x *SerWroldSchedule) GetCurrentScheduleId() int32 {
	if x != nil && x.CurrentScheduleId != nil {
		return *x.CurrentScheduleId
	}
	return 0
}

func (x *SerWroldSchedule) GetWorldSchedule() []*WorldSchedule {
	if x != nil {
		return x.WorldSchedule
	}
	return nil
}

// 资源
type SerMill struct {
	Mill                 []*Mill                 `protobuf:"bytes,1,rep,name=mill" json:"mill,omitempty"`
	BuildExt             []*BuildingBase         `protobuf:"bytes,2,rep,name=buildExt" json:"buildExt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerMill) Reset() {
	*x = SerMill{}
}

func (x *SerMill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerMill) ProtoMessage() {}

func (x *SerMill) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[20].MessageOf(x)
}

func (m *SerMill) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[20].Methods()
}

// Deprecated: Use SerMill.ProtoReflect.Type instead.
func (*SerMill) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{20}
}

func (x *SerMill) GetMill() []*Mill {
	if x != nil {
		return x.Mill
	}
	return nil
}

func (x *SerMill) GetBuildExt() []*BuildingBase {
	if x != nil {
		return x.BuildExt
	}
	return nil
}

// 兵营募兵
type SerFactory struct {
	Factory              []*Factory              `protobuf:"bytes,1,rep,name=factory" json:"factory,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerFactory) Reset() {
	*x = SerFactory{}
}

func (x *SerFactory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerFactory) ProtoMessage() {}

func (x *SerFactory) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[21].MessageOf(x)
}

func (m *SerFactory) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[21].Methods()
}

// Deprecated: Use SerFactory.ProtoReflect.Type instead.
func (*SerFactory) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{21}
}

func (x *SerFactory) GetFactory() []*Factory {
	if x != nil {
		return x.Factory
	}
	return nil
}

// 官员效果加成
type SerGains struct {
	Gains                []*Gains                `protobuf:"bytes,1,rep,name=gains" json:"gains,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerGains) Reset() {
	*x = SerGains{}
}

func (x *SerGains) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerGains) ProtoMessage() {}

func (x *SerGains) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[22].MessageOf(x)
}

func (m *SerGains) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[22].Methods()
}

// Deprecated: Use SerGains.ProtoReflect.Type instead.
func (*SerGains) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{22}
}

func (x *SerGains) GetGains() []*Gains {
	if x != nil {
		return x.Gains
	}
	return nil
}

// 行军队列
type SerArmy struct {
	Army                 []*Army                 `protobuf:"bytes,1,rep,name=army" json:"army,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerArmy) Reset() {
	*x = SerArmy{}
}

func (x *SerArmy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerArmy) ProtoMessage() {}

func (x *SerArmy) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[23].MessageOf(x)
}

func (m *SerArmy) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[23].Methods()
}

// Deprecated: Use SerArmy.ProtoReflect.Type instead.
func (*SerArmy) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{23}
}

func (x *SerArmy) GetArmy() []*Army {
	if x != nil {
		return x.Army
	}
	return nil
}

// 科技
type SerTech struct {
	Tech                 []*Tech                 `protobuf:"bytes,1,rep,name=tech" json:"tech,omitempty"`
	TechQue              *TechQue                `protobuf:"bytes,2,opt,name=techQue" json:"techQue,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerTech) Reset() {
	*x = SerTech{}
}

func (x *SerTech) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerTech) ProtoMessage() {}

func (x *SerTech) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[24].MessageOf(x)
}

func (m *SerTech) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[24].Methods()
}

// Deprecated: Use SerTech.ProtoReflect.Type instead.
func (*SerTech) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{24}
}

func (x *SerTech) GetTech() []*Tech {
	if x != nil {
		return x.Tech
	}
	return nil
}

func (x *SerTech) GetTechQue() *TechQue {
	if x != nil {
		return x.TechQue
	}
	return nil
}

// 化工厂
type SerChemical struct {
	ExpandLv             *int32                  `protobuf:"varint,1,opt,name=expandLv" json:"expandLv,omitempty"`
	Que                  []*ChemicalQue          `protobuf:"bytes,2,rep,name=que" json:"que,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerChemical) Reset() {
	*x = SerChemical{}
}

func (x *SerChemical) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerChemical) ProtoMessage() {}

func (x *SerChemical) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[25].MessageOf(x)
}

func (m *SerChemical) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[25].Methods()
}

// Deprecated: Use SerChemical.ProtoReflect.Type instead.
func (*SerChemical) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{25}
}

func (x *SerChemical) GetExpandLv() int32 {
	if x != nil && x.ExpandLv != nil {
		return *x.ExpandLv
	}
	return 0
}

func (x *SerChemical) GetQue() []*ChemicalQue {
	if x != nil {
		return x.Que
	}
	return nil
}

// 聚宝盆
type SerTreasure struct {
	Status               *int32                  `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	EndTime              *int32                  `protobuf:"varint,2,opt,name=endTime" json:"endTime,omitempty"`
	ResTime              *int32                  `protobuf:"varint,3,opt,name=resTime" json:"resTime,omitempty"`
	Red                  *bool                   `protobuf:"varint,4,opt,name=red" json:"red,omitempty"`
	UpdTime              *int32                  `protobuf:"varint,5,opt,name=updTime" json:"updTime,omitempty"`
	IdStatus             []*TwoInt               `protobuf:"bytes,6,rep,name=idStatus" json:"idStatus,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerTreasure) Reset() {
	*x = SerTreasure{}
}

func (x *SerTreasure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerTreasure) ProtoMessage() {}

func (x *SerTreasure) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[26].MessageOf(x)
}

func (m *SerTreasure) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[26].Methods()
}

// Deprecated: Use SerTreasure.ProtoReflect.Type instead.
func (*SerTreasure) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{26}
}

func (x *SerTreasure) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *SerTreasure) GetEndTime() int32 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

func (x *SerTreasure) GetResTime() int32 {
	if x != nil && x.ResTime != nil {
		return *x.ResTime
	}
	return 0
}

func (x *SerTreasure) GetRed() bool {
	if x != nil && x.Red != nil {
		return *x.Red
	}
	return false
}

func (x *SerTreasure) GetUpdTime() int32 {
	if x != nil && x.UpdTime != nil {
		return *x.UpdTime
	}
	return 0
}

func (x *SerTreasure) GetIdStatus() []*TwoInt {
	if x != nil {
		return x.IdStatus
	}
	return nil
}

// 完成记录 招募
type SerTypeInfo struct {
	History              []*History              `protobuf:"bytes,1,rep,name=history" json:"history,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerTypeInfo) Reset() {
	*x = SerTypeInfo{}
}

func (x *SerTypeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerTypeInfo) ProtoMessage() {}

func (x *SerTypeInfo) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[27].MessageOf(x)
}

func (m *SerTypeInfo) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[27].Methods()
}

// Deprecated: Use SerTypeInfo.ProtoReflect.Type instead.
func (*SerTypeInfo) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{27}
}

func (x *SerTypeInfo) GetHistory() []*History {
	if x != nil {
		return x.History
	}
	return nil
}

// 商店
type SerShop struct {
	IdCnt                []*TwoInt               `protobuf:"bytes,1,rep,name=idCnt" json:"idCnt,omitempty"`
	VipId                []int32                 `protobuf:"varint,2,rep,name=vipId" json:"vipId,omitempty"`
	RefreshTime          *int32                  `protobuf:"varint,3,opt,name=refreshTime" json:"refreshTime,omitempty"`
	FreeCnt              []*TwoInt               `protobuf:"bytes,4,rep,name=freeCnt" json:"freeCnt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerShop) Reset() {
	*x = SerShop{}
}

func (x *SerShop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerShop) ProtoMessage() {}

func (x *SerShop) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[28].MessageOf(x)
}

func (m *SerShop) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[28].Methods()
}

// Deprecated: Use SerShop.ProtoReflect.Type instead.
func (*SerShop) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{28}
}

func (x *SerShop) GetIdCnt() []*TwoInt {
	if x != nil {
		return x.IdCnt
	}
	return nil
}

func (x *SerShop) GetVipId() []int32 {
	if x != nil {
		return x.VipId
	}
	return nil
}

func (x *SerShop) GetRefreshTime() int32 {
	if x != nil && x.RefreshTime != nil {
		return *x.RefreshTime
	}
	return 0
}

func (x *SerShop) GetFreeCnt() []*TwoInt {
	if x != nil {
		return x.FreeCnt
	}
	return nil
}

// 军团荣誉排行榜
type SerPartyHonorRank struct {
	Rank                 []*PartyHonorRank       `protobuf:"bytes,1,rep,name=rank" json:"rank,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerPartyHonorRank) Reset() {
	*x = SerPartyHonorRank{}
}

func (x *SerPartyHonorRank) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerPartyHonorRank) ProtoMessage() {}

func (x *SerPartyHonorRank) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[29].MessageOf(x)
}

func (m *SerPartyHonorRank) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[29].Methods()
}

// Deprecated: Use SerPartyHonorRank.ProtoReflect.Type instead.
func (*SerPartyHonorRank) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{29}
}

func (x *SerPartyHonorRank) GetRank() []*PartyHonorRank {
	if x != nil {
		return x.Rank
	}
	return nil
}

// 军团日志
type SerPartyLog struct {
	Log                  []*PartyLog             `protobuf:"bytes,1,rep,name=log" json:"log,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerPartyLog) Reset() {
	*x = SerPartyLog{}
}

func (x *SerPartyLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerPartyLog) ProtoMessage() {}

func (x *SerPartyLog) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[30].MessageOf(x)
}

func (m *SerPartyLog) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[30].Methods()
}

// Deprecated: Use SerPartyLog.ProtoReflect.Type instead.
func (*SerPartyLog) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{30}
}

func (x *SerPartyLog) GetLog() []*PartyLog {
	if x != nil {
		return x.Log
	}
	return nil
}

// 军团官员
type SerPartyJob struct {
	Job                  []*PartyJob             `protobuf:"bytes,1,rep,name=job" json:"job,omitempty"`
	Elect                []*PartyElection        `protobuf:"bytes,2,rep,name=elect" json:"elect,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerPartyJob) Reset() {
	*x = SerPartyJob{}
}

func (x *SerPartyJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerPartyJob) ProtoMessage() {}

func (x *SerPartyJob) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[31].MessageOf(x)
}

func (m *SerPartyJob) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[31].Methods()
}

// Deprecated: Use SerPartyJob.ProtoReflect.Type instead.
func (*SerPartyJob) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{31}
}

func (x *SerPartyJob) GetJob() []*PartyJob {
	if x != nil {
		return x.Job
	}
	return nil
}

func (x *SerPartyJob) GetElect() []*PartyElection {
	if x != nil {
		return x.Elect
	}
	return nil
}

// 军团的附加信息
type SerPartyExt struct {
	CabinetLeadLv              *int32                  `protobuf:"varint,1,opt,name=cabinetLeadLv" json:"cabinetLeadLv,omitempty"`
	CabinetLeadExp             *int64                  `protobuf:"varint,2,opt,name=cabinetLeadExp" json:"cabinetLeadExp,omitempty"`
	FirstOpenJobTime           *int32                  `protobuf:"varint,3,opt,name=firstOpenJobTime" json:"firstOpenJobTime,omitempty"`
	SupplyRecord               *SerSupplyRecord        `protobuf:"bytes,4,opt,name=supplyRecord" json:"supplyRecord,omitempty"`
	SuperSupply                *PartySuperSupply       `protobuf:"bytes,5,opt,name=superSupply" json:"superSupply,omitempty"`
	PartySupply                []*PartySupply          `protobuf:"bytes,6,rep,name=partySupply" json:"partySupply,omitempty"`
	WorldWarRankingIntegral    *int32                  `protobuf:"varint,7,opt,name=worldWarRankingIntegral" json:"worldWarRankingIntegral,omitempty"`
	WorldWarAttackCityIntegral *int32                  `protobuf:"varint,8,opt,name=worldWarAttackCityIntegral" json:"worldWarAttackCityIntegral,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}                `json:"-"`
	XXX_unrecognized           protoimpl.UnknownFields `json:"-"`
	XXX_sizecache              protoimpl.SizeCache     `json:"-"`
}

func (x *SerPartyExt) Reset() {
	*x = SerPartyExt{}
}

func (x *SerPartyExt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerPartyExt) ProtoMessage() {}

func (x *SerPartyExt) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[32].MessageOf(x)
}

func (m *SerPartyExt) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[32].Methods()
}

// Deprecated: Use SerPartyExt.ProtoReflect.Type instead.
func (*SerPartyExt) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{32}
}

func (x *SerPartyExt) GetCabinetLeadLv() int32 {
	if x != nil && x.CabinetLeadLv != nil {
		return *x.CabinetLeadLv
	}
	return 0
}

func (x *SerPartyExt) GetCabinetLeadExp() int64 {
	if x != nil && x.CabinetLeadExp != nil {
		return *x.CabinetLeadExp
	}
	return 0
}

func (x *SerPartyExt) GetFirstOpenJobTime() int32 {
	if x != nil && x.FirstOpenJobTime != nil {
		return *x.FirstOpenJobTime
	}
	return 0
}

func (x *SerPartyExt) GetSupplyRecord() *SerSupplyRecord {
	if x != nil {
		return x.SupplyRecord
	}
	return nil
}

func (x *SerPartyExt) GetSuperSupply() *PartySuperSupply {
	if x != nil {
		return x.SuperSupply
	}
	return nil
}

func (x *SerPartyExt) GetPartySupply() []*PartySupply {
	if x != nil {
		return x.PartySupply
	}
	return nil
}

func (x *SerPartyExt) GetWorldWarRankingIntegral() int32 {
	if x != nil && x.WorldWarRankingIntegral != nil {
		return *x.WorldWarRankingIntegral
	}
	return 0
}

func (x *SerPartyExt) GetWorldWarAttackCityIntegral() int32 {
	if x != nil && x.WorldWarAttackCityIntegral != nil {
		return *x.WorldWarAttackCityIntegral
	}
	return 0
}

// 个人资源点
type SerAcquisition struct {
	CollectDate          *int32                  `protobuf:"varint,1,opt,name=collectDate" json:"collectDate,omitempty"`
	Reward               []*TwoInt               `protobuf:"bytes,2,rep,name=reward" json:"reward,omitempty"`
	Collect              []*TwoInt               `protobuf:"bytes,3,rep,name=collect" json:"collect,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerAcquisition) Reset() {
	*x = SerAcquisition{}
}

func (x *SerAcquisition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerAcquisition) ProtoMessage() {}

func (x *SerAcquisition) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[33].MessageOf(x)
}

func (m *SerAcquisition) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[33].Methods()
}

// Deprecated: Use SerAcquisition.ProtoReflect.Type instead.
func (*SerAcquisition) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{33}
}

func (x *SerAcquisition) GetCollectDate() int32 {
	if x != nil && x.CollectDate != nil {
		return *x.CollectDate
	}
	return 0
}

func (x *SerAcquisition) GetReward() []*TwoInt {
	if x != nil {
		return x.Reward
	}
	return nil
}

func (x *SerAcquisition) GetCollect() []*TwoInt {
	if x != nil {
		return x.Collect
	}
	return nil
}

// 个人成就
type SerTrophy struct {
	Trophy               []*TwoInt               `protobuf:"bytes,1,rep,name=trophy" json:"trophy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerTrophy) Reset() {
	*x = SerTrophy{}
}

func (x *SerTrophy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerTrophy) ProtoMessage() {}

func (x *SerTrophy) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[34].MessageOf(x)
}

func (m *SerTrophy) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[34].Methods()
}

// Deprecated: Use SerTrophy.ProtoReflect.Type instead.
func (*SerTrophy) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{34}
}

func (x *SerTrophy) GetTrophy() []*TwoInt {
	if x != nil {
		return x.Trophy
	}
	return nil
}

// 全服成就
type SerGlobalTrophy struct {
	Glod                 *int64                  `protobuf:"varint,1,opt,name=glod" json:"glod,omitempty"`
	SolarTermsStartTime  *int32                  `protobuf:"varint,2,opt,name=solarTermsStartTime" json:"solarTermsStartTime,omitempty"`
	RankEquips           []*RankEquip            `protobuf:"bytes,3,rep,name=rankEquips" json:"rankEquips,omitempty"`
	PassMultCombat       []int32                 `protobuf:"varint,4,rep,name=passMultCombat" json:"passMultCombat,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerGlobalTrophy) Reset() {
	*x = SerGlobalTrophy{}
}

func (x *SerGlobalTrophy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerGlobalTrophy) ProtoMessage() {}

func (x *SerGlobalTrophy) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[35].MessageOf(x)
}

func (m *SerGlobalTrophy) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[35].Methods()
}

// Deprecated: Use SerGlobalTrophy.ProtoReflect.Type instead.
func (*SerGlobalTrophy) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{35}
}

func (x *SerGlobalTrophy) GetGlod() int64 {
	if x != nil && x.Glod != nil {
		return *x.Glod
	}
	return 0
}

func (x *SerGlobalTrophy) GetSolarTermsStartTime() int32 {
	if x != nil && x.SolarTermsStartTime != nil {
		return *x.SolarTermsStartTime
	}
	return 0
}

func (x *SerGlobalTrophy) GetRankEquips() []*RankEquip {
	if x != nil {
		return x.RankEquips
	}
	return nil
}

func (x *SerGlobalTrophy) GetPassMultCombat() []int32 {
	if x != nil {
		return x.PassMultCombat
	}
	return nil
}

// 奖励(类型,奖励) 重建家园
type SerTypeAwards struct {
	Reward               []*TypeAwards           `protobuf:"bytes,1,rep,name=reward" json:"reward,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerTypeAwards) Reset() {
	*x = SerTypeAwards{}
}

func (x *SerTypeAwards) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerTypeAwards) ProtoMessage() {}

func (x *SerTypeAwards) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[36].MessageOf(x)
}

func (m *SerTypeAwards) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[36].Methods()
}

// Deprecated: Use SerTypeAwards.ProtoReflect.Type instead.
func (*SerTypeAwards) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{36}
}

func (x *SerTypeAwards) GetReward() []*TypeAwards {
	if x != nil {
		return x.Reward
	}
	return nil
}

//超级武器(国器)
type SerSuperEquip struct {
	SuperEquip           []*SuperEquip           `protobuf:"bytes,1,rep,name=superEquip" json:"superEquip,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerSuperEquip) Reset() {
	*x = SerSuperEquip{}
}

func (x *SerSuperEquip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerSuperEquip) ProtoMessage() {}

func (x *SerSuperEquip) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[37].MessageOf(x)
}

func (m *SerSuperEquip) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[37].Methods()
}

// Deprecated: Use SerSuperEquip.ProtoReflect.Type instead.
func (*SerSuperEquip) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{37}
}

func (x *SerSuperEquip) GetSuperEquip() []*SuperEquip {
	if x != nil {
		return x.SuperEquip
	}
	return nil
}

//超级武器队列(国器)
type SerSuperEquipQue struct {
	Que                  []*TwoInt               `protobuf:"bytes,1,rep,name=que" json:"que,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerSuperEquipQue) Reset() {
	*x = SerSuperEquipQue{}
}

func (x *SerSuperEquipQue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerSuperEquipQue) ProtoMessage() {}

func (x *SerSuperEquipQue) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[38].MessageOf(x)
}

func (m *SerSuperEquipQue) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[38].Methods()
}

// Deprecated: Use SerSuperEquipQue.ProtoReflect.Type instead.
func (*SerSuperEquipQue) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{38}
}

func (x *SerSuperEquipQue) GetQue() []*TwoInt {
	if x != nil {
		return x.Que
	}
	return nil
}

//操作记录
type SerRoleOpt struct {
	Opt                  []*RoleOpt              `protobuf:"bytes,1,rep,name=opt" json:"opt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerRoleOpt) Reset() {
	*x = SerRoleOpt{}
}

func (x *SerRoleOpt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerRoleOpt) ProtoMessage() {}

func (x *SerRoleOpt) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[39].MessageOf(x)
}

func (m *SerRoleOpt) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[39].Methods()
}

// Deprecated: Use SerRoleOpt.ProtoReflect.Type instead.
func (*SerRoleOpt) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{39}
}

func (x *SerRoleOpt) GetOpt() []*RoleOpt {
	if x != nil {
		return x.Opt
	}
	return nil
}

//城墙NPC
type SerWallNpc struct {
	WallNpc              []*WallNpc              `protobuf:"bytes,1,rep,name=wallNpc" json:"wallNpc,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerWallNpc) Reset() {
	*x = SerWallNpc{}
}

func (x *SerWallNpc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerWallNpc) ProtoMessage() {}

func (x *SerWallNpc) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[40].MessageOf(x)
}

func (m *SerWallNpc) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[40].Methods()
}

// Deprecated: Use SerWallNpc.ProtoReflect.Type instead.
func (*SerWallNpc) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{40}
}

func (x *SerWallNpc) GetWallNpc() []*WallNpc {
	if x != nil {
		return x.WallNpc
	}
	return nil
}

//效果
type SerEffects struct {
	Effect               []*Effect               `protobuf:"bytes,1,rep,name=effect" json:"effect,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerEffects) Reset() {
	*x = SerEffects{}
}

func (x *SerEffects) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerEffects) ProtoMessage() {}

func (x *SerEffects) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[41].MessageOf(x)
}

func (m *SerEffects) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[41].Methods()
}

// Deprecated: Use SerEffects.ProtoReflect.Type instead.
func (*SerEffects) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{41}
}

func (x *SerEffects) GetEffect() []*Effect {
	if x != nil {
		return x.Effect
	}
	return nil
}

//好友列表
type SerFriend struct {
	DbFriend             []*DbFriend             `protobuf:"bytes,1,rep,name=dbFriend" json:"dbFriend,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerFriend) Reset() {
	*x = SerFriend{}
}

func (x *SerFriend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerFriend) ProtoMessage() {}

func (x *SerFriend) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[42].MessageOf(x)
}

func (m *SerFriend) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[42].Methods()
}

// Deprecated: Use SerFriend.ProtoReflect.Type instead.
func (*SerFriend) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{42}
}

func (x *SerFriend) GetDbFriend() []*DbFriend {
	if x != nil {
		return x.DbFriend
	}
	return nil
}

//师徒
type SerMasterApprentice struct {
	Master               *DbMasterApprentice     `protobuf:"bytes,1,opt,name=master" json:"master,omitempty"`
	Apprentices          []*DbMasterApprentice   `protobuf:"bytes,2,rep,name=apprentices" json:"apprentices,omitempty"`
	AwardedIds           []*TwoInt               `protobuf:"bytes,3,rep,name=awardedIds" json:"awardedIds,omitempty"`
	BoughtIds            []int32                 `protobuf:"varint,4,rep,name=boughtIds" json:"boughtIds,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerMasterApprentice) Reset() {
	*x = SerMasterApprentice{}
}

func (x *SerMasterApprentice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerMasterApprentice) ProtoMessage() {}

func (x *SerMasterApprentice) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[43].MessageOf(x)
}

func (m *SerMasterApprentice) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[43].Methods()
}

// Deprecated: Use SerMasterApprentice.ProtoReflect.Type instead.
func (*SerMasterApprentice) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{43}
}

func (x *SerMasterApprentice) GetMaster() *DbMasterApprentice {
	if x != nil {
		return x.Master
	}
	return nil
}

func (x *SerMasterApprentice) GetApprentices() []*DbMasterApprentice {
	if x != nil {
		return x.Apprentices
	}
	return nil
}

func (x *SerMasterApprentice) GetAwardedIds() []*TwoInt {
	if x != nil {
		return x.AwardedIds
	}
	return nil
}

func (x *SerMasterApprentice) GetBoughtIds() []int32 {
	if x != nil {
		return x.BoughtIds
	}
	return nil
}

//内阁相关存储数据
type SerCabinet struct {
	PrePlanId            *int32                  `protobuf:"varint,1,opt,name=prePlanId" json:"prePlanId,omitempty"`
	CurPlanId            *int32                  `protobuf:"varint,2,opt,name=curPlanId" json:"curPlanId,omitempty"`
	LeadStep             *int32                  `protobuf:"varint,3,opt,name=leadStep" json:"leadStep,omitempty"`
	IsFinsh              *bool                   `protobuf:"varint,4,opt,name=isFinsh" json:"isFinsh,omitempty"`
	IsCreateLead         *bool                   `protobuf:"varint,5,opt,name=isCreateLead" json:"isCreateLead,omitempty"`
	IsLvFinish           *bool                   `protobuf:"varint,6,opt,name=isLvFinish" json:"isLvFinish,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerCabinet) Reset() {
	*x = SerCabinet{}
}

func (x *SerCabinet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerCabinet) ProtoMessage() {}

func (x *SerCabinet) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[44].MessageOf(x)
}

func (m *SerCabinet) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[44].Methods()
}

// Deprecated: Use SerCabinet.ProtoReflect.Type instead.
func (*SerCabinet) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{44}
}

func (x *SerCabinet) GetPrePlanId() int32 {
	if x != nil && x.PrePlanId != nil {
		return *x.PrePlanId
	}
	return 0
}

func (x *SerCabinet) GetCurPlanId() int32 {
	if x != nil && x.CurPlanId != nil {
		return *x.CurPlanId
	}
	return 0
}

func (x *SerCabinet) GetLeadStep() int32 {
	if x != nil && x.LeadStep != nil {
		return *x.LeadStep
	}
	return 0
}

func (x *SerCabinet) GetIsFinsh() bool {
	if x != nil && x.IsFinsh != nil {
		return *x.IsFinsh
	}
	return false
}

func (x *SerCabinet) GetIsCreateLead() bool {
	if x != nil && x.IsCreateLead != nil {
		return *x.IsCreateLead
	}
	return false
}

func (x *SerCabinet) GetIsLvFinish() bool {
	if x != nil && x.IsLvFinish != nil {
		return *x.IsLvFinish
	}
	return false
}

// 地图点兵统领
type SerCabinetLead struct {
	CabinetLead          []*CabinetLead          `protobuf:"bytes,1,rep,name=cabinetLead" json:"cabinetLead,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerCabinetLead) Reset() {
	*x = SerCabinetLead{}
}

func (x *SerCabinetLead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerCabinetLead) ProtoMessage() {}

func (x *SerCabinetLead) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[45].MessageOf(x)
}

func (m *SerCabinetLead) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[45].Methods()
}

// Deprecated: Use SerCabinetLead.ProtoReflect.Type instead.
func (*SerCabinetLead) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{45}
}

func (x *SerCabinetLead) GetCabinetLead() []*CabinetLead {
	if x != nil {
		return x.CabinetLead
	}
	return nil
}

// 地图盖世太保,飞艇
type SerGestapo struct {
	Gestapo              []*Gestapo              `protobuf:"bytes,1,rep,name=gestapo" json:"gestapo,omitempty"`
	Airship              []*Airship              `protobuf:"bytes,2,rep,name=airship" json:"airship,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerGestapo) Reset() {
	*x = SerGestapo{}
}

func (x *SerGestapo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerGestapo) ProtoMessage() {}

func (x *SerGestapo) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[46].MessageOf(x)
}

func (m *SerGestapo) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[46].Methods()
}

// Deprecated: Use SerGestapo.ProtoReflect.Type instead.
func (*SerGestapo) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{46}
}

func (x *SerGestapo) GetGestapo() []*Gestapo {
	if x != nil {
		return x.Gestapo
	}
	return nil
}

func (x *SerGestapo) GetAirship() []*Airship {
	if x != nil {
		return x.Airship
	}
	return nil
}

// 公用数据的额外字段
type SerGlobalExt struct {
	Boss                   []*SerLightningWarBoss  `protobuf:"bytes,1,rep,name=boss" json:"boss,omitempty"`
	SendChatCnt            []*TwoInt               `protobuf:"bytes,2,rep,name=sendChatCnt" json:"sendChatCnt,omitempty"`
	BerlinWar              *SerBerlinWar           `protobuf:"bytes,3,opt,name=berlinWar" json:"berlinWar,omitempty"`
	HonorDaily             *SerHonorDaily          `protobuf:"bytes,4,opt,name=honorDaily" json:"honorDaily,omitempty"`
	GlobalRebellion        *GlobalRebellion        `protobuf:"bytes,5,opt,name=globalRebellion" json:"globalRebellion,omitempty"`
	CounterAttack          *SerCounterAttack       `protobuf:"bytes,6,opt,name=counterAttack" json:"counterAttack,omitempty"`
	CrossCityNpcChgAttrCnt *int32                  `protobuf:"varint,7,opt,name=crossCityNpcChgAttrCnt" json:"crossCityNpcChgAttrCnt,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                `json:"-"`
	XXX_unrecognized       protoimpl.UnknownFields `json:"-"`
	XXX_sizecache          protoimpl.SizeCache     `json:"-"`
}

func (x *SerGlobalExt) Reset() {
	*x = SerGlobalExt{}
}

func (x *SerGlobalExt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerGlobalExt) ProtoMessage() {}

func (x *SerGlobalExt) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[47].MessageOf(x)
}

func (m *SerGlobalExt) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[47].Methods()
}

// Deprecated: Use SerGlobalExt.ProtoReflect.Type instead.
func (*SerGlobalExt) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{47}
}

func (x *SerGlobalExt) GetBoss() []*SerLightningWarBoss {
	if x != nil {
		return x.Boss
	}
	return nil
}

func (x *SerGlobalExt) GetSendChatCnt() []*TwoInt {
	if x != nil {
		return x.SendChatCnt
	}
	return nil
}

func (x *SerGlobalExt) GetBerlinWar() *SerBerlinWar {
	if x != nil {
		return x.BerlinWar
	}
	return nil
}

func (x *SerGlobalExt) GetHonorDaily() *SerHonorDaily {
	if x != nil {
		return x.HonorDaily
	}
	return nil
}

func (x *SerGlobalExt) GetGlobalRebellion() *GlobalRebellion {
	if x != nil {
		return x.GlobalRebellion
	}
	return nil
}

func (x *SerGlobalExt) GetCounterAttack() *SerCounterAttack {
	if x != nil {
		return x.CounterAttack
	}
	return nil
}

func (x *SerGlobalExt) GetCrossCityNpcChgAttrCnt() int32 {
	if x != nil && x.CrossCityNpcChgAttrCnt != nil {
		return *x.CrossCityNpcChgAttrCnt
	}
	return 0
}

// 反攻德意志序列化
type SerCounterAttack struct {
	CycleData            *CycleData              `protobuf:"bytes,1,opt,name=cycleData" json:"cycleData,omitempty"`
	CityId               *int32                  `protobuf:"varint,2,opt,name=cityId" json:"cityId,omitempty"`
	Pos                  *int32                  `protobuf:"varint,3,opt,name=pos" json:"pos,omitempty"`
	Status               *int32                  `protobuf:"varint,4,opt,name=status" json:"status,omitempty"`
	RoleInfo             []*IntLong              `protobuf:"bytes,5,rep,name=roleInfo" json:"roleInfo,omitempty"`
	CurrentBoss          *int32                  `protobuf:"varint,6,opt,name=currentBoss" json:"currentBoss,omitempty"`
	CurrentAtkCnt        *int32                  `protobuf:"varint,7,opt,name=currentAtkCnt" json:"currentAtkCnt,omitempty"`
	Force                []*Force                `protobuf:"bytes,8,rep,name=force" json:"force,omitempty"`
	JoinBattleRole       []int64                 `protobuf:"varint,9,rep,name=joinBattleRole" json:"joinBattleRole,omitempty"`
	ShopInfo             []*SerCounterShop       `protobuf:"bytes,10,rep,name=shopInfo" json:"shopInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerCounterAttack) Reset() {
	*x = SerCounterAttack{}
}

func (x *SerCounterAttack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerCounterAttack) ProtoMessage() {}

func (x *SerCounterAttack) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[48].MessageOf(x)
}

func (m *SerCounterAttack) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[48].Methods()
}

// Deprecated: Use SerCounterAttack.ProtoReflect.Type instead.
func (*SerCounterAttack) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{48}
}

func (x *SerCounterAttack) GetCycleData() *CycleData {
	if x != nil {
		return x.CycleData
	}
	return nil
}

func (x *SerCounterAttack) GetCityId() int32 {
	if x != nil && x.CityId != nil {
		return *x.CityId
	}
	return 0
}

func (x *SerCounterAttack) GetPos() int32 {
	if x != nil && x.Pos != nil {
		return *x.Pos
	}
	return 0
}

func (x *SerCounterAttack) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *SerCounterAttack) GetRoleInfo() []*IntLong {
	if x != nil {
		return x.RoleInfo
	}
	return nil
}

func (x *SerCounterAttack) GetCurrentBoss() int32 {
	if x != nil && x.CurrentBoss != nil {
		return *x.CurrentBoss
	}
	return 0
}

func (x *SerCounterAttack) GetCurrentAtkCnt() int32 {
	if x != nil && x.CurrentAtkCnt != nil {
		return *x.CurrentAtkCnt
	}
	return 0
}

func (x *SerCounterAttack) GetForce() []*Force {
	if x != nil {
		return x.Force
	}
	return nil
}

func (x *SerCounterAttack) GetJoinBattleRole() []int64 {
	if x != nil {
		return x.JoinBattleRole
	}
	return nil
}

func (x *SerCounterAttack) GetShopInfo() []*SerCounterShop {
	if x != nil {
		return x.ShopInfo
	}
	return nil
}

// 军火库信息
type SerCounterShop struct {
	RoleId               *int64                  `protobuf:"varint,1,opt,name=roleId" json:"roleId,omitempty"`
	ShopInfo             []*TwoInt               `protobuf:"bytes,2,rep,name=shopInfo" json:"shopInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerCounterShop) Reset() {
	*x = SerCounterShop{}
}

func (x *SerCounterShop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerCounterShop) ProtoMessage() {}

func (x *SerCounterShop) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[49].MessageOf(x)
}

func (m *SerCounterShop) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[49].Methods()
}

// Deprecated: Use SerCounterShop.ProtoReflect.Type instead.
func (*SerCounterShop) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{49}
}

func (x *SerCounterShop) GetRoleId() int64 {
	if x != nil && x.RoleId != nil {
		return *x.RoleId
	}
	return 0
}

func (x *SerCounterShop) GetShopInfo() []*TwoInt {
	if x != nil {
		return x.ShopInfo
	}
	return nil
}

// 荣耀日常
type SerHonorDaily struct {
	CreateTime           *int32                  `protobuf:"varint,1,opt,name=createTime" json:"createTime,omitempty"`
	DailyReports         []*HonorReport          `protobuf:"bytes,2,rep,name=dailyReports" json:"dailyReports,omitempty"`
	Reports2             []*HonorReport2         `protobuf:"bytes,3,rep,name=reports2" json:"reports2,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerHonorDaily) Reset() {
	*x = SerHonorDaily{}
}

func (x *SerHonorDaily) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerHonorDaily) ProtoMessage() {}

func (x *SerHonorDaily) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[50].MessageOf(x)
}

func (m *SerHonorDaily) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[50].Methods()
}

// Deprecated: Use SerHonorDaily.ProtoReflect.Type instead.
func (*SerHonorDaily) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{50}
}

func (x *SerHonorDaily) GetCreateTime() int32 {
	if x != nil && x.CreateTime != nil {
		return *x.CreateTime
	}
	return 0
}

func (x *SerHonorDaily) GetDailyReports() []*HonorReport {
	if x != nil {
		return x.DailyReports
	}
	return nil
}

func (x *SerHonorDaily) GetReports2() []*HonorReport2 {
	if x != nil {
		return x.Reports2
	}
	return nil
}

// 闪电战Boss信息
type SerLightningWarBoss struct {
	Id                   *int32                  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	CityId               *int32                  `protobuf:"varint,2,opt,name=cityId" json:"cityId,omitempty"`
	Pos                  *int32                  `protobuf:"varint,3,opt,name=pos" json:"pos,omitempty"`
	LastFightTime        *int32                  `protobuf:"varint,4,opt,name=lastFightTime" json:"lastFightTime,omitempty"`
	Status               *int32                  `protobuf:"varint,5,opt,name=status" json:"status,omitempty"`
	Force                []*Force                `protobuf:"bytes,6,rep,name=force" json:"force,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerLightningWarBoss) Reset() {
	*x = SerLightningWarBoss{}
}

func (x *SerLightningWarBoss) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerLightningWarBoss) ProtoMessage() {}

func (x *SerLightningWarBoss) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[51].MessageOf(x)
}

func (m *SerLightningWarBoss) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[51].Methods()
}

// Deprecated: Use SerLightningWarBoss.ProtoReflect.Type instead.
func (*SerLightningWarBoss) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{51}
}

func (x *SerLightningWarBoss) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *SerLightningWarBoss) GetCityId() int32 {
	if x != nil && x.CityId != nil {
		return *x.CityId
	}
	return 0
}

func (x *SerLightningWarBoss) GetPos() int32 {
	if x != nil && x.Pos != nil {
		return *x.Pos
	}
	return 0
}

func (x *SerLightningWarBoss) GetLastFightTime() int32 {
	if x != nil && x.LastFightTime != nil {
		return *x.LastFightTime
	}
	return 0
}

func (x *SerLightningWarBoss) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *SerLightningWarBoss) GetForce() []*Force {
	if x != nil {
		return x.Force
	}
	return nil
}

// 柏林会战序列化
type SerBerlinWar struct {
	BerlinCity           *SerBerlinCityInfo      `protobuf:"bytes,1,opt,name=berlinCity" json:"berlinCity,omitempty"`
	BattleFront          []*SerBerlinCityInfo    `protobuf:"bytes,2,rep,name=battleFront" json:"battleFront,omitempty"`
	Reports              []*Report               `protobuf:"bytes,3,rep,name=reports" json:"reports,omitempty"`
	Records              []*SerBerlinRecord      `protobuf:"bytes,4,rep,name=records" json:"records,omitempty"`
	LastDate             *int32                  `protobuf:"varint,5,opt,name=lastDate" json:"lastDate,omitempty"`
	HistoryWinner        []*IntLong              `protobuf:"bytes,6,rep,name=historyWinner" json:"historyWinner,omitempty"`
	Status               *int32                  `protobuf:"varint,7,opt,name=status" json:"status,omitempty"`
	BeginDate            *int32                  `protobuf:"varint,8,opt,name=beginDate" json:"beginDate,omitempty"`
	EndDate              *int32                  `protobuf:"varint,9,opt,name=endDate" json:"endDate,omitempty"`
	PreViewDate          *int32                  `protobuf:"varint,10,opt,name=preViewDate" json:"preViewDate,omitempty"`
	AtkCD                *int32                  `protobuf:"varint,11,opt,name=atkCD" json:"atkCD,omitempty"`
	BerliJobs            []*IntLong              `protobuf:"bytes,12,rep,name=berliJobs" json:"berliJobs,omitempty"`
	JoinBerlinWar        []int64                 `protobuf:"varint,13,rep,name=joinBerlinWar" json:"joinBerlinWar,omitempty"`
	RoleInfos            []*SerBerlinRoleInfo    `protobuf:"bytes,14,rep,name=roleInfos" json:"roleInfos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerBerlinWar) Reset() {
	*x = SerBerlinWar{}
}

func (x *SerBerlinWar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerBerlinWar) ProtoMessage() {}

func (x *SerBerlinWar) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[52].MessageOf(x)
}

func (m *SerBerlinWar) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[52].Methods()
}

// Deprecated: Use SerBerlinWar.ProtoReflect.Type instead.
func (*SerBerlinWar) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{52}
}

func (x *SerBerlinWar) GetBerlinCity() *SerBerlinCityInfo {
	if x != nil {
		return x.BerlinCity
	}
	return nil
}

func (x *SerBerlinWar) GetBattleFront() []*SerBerlinCityInfo {
	if x != nil {
		return x.BattleFront
	}
	return nil
}

func (x *SerBerlinWar) GetReports() []*Report {
	if x != nil {
		return x.Reports
	}
	return nil
}

func (x *SerBerlinWar) GetRecords() []*SerBerlinRecord {
	if x != nil {
		return x.Records
	}
	return nil
}

func (x *SerBerlinWar) GetLastDate() int32 {
	if x != nil && x.LastDate != nil {
		return *x.LastDate
	}
	return 0
}

func (x *SerBerlinWar) GetHistoryWinner() []*IntLong {
	if x != nil {
		return x.HistoryWinner
	}
	return nil
}

func (x *SerBerlinWar) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *SerBerlinWar) GetBeginDate() int32 {
	if x != nil && x.BeginDate != nil {
		return *x.BeginDate
	}
	return 0
}

func (x *SerBerlinWar) GetEndDate() int32 {
	if x != nil && x.EndDate != nil {
		return *x.EndDate
	}
	return 0
}

func (x *SerBerlinWar) GetPreViewDate() int32 {
	if x != nil && x.PreViewDate != nil {
		return *x.PreViewDate
	}
	return 0
}

func (x *SerBerlinWar) GetAtkCD() int32 {
	if x != nil && x.AtkCD != nil {
		return *x.AtkCD
	}
	return 0
}

func (x *SerBerlinWar) GetBerliJobs() []*IntLong {
	if x != nil {
		return x.BerliJobs
	}
	return nil
}

func (x *SerBerlinWar) GetJoinBerlinWar() []int64 {
	if x != nil {
		return x.JoinBerlinWar
	}
	return nil
}

func (x *SerBerlinWar) GetRoleInfos() []*SerBerlinRoleInfo {
	if x != nil {
		return x.RoleInfos
	}
	return nil
}

// 柏林玩家数据
type SerBerlinRoleInfo struct {
	RoleId               *int64                  `protobuf:"varint,1,req,name=roleId" json:"roleId,omitempty"`
	AtkCD                *int32                  `protobuf:"varint,2,opt,name=atkCD" json:"atkCD,omitempty"`
	StatusData           []*TwoInt               `protobuf:"bytes,6,rep,name=statusData" json:"statusData,omitempty"`
	CountData            []*TwoInt               `protobuf:"bytes,7,rep,name=countData" json:"countData,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerBerlinRoleInfo) Reset() {
	*x = SerBerlinRoleInfo{}
}

func (x *SerBerlinRoleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerBerlinRoleInfo) ProtoMessage() {}

func (x *SerBerlinRoleInfo) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[53].MessageOf(x)
}

func (m *SerBerlinRoleInfo) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[53].Methods()
}

// Deprecated: Use SerBerlinRoleInfo.ProtoReflect.Type instead.
func (*SerBerlinRoleInfo) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{53}
}

func (x *SerBerlinRoleInfo) GetRoleId() int64 {
	if x != nil && x.RoleId != nil {
		return *x.RoleId
	}
	return 0
}

func (x *SerBerlinRoleInfo) GetAtkCD() int32 {
	if x != nil && x.AtkCD != nil {
		return *x.AtkCD
	}
	return 0
}

func (x *SerBerlinRoleInfo) GetStatusData() []*TwoInt {
	if x != nil {
		return x.StatusData
	}
	return nil
}

func (x *SerBerlinRoleInfo) GetCountData() []*TwoInt {
	if x != nil {
		return x.CountData
	}
	return nil
}

// 据点详情
type SerBerlinCityInfo struct {
	StatusTime           []*TwoInt               `protobuf:"bytes,1,rep,name=statusTime" json:"statusTime,omitempty"`
	CityDef              []*Force                `protobuf:"bytes,2,rep,name=cityDef" json:"cityDef,omitempty"`
	RoleQueue            []*BerlinForce          `protobuf:"bytes,3,rep,name=roleQueue" json:"roleQueue,omitempty"`
	Camp                 *int32                  `protobuf:"varint,4,opt,name=camp" json:"camp,omitempty"`
	AtkArm               *int32                  `protobuf:"varint,5,opt,name=atkArm" json:"atkArm,omitempty"`
	DefArm               *int32                  `protobuf:"varint,6,opt,name=defArm" json:"defArm,omitempty"`
	CityId               *int32                  `protobuf:"varint,7,opt,name=cityId" json:"cityId,omitempty"`
	Pos                  *int32                  `protobuf:"varint,8,opt,name=pos" json:"pos,omitempty"`
	LastOccupyTime       *int32                  `protobuf:"varint,9,opt,name=lastOccupyTime" json:"lastOccupyTime,omitempty"`
	NextAtkTime          *int32                  `protobuf:"varint,10,opt,name=nextAtkTime" json:"nextAtkTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerBerlinCityInfo) Reset() {
	*x = SerBerlinCityInfo{}
}

func (x *SerBerlinCityInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerBerlinCityInfo) ProtoMessage() {}

func (x *SerBerlinCityInfo) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[54].MessageOf(x)
}

func (m *SerBerlinCityInfo) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[54].Methods()
}

// Deprecated: Use SerBerlinCityInfo.ProtoReflect.Type instead.
func (*SerBerlinCityInfo) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{54}
}

func (x *SerBerlinCityInfo) GetStatusTime() []*TwoInt {
	if x != nil {
		return x.StatusTime
	}
	return nil
}

func (x *SerBerlinCityInfo) GetCityDef() []*Force {
	if x != nil {
		return x.CityDef
	}
	return nil
}

func (x *SerBerlinCityInfo) GetRoleQueue() []*BerlinForce {
	if x != nil {
		return x.RoleQueue
	}
	return nil
}

func (x *SerBerlinCityInfo) GetCamp() int32 {
	if x != nil && x.Camp != nil {
		return *x.Camp
	}
	return 0
}

func (x *SerBerlinCityInfo) GetAtkArm() int32 {
	if x != nil && x.AtkArm != nil {
		return *x.AtkArm
	}
	return 0
}

func (x *SerBerlinCityInfo) GetDefArm() int32 {
	if x != nil && x.DefArm != nil {
		return *x.DefArm
	}
	return 0
}

func (x *SerBerlinCityInfo) GetCityId() int32 {
	if x != nil && x.CityId != nil {
		return *x.CityId
	}
	return 0
}

func (x *SerBerlinCityInfo) GetPos() int32 {
	if x != nil && x.Pos != nil {
		return *x.Pos
	}
	return 0
}

func (x *SerBerlinCityInfo) GetLastOccupyTime() int32 {
	if x != nil && x.LastOccupyTime != nil {
		return *x.LastOccupyTime
	}
	return 0
}

func (x *SerBerlinCityInfo) GetNextAtkTime() int32 {
	if x != nil && x.NextAtkTime != nil {
		return *x.NextAtkTime
	}
	return 0
}

// 会战记录
type SerBerlinRecord struct {
	KillCnt              *int32                  `protobuf:"varint,1,opt,name=killCnt" json:"killCnt,omitempty"`
	TempKill             *int32                  `protobuf:"varint,2,opt,name=tempKill" json:"tempKill,omitempty"`
	TempKillHero         *int32                  `protobuf:"varint,3,opt,name=tempKillHero" json:"tempKillHero,omitempty"`
	KillStreakHero       *int32                  `protobuf:"varint,4,opt,name=killStreakHero" json:"killStreakHero,omitempty"`
	KillStreak           *int32                  `protobuf:"varint,5,opt,name=killStreak" json:"killStreak,omitempty"`
	KillRankTime         *int32                  `protobuf:"varint,6,opt,name=killRankTime" json:"killRankTime,omitempty"`
	StreakRankTime       *int32                  `protobuf:"varint,7,opt,name=streakRankTime" json:"streakRankTime,omitempty"`
	RoleId               *int64                  `protobuf:"varint,8,opt,name=roleId" json:"roleId,omitempty"`
	Exploit              *int32                  `protobuf:"varint,9,opt,name=exploit" json:"exploit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerBerlinRecord) Reset() {
	*x = SerBerlinRecord{}
}

func (x *SerBerlinRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerBerlinRecord) ProtoMessage() {}

func (x *SerBerlinRecord) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[55].MessageOf(x)
}

func (m *SerBerlinRecord) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[55].Methods()
}

// Deprecated: Use SerBerlinRecord.ProtoReflect.Type instead.
func (*SerBerlinRecord) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{55}
}

func (x *SerBerlinRecord) GetKillCnt() int32 {
	if x != nil && x.KillCnt != nil {
		return *x.KillCnt
	}
	return 0
}

func (x *SerBerlinRecord) GetTempKill() int32 {
	if x != nil && x.TempKill != nil {
		return *x.TempKill
	}
	return 0
}

func (x *SerBerlinRecord) GetTempKillHero() int32 {
	if x != nil && x.TempKillHero != nil {
		return *x.TempKillHero
	}
	return 0
}

func (x *SerBerlinRecord) GetKillStreakHero() int32 {
	if x != nil && x.KillStreakHero != nil {
		return *x.KillStreakHero
	}
	return 0
}

func (x *SerBerlinRecord) GetKillStreak() int32 {
	if x != nil && x.KillStreak != nil {
		return *x.KillStreak
	}
	return 0
}

func (x *SerBerlinRecord) GetKillRankTime() int32 {
	if x != nil && x.KillRankTime != nil {
		return *x.KillRankTime
	}
	return 0
}

func (x *SerBerlinRecord) GetStreakRankTime() int32 {
	if x != nil && x.StreakRankTime != nil {
		return *x.StreakRankTime
	}
	return 0
}

func (x *SerBerlinRecord) GetRoleId() int64 {
	if x != nil && x.RoleId != nil {
		return *x.RoleId
	}
	return 0
}

func (x *SerBerlinRecord) GetExploit() int32 {
	if x != nil && x.Exploit != nil {
		return *x.Exploit
	}
	return 0
}

// 玩家的额外字段
type SerPlayerExt struct {
	Portraits             []int32                 `protobuf:"varint,1,rep,name=portraits" json:"portraits,omitempty"`
	Summon                *Summon                 `protobuf:"bytes,2,opt,name=summon" json:"summon,omitempty"`
	AppointFreeTime       *int32                  `protobuf:"varint,3,opt,name=appointFreeTime" json:"appointFreeTime,omitempty"`
	CombatHeroForm        []int32                 `protobuf:"varint,4,rep,name=combatHeroForm" json:"combatHeroForm,omitempty"`
	HeroSkin              *int32                  `protobuf:"varint,5,opt,name=heroSkin" json:"heroSkin,omitempty"`
	LoginRewardTime       *int32                  `protobuf:"varint,6,opt,name=loginRewardTime" json:"loginRewardTime,omitempty"`
	BattleHeroPos         []*IntListInt           `protobuf:"bytes,7,rep,name=battleHeroPos" json:"battleHeroPos,omitempty"`
	FirstPayDouble        []string                `protobuf:"bytes,8,rep,name=firstPayDouble" json:"firstPayDouble,omitempty"`
	BanditCnt             *int32                  `protobuf:"varint,9,opt,name=banditCnt" json:"banditCnt,omitempty"`
	IsFireState           *bool                   `protobuf:"varint,10,opt,name=isFireState" json:"isFireState,omitempty"`
	NightRaidBanditCnt    *int32                  `protobuf:"varint,11,opt,name=nightRaidBanditCnt" json:"nightRaidBanditCnt,omitempty"`
	DbTriggerGiftMap      []*DbTriggerGiftMap     `protobuf:"bytes,12,rep,name=dbTriggerGiftMap" json:"dbTriggerGiftMap,omitempty"`
	HitFlyCount           *int32                  `protobuf:"varint,13,opt,name=hitFlyCount" json:"hitFlyCount,omitempty"`
	IsOffOnlineHitFly     *bool                   `protobuf:"varint,14,opt,name=isOffOnlineHitFly" json:"isOffOnlineHitFly,omitempty"`
	IsAdvanceAward        *bool                   `protobuf:"varint,15,opt,name=isAdvanceAward" json:"isAdvanceAward,omitempty"`
	PackId                *string                 `protobuf:"bytes,16,opt,name=packId" json:"packId,omitempty"`
	StoneInfo             *StoneInfo              `protobuf:"bytes,17,opt,name=stoneInfo" json:"stoneInfo,omitempty"`
	AtkCityAct            *DbAtkCityAct           `protobuf:"bytes,18,opt,name=atkCityAct" json:"atkCityAct,omitempty"`
	SpecialProp           []*DbSpecialProp        `protobuf:"bytes,19,rep,name=specialProp" json:"specialProp,omitempty"`
	MixtureData           []*TwoInt               `protobuf:"bytes,20,rep,name=mixtureData" json:"mixtureData,omitempty"`
	MilitaryExpenditure   *int32                  `protobuf:"varint,21,opt,name=militaryExpenditure" json:"militaryExpenditure,omitempty"`
	CheatCode             []int32                 `protobuf:"varint,22,rep,name=cheatCode" json:"cheatCode,omitempty"`
	Blacklist             []int64                 `protobuf:"varint,23,rep,name=blacklist" json:"blacklist,omitempty"`
	OffLineBuild          []*OffLineBuild         `protobuf:"bytes,24,rep,name=offLineBuild" json:"offLineBuild,omitempty"`
	ChatBubble            []int32                 `protobuf:"varint,25,rep,name=chatBubble" json:"chatBubble,omitempty"`
	CurChatBubble         *int32                  `protobuf:"varint,26,opt,name=curChatBubble" json:"curChatBubble,omitempty"`
	BodyImage             []int32                 `protobuf:"varint,27,rep,name=bodyImage" json:"bodyImage,omitempty"`
	CurBodyImage          *int32                  `protobuf:"varint,28,opt,name=curBodyImage" json:"curBodyImage,omitempty"`
	MedalGoods            []int32                 `protobuf:"varint,29,rep,name=medalGoods" json:"medalGoods,omitempty"`
	MedalGoodsRefNum      *int32                  `protobuf:"varint,30,opt,name=medalGoodsRefNum" json:"medalGoodsRefNum,omitempty"`
	PeacekeepingForcesNum *int32                  `protobuf:"varint,31,opt,name=peacekeepingForcesNum" json:"peacekeepingForcesNum,omitempty"`
	JGXHLastTime          *int32                  `protobuf:"varint,32,opt,name=jGXHLastTime" json:"jGXHLastTime,omitempty"`
	PlaneChips            []*TwoInt               `protobuf:"bytes,33,rep,name=planeChips" json:"planeChips,omitempty"`
	DbPlane               []*DbWarPlane           `protobuf:"bytes,34,rep,name=dbPlane" json:"dbPlane,omitempty"`
	DbPlayerRebellion     *DbPlayerRebellion      `protobuf:"bytes,35,opt,name=dbPlayerRebellion" json:"dbPlayerRebellion,omitempty"`
	FunCard               []*FunCard              `protobuf:"bytes,36,rep,name=funCard" json:"funCard,omitempty"`
	DecisiveInfo          *SerDecisiveInfo        `protobuf:"bytes,37,opt,name=decisiveInfo" json:"decisiveInfo,omitempty"`
	MentorInfo            *SerMentorInfo          `protobuf:"bytes,38,opt,name=mentorInfo" json:"mentorInfo,omitempty"`
	AirshipPersonData     *DbAirshipPersonData    `protobuf:"bytes,39,opt,name=airshipPersonData" json:"airshipPersonData,omitempty"`
	SupplyRecord          *SerSupplyRecord        `protobuf:"bytes,40,opt,name=supplyRecord" json:"supplyRecord,omitempty"`
	Jewel                 []*EquipJewel           `protobuf:"bytes,41,rep,name=jewel" json:"jewel,omitempty"`
	WorldWar              *SerPlayerWorldWar      `protobuf:"bytes,42,opt,name=worldWar" json:"worldWar,omitempty"`
	OwnCastleSkin         []int32                 `protobuf:"varint,43,rep,name=ownCastleSkin" json:"ownCastleSkin,omitempty"`
	CurCastleSkin         *int32                  `protobuf:"varint,44,opt,name=curCastleSkin" json:"curCastleSkin,omitempty"`
	NewYorkWar            *SerPlayerNewYorkWar    `protobuf:"bytes,45,opt,name=newYorkWar" json:"newYorkWar,omitempty"`
	OwnCastleSkinTime     []*TwoInt               `protobuf:"bytes,46,rep,name=ownCastleSkinTime" json:"ownCastleSkinTime,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                `json:"-"`
	XXX_unrecognized      protoimpl.UnknownFields `json:"-"`
	XXX_sizecache         protoimpl.SizeCache     `json:"-"`
}

func (x *SerPlayerExt) Reset() {
	*x = SerPlayerExt{}
}

func (x *SerPlayerExt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerPlayerExt) ProtoMessage() {}

func (x *SerPlayerExt) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[56].MessageOf(x)
}

func (m *SerPlayerExt) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[56].Methods()
}

// Deprecated: Use SerPlayerExt.ProtoReflect.Type instead.
func (*SerPlayerExt) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{56}
}

func (x *SerPlayerExt) GetPortraits() []int32 {
	if x != nil {
		return x.Portraits
	}
	return nil
}

func (x *SerPlayerExt) GetSummon() *Summon {
	if x != nil {
		return x.Summon
	}
	return nil
}

func (x *SerPlayerExt) GetAppointFreeTime() int32 {
	if x != nil && x.AppointFreeTime != nil {
		return *x.AppointFreeTime
	}
	return 0
}

func (x *SerPlayerExt) GetCombatHeroForm() []int32 {
	if x != nil {
		return x.CombatHeroForm
	}
	return nil
}

func (x *SerPlayerExt) GetHeroSkin() int32 {
	if x != nil && x.HeroSkin != nil {
		return *x.HeroSkin
	}
	return 0
}

func (x *SerPlayerExt) GetLoginRewardTime() int32 {
	if x != nil && x.LoginRewardTime != nil {
		return *x.LoginRewardTime
	}
	return 0
}

func (x *SerPlayerExt) GetBattleHeroPos() []*IntListInt {
	if x != nil {
		return x.BattleHeroPos
	}
	return nil
}

func (x *SerPlayerExt) GetFirstPayDouble() []string {
	if x != nil {
		return x.FirstPayDouble
	}
	return nil
}

func (x *SerPlayerExt) GetBanditCnt() int32 {
	if x != nil && x.BanditCnt != nil {
		return *x.BanditCnt
	}
	return 0
}

func (x *SerPlayerExt) GetIsFireState() bool {
	if x != nil && x.IsFireState != nil {
		return *x.IsFireState
	}
	return false
}

func (x *SerPlayerExt) GetNightRaidBanditCnt() int32 {
	if x != nil && x.NightRaidBanditCnt != nil {
		return *x.NightRaidBanditCnt
	}
	return 0
}

func (x *SerPlayerExt) GetDbTriggerGiftMap() []*DbTriggerGiftMap {
	if x != nil {
		return x.DbTriggerGiftMap
	}
	return nil
}

func (x *SerPlayerExt) GetHitFlyCount() int32 {
	if x != nil && x.HitFlyCount != nil {
		return *x.HitFlyCount
	}
	return 0
}

func (x *SerPlayerExt) GetIsOffOnlineHitFly() bool {
	if x != nil && x.IsOffOnlineHitFly != nil {
		return *x.IsOffOnlineHitFly
	}
	return false
}

func (x *SerPlayerExt) GetIsAdvanceAward() bool {
	if x != nil && x.IsAdvanceAward != nil {
		return *x.IsAdvanceAward
	}
	return false
}

func (x *SerPlayerExt) GetPackId() string {
	if x != nil && x.PackId != nil {
		return *x.PackId
	}
	return ""
}

func (x *SerPlayerExt) GetStoneInfo() *StoneInfo {
	if x != nil {
		return x.StoneInfo
	}
	return nil
}

func (x *SerPlayerExt) GetAtkCityAct() *DbAtkCityAct {
	if x != nil {
		return x.AtkCityAct
	}
	return nil
}

func (x *SerPlayerExt) GetSpecialProp() []*DbSpecialProp {
	if x != nil {
		return x.SpecialProp
	}
	return nil
}

func (x *SerPlayerExt) GetMixtureData() []*TwoInt {
	if x != nil {
		return x.MixtureData
	}
	return nil
}

func (x *SerPlayerExt) GetMilitaryExpenditure() int32 {
	if x != nil && x.MilitaryExpenditure != nil {
		return *x.MilitaryExpenditure
	}
	return 0
}

func (x *SerPlayerExt) GetCheatCode() []int32 {
	if x != nil {
		return x.CheatCode
	}
	return nil
}

func (x *SerPlayerExt) GetBlacklist() []int64 {
	if x != nil {
		return x.Blacklist
	}
	return nil
}

func (x *SerPlayerExt) GetOffLineBuild() []*OffLineBuild {
	if x != nil {
		return x.OffLineBuild
	}
	return nil
}

func (x *SerPlayerExt) GetChatBubble() []int32 {
	if x != nil {
		return x.ChatBubble
	}
	return nil
}

func (x *SerPlayerExt) GetCurChatBubble() int32 {
	if x != nil && x.CurChatBubble != nil {
		return *x.CurChatBubble
	}
	return 0
}

func (x *SerPlayerExt) GetBodyImage() []int32 {
	if x != nil {
		return x.BodyImage
	}
	return nil
}

func (x *SerPlayerExt) GetCurBodyImage() int32 {
	if x != nil && x.CurBodyImage != nil {
		return *x.CurBodyImage
	}
	return 0
}

func (x *SerPlayerExt) GetMedalGoods() []int32 {
	if x != nil {
		return x.MedalGoods
	}
	return nil
}

func (x *SerPlayerExt) GetMedalGoodsRefNum() int32 {
	if x != nil && x.MedalGoodsRefNum != nil {
		return *x.MedalGoodsRefNum
	}
	return 0
}

func (x *SerPlayerExt) GetPeacekeepingForcesNum() int32 {
	if x != nil && x.PeacekeepingForcesNum != nil {
		return *x.PeacekeepingForcesNum
	}
	return 0
}

func (x *SerPlayerExt) GetJGXHLastTime() int32 {
	if x != nil && x.JGXHLastTime != nil {
		return *x.JGXHLastTime
	}
	return 0
}

func (x *SerPlayerExt) GetPlaneChips() []*TwoInt {
	if x != nil {
		return x.PlaneChips
	}
	return nil
}

func (x *SerPlayerExt) GetDbPlane() []*DbWarPlane {
	if x != nil {
		return x.DbPlane
	}
	return nil
}

func (x *SerPlayerExt) GetDbPlayerRebellion() *DbPlayerRebellion {
	if x != nil {
		return x.DbPlayerRebellion
	}
	return nil
}

func (x *SerPlayerExt) GetFunCard() []*FunCard {
	if x != nil {
		return x.FunCard
	}
	return nil
}

func (x *SerPlayerExt) GetDecisiveInfo() *SerDecisiveInfo {
	if x != nil {
		return x.DecisiveInfo
	}
	return nil
}

func (x *SerPlayerExt) GetMentorInfo() *SerMentorInfo {
	if x != nil {
		return x.MentorInfo
	}
	return nil
}

func (x *SerPlayerExt) GetAirshipPersonData() *DbAirshipPersonData {
	if x != nil {
		return x.AirshipPersonData
	}
	return nil
}

func (x *SerPlayerExt) GetSupplyRecord() *SerSupplyRecord {
	if x != nil {
		return x.SupplyRecord
	}
	return nil
}

func (x *SerPlayerExt) GetJewel() []*EquipJewel {
	if x != nil {
		return x.Jewel
	}
	return nil
}

func (x *SerPlayerExt) GetWorldWar() *SerPlayerWorldWar {
	if x != nil {
		return x.WorldWar
	}
	return nil
}

func (x *SerPlayerExt) GetOwnCastleSkin() []int32 {
	if x != nil {
		return x.OwnCastleSkin
	}
	return nil
}

func (x *SerPlayerExt) GetCurCastleSkin() int32 {
	if x != nil && x.CurCastleSkin != nil {
		return *x.CurCastleSkin
	}
	return 0
}

func (x *SerPlayerExt) GetNewYorkWar() *SerPlayerNewYorkWar {
	if x != nil {
		return x.NewYorkWar
	}
	return nil
}

func (x *SerPlayerExt) GetOwnCastleSkinTime() []*TwoInt {
	if x != nil {
		return x.OwnCastleSkinTime
	}
	return nil
}

type SerPlayerNewYorkWar struct {
	MaxAttack            *int64                  `protobuf:"varint,1,opt,name=maxAttack" json:"maxAttack,omitempty"`
	Achievements         []*TwoInt               `protobuf:"bytes,2,rep,name=achievements" json:"achievements,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerPlayerNewYorkWar) Reset() {
	*x = SerPlayerNewYorkWar{}
}

func (x *SerPlayerNewYorkWar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerPlayerNewYorkWar) ProtoMessage() {}

func (x *SerPlayerNewYorkWar) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[57].MessageOf(x)
}

func (m *SerPlayerNewYorkWar) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[57].Methods()
}

// Deprecated: Use SerPlayerNewYorkWar.ProtoReflect.Type instead.
func (*SerPlayerNewYorkWar) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{57}
}

func (x *SerPlayerNewYorkWar) GetMaxAttack() int64 {
	if x != nil && x.MaxAttack != nil {
		return *x.MaxAttack
	}
	return 0
}

func (x *SerPlayerNewYorkWar) GetAchievements() []*TwoInt {
	if x != nil {
		return x.Achievements
	}
	return nil
}

// 玩家世界争霸数据
type SerPlayerWorldWar struct {
	DailyAttack          *int32                  `protobuf:"varint,1,opt,name=dailyAttack" json:"dailyAttack,omitempty"`
	DailyAttackAward     []*TwoInt               `protobuf:"bytes,2,rep,name=dailyAttackAward" json:"dailyAttackAward,omitempty"`
	RestrictTask         []*TwoInt               `protobuf:"bytes,3,rep,name=restrictTask" json:"restrictTask,omitempty"`
	RestrictTaskAward    []*TwoInt               `protobuf:"bytes,4,rep,name=restrictTaskAward" json:"restrictTaskAward,omitempty"`
	WeekIntegral         *int32                  `protobuf:"varint,5,opt,name=weekIntegral" json:"weekIntegral,omitempty"`
	WeekAward            []*TwoInt               `protobuf:"bytes,6,rep,name=weekAward" json:"weekAward,omitempty"`
	SeasonIntegral       *int32                  `protobuf:"varint,7,opt,name=seasonIntegral" json:"seasonIntegral,omitempty"`
	AttackCityAward      []*TwoInt               `protobuf:"bytes,8,rep,name=attackCityAward" json:"attackCityAward,omitempty"`
	SeasonShop           []*TwoInt               `protobuf:"bytes,9,rep,name=seasonShop" json:"seasonShop,omitempty"`
	IntegralSecond       *int32                  `protobuf:"varint,10,opt,name=integralSecond" json:"integralSecond,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerPlayerWorldWar) Reset() {
	*x = SerPlayerWorldWar{}
}

func (x *SerPlayerWorldWar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerPlayerWorldWar) ProtoMessage() {}

func (x *SerPlayerWorldWar) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[58].MessageOf(x)
}

func (m *SerPlayerWorldWar) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[58].Methods()
}

// Deprecated: Use SerPlayerWorldWar.ProtoReflect.Type instead.
func (*SerPlayerWorldWar) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{58}
}

func (x *SerPlayerWorldWar) GetDailyAttack() int32 {
	if x != nil && x.DailyAttack != nil {
		return *x.DailyAttack
	}
	return 0
}

func (x *SerPlayerWorldWar) GetDailyAttackAward() []*TwoInt {
	if x != nil {
		return x.DailyAttackAward
	}
	return nil
}

func (x *SerPlayerWorldWar) GetRestrictTask() []*TwoInt {
	if x != nil {
		return x.RestrictTask
	}
	return nil
}

func (x *SerPlayerWorldWar) GetRestrictTaskAward() []*TwoInt {
	if x != nil {
		return x.RestrictTaskAward
	}
	return nil
}

func (x *SerPlayerWorldWar) GetWeekIntegral() int32 {
	if x != nil && x.WeekIntegral != nil {
		return *x.WeekIntegral
	}
	return 0
}

func (x *SerPlayerWorldWar) GetWeekAward() []*TwoInt {
	if x != nil {
		return x.WeekAward
	}
	return nil
}

func (x *SerPlayerWorldWar) GetSeasonIntegral() int32 {
	if x != nil && x.SeasonIntegral != nil {
		return *x.SeasonIntegral
	}
	return 0
}

func (x *SerPlayerWorldWar) GetAttackCityAward() []*TwoInt {
	if x != nil {
		return x.AttackCityAward
	}
	return nil
}

func (x *SerPlayerWorldWar) GetSeasonShop() []*TwoInt {
	if x != nil {
		return x.SeasonShop
	}
	return nil
}

func (x *SerPlayerWorldWar) GetIntegralSecond() int32 {
	if x != nil && x.IntegralSecond != nil {
		return *x.IntegralSecond
	}
	return 0
}

// 补给记录
type SerSupplyRecord struct {
	StatusMap            []*TwoInt               `protobuf:"bytes,1,rep,name=statusMap" json:"statusMap,omitempty"`
	SuperSupplyStatus    []*TwoInt               `protobuf:"bytes,2,rep,name=superSupplyStatus" json:"superSupplyStatus,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerSupplyRecord) Reset() {
	*x = SerSupplyRecord{}
}

func (x *SerSupplyRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerSupplyRecord) ProtoMessage() {}

func (x *SerSupplyRecord) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[59].MessageOf(x)
}

func (m *SerSupplyRecord) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[59].Methods()
}

// Deprecated: Use SerSupplyRecord.ProtoReflect.Type instead.
func (*SerSupplyRecord) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{59}
}

func (x *SerSupplyRecord) GetStatusMap() []*TwoInt {
	if x != nil {
		return x.StatusMap
	}
	return nil
}

func (x *SerSupplyRecord) GetSuperSupplyStatus() []*TwoInt {
	if x != nil {
		return x.SuperSupplyStatus
	}
	return nil
}

// 决战信息
type SerDecisiveInfo struct {
	Decisive             *bool                   `protobuf:"varint,1,opt,name=decisive" json:"decisive,omitempty"`
	FlyRole              *int64                  `protobuf:"varint,2,opt,name=flyRole" json:"flyRole,omitempty"`
	FlyTime              *int32                  `protobuf:"varint,3,opt,name=flyTime" json:"flyTime,omitempty"`
	PropTime             *int32                  `protobuf:"varint,4,opt,name=propTime" json:"propTime,omitempty"`
	PropStatus           *bool                   `protobuf:"varint,5,opt,name=propStatus" json:"propStatus,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerDecisiveInfo) Reset() {
	*x = SerDecisiveInfo{}
}

func (x *SerDecisiveInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerDecisiveInfo) ProtoMessage() {}

func (x *SerDecisiveInfo) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[60].MessageOf(x)
}

func (m *SerDecisiveInfo) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[60].Methods()
}

// Deprecated: Use SerDecisiveInfo.ProtoReflect.Type instead.
func (*SerDecisiveInfo) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{60}
}

func (x *SerDecisiveInfo) GetDecisive() bool {
	if x != nil && x.Decisive != nil {
		return *x.Decisive
	}
	return false
}

func (x *SerDecisiveInfo) GetFlyRole() int64 {
	if x != nil && x.FlyRole != nil {
		return *x.FlyRole
	}
	return 0
}

func (x *SerDecisiveInfo) GetFlyTime() int32 {
	if x != nil && x.FlyTime != nil {
		return *x.FlyTime
	}
	return 0
}

func (x *SerDecisiveInfo) GetPropTime() int32 {
	if x != nil && x.PropTime != nil {
		return *x.PropTime
	}
	return 0
}

func (x *SerDecisiveInfo) GetPropStatus() bool {
	if x != nil && x.PropStatus != nil {
		return *x.PropStatus
	}
	return false
}

// 教官的序列化
type SerMentorInfo struct {
	Mentors              []*Mentor               `protobuf:"bytes,1,rep,name=mentors" json:"mentors,omitempty"`
	Equips               []*MentorEquip          `protobuf:"bytes,2,rep,name=equips" json:"equips,omitempty"`
	Skills               []*MentorSkill          `protobuf:"bytes,3,rep,name=skills" json:"skills,omitempty"`
	Betters              []*MentorBetterEquip    `protobuf:"bytes,4,rep,name=betters" json:"betters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerMentorInfo) Reset() {
	*x = SerMentorInfo{}
}

func (x *SerMentorInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerMentorInfo) ProtoMessage() {}

func (x *SerMentorInfo) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[61].MessageOf(x)
}

func (m *SerMentorInfo) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[61].Methods()
}

// Deprecated: Use SerMentorInfo.ProtoReflect.Type instead.
func (*SerMentorInfo) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{61}
}

func (x *SerMentorInfo) GetMentors() []*Mentor {
	if x != nil {
		return x.Mentors
	}
	return nil
}

func (x *SerMentorInfo) GetEquips() []*MentorEquip {
	if x != nil {
		return x.Equips
	}
	return nil
}

func (x *SerMentorInfo) GetSkills() []*MentorSkill {
	if x != nil {
		return x.Skills
	}
	return nil
}

func (x *SerMentorInfo) GetBetters() []*MentorBetterEquip {
	if x != nil {
		return x.Betters
	}
	return nil
}

// 可穿戴高战力装备
type MentorBetterEquip struct {
	MentorType           *int32                  `protobuf:"varint,1,opt,name=mentorType" json:"mentorType,omitempty"`
	EquipInfo            []*TwoInt               `protobuf:"bytes,2,rep,name=equipInfo" json:"equipInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *MentorBetterEquip) Reset() {
	*x = MentorBetterEquip{}
}

func (x *MentorBetterEquip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MentorBetterEquip) ProtoMessage() {}

func (x *MentorBetterEquip) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[62].MessageOf(x)
}

func (m *MentorBetterEquip) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[62].Methods()
}

// Deprecated: Use MentorBetterEquip.ProtoReflect.Type instead.
func (*MentorBetterEquip) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{62}
}

func (x *MentorBetterEquip) GetMentorType() int32 {
	if x != nil && x.MentorType != nil {
		return *x.MentorType
	}
	return 0
}

func (x *MentorBetterEquip) GetEquipInfo() []*TwoInt {
	if x != nil {
		return x.EquipInfo
	}
	return nil
}

// 战机的序列化
type DbWarPlane struct {
	HeroId               *int32                  `protobuf:"varint,1,req,name=heroId" json:"heroId,omitempty"`
	Type                 *int32                  `protobuf:"varint,2,req,name=type" json:"type,omitempty"`
	PlaneId              *int32                  `protobuf:"varint,3,req,name=planeId" json:"planeId,omitempty"`
	Level                *int32                  `protobuf:"varint,4,req,name=level" json:"level,omitempty"`
	Exp                  *int32                  `protobuf:"varint,5,req,name=exp" json:"exp,omitempty"`
	Pos                  *int32                  `protobuf:"varint,6,req,name=pos" json:"pos,omitempty"`
	State                *int32                  `protobuf:"varint,7,req,name=state" json:"state,omitempty"`
	BattlePos            *int32                  `protobuf:"varint,8,opt,name=battlePos" json:"battlePos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *DbWarPlane) Reset() {
	*x = DbWarPlane{}
}

func (x *DbWarPlane) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbWarPlane) ProtoMessage() {}

func (x *DbWarPlane) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[63].MessageOf(x)
}

func (m *DbWarPlane) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[63].Methods()
}

// Deprecated: Use DbWarPlane.ProtoReflect.Type instead.
func (*DbWarPlane) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{63}
}

func (x *DbWarPlane) GetHeroId() int32 {
	if x != nil && x.HeroId != nil {
		return *x.HeroId
	}
	return 0
}

func (x *DbWarPlane) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *DbWarPlane) GetPlaneId() int32 {
	if x != nil && x.PlaneId != nil {
		return *x.PlaneId
	}
	return 0
}

func (x *DbWarPlane) GetLevel() int32 {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return 0
}

func (x *DbWarPlane) GetExp() int32 {
	if x != nil && x.Exp != nil {
		return *x.Exp
	}
	return 0
}

func (x *DbWarPlane) GetPos() int32 {
	if x != nil && x.Pos != nil {
		return *x.Pos
	}
	return 0
}

func (x *DbWarPlane) GetState() int32 {
	if x != nil && x.State != nil {
		return *x.State
	}
	return 0
}

func (x *DbWarPlane) GetBattlePos() int32 {
	if x != nil && x.BattlePos != nil {
		return *x.BattlePos
	}
	return 0
}

type DbDay7Act struct {
	RecvAwardIds         []int32                 `protobuf:"varint,1,rep,name=recvAwardIds" json:"recvAwardIds,omitempty"`
	Status               []*TwoInt               `protobuf:"bytes,2,rep,name=status" json:"status,omitempty"`
	TankTypes            []*StrInt               `protobuf:"bytes,3,rep,name=tankTypes" json:"tankTypes,omitempty"`
	TypeCnt              []*DbDay7ActStatus      `protobuf:"bytes,4,rep,name=typeCnt" json:"typeCnt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *DbDay7Act) Reset() {
	*x = DbDay7Act{}
}

func (x *DbDay7Act) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbDay7Act) ProtoMessage() {}

func (x *DbDay7Act) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[64].MessageOf(x)
}

func (m *DbDay7Act) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[64].Methods()
}

// Deprecated: Use DbDay7Act.ProtoReflect.Type instead.
func (*DbDay7Act) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{64}
}

func (x *DbDay7Act) GetRecvAwardIds() []int32 {
	if x != nil {
		return x.RecvAwardIds
	}
	return nil
}

func (x *DbDay7Act) GetStatus() []*TwoInt {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *DbDay7Act) GetTankTypes() []*StrInt {
	if x != nil {
		return x.TankTypes
	}
	return nil
}

func (x *DbDay7Act) GetTypeCnt() []*DbDay7ActStatus {
	if x != nil {
		return x.TypeCnt
	}
	return nil
}

type DbDay7ActStatus struct {
	Key                  *int32                  `protobuf:"varint,1,opt,name=key" json:"key,omitempty"`
	Status               []*TwoInt               `protobuf:"bytes,2,rep,name=status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *DbDay7ActStatus) Reset() {
	*x = DbDay7ActStatus{}
}

func (x *DbDay7ActStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbDay7ActStatus) ProtoMessage() {}

func (x *DbDay7ActStatus) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[65].MessageOf(x)
}

func (m *DbDay7ActStatus) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[65].Methods()
}

// Deprecated: Use DbDay7ActStatus.ProtoReflect.Type instead.
func (*DbDay7ActStatus) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{65}
}

func (x *DbDay7ActStatus) GetKey() int32 {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return 0
}

func (x *DbDay7ActStatus) GetStatus() []*TwoInt {
	if x != nil {
		return x.Status
	}
	return nil
}

type DbAtkCityAct struct {
	TankTypes            []*StrInt               `protobuf:"bytes,1,rep,name=tankTypes" json:"tankTypes,omitempty"`
	TypeCnt              []*DbDay7ActStatus      `protobuf:"bytes,2,rep,name=typeCnt" json:"typeCnt,omitempty"`
	Status               []*TwoInt               `protobuf:"bytes,3,rep,name=status" json:"status,omitempty"`
	StatusCnt            []*TwoInt               `protobuf:"bytes,4,rep,name=statusCnt" json:"statusCnt,omitempty"`
	CanRecvKeyId         []int32                 `protobuf:"varint,5,rep,name=canRecvKeyId" json:"canRecvKeyId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *DbAtkCityAct) Reset() {
	*x = DbAtkCityAct{}
}

func (x *DbAtkCityAct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbAtkCityAct) ProtoMessage() {}

func (x *DbAtkCityAct) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[66].MessageOf(x)
}

func (m *DbAtkCityAct) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[66].Methods()
}

// Deprecated: Use DbAtkCityAct.ProtoReflect.Type instead.
func (*DbAtkCityAct) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{66}
}

func (x *DbAtkCityAct) GetTankTypes() []*StrInt {
	if x != nil {
		return x.TankTypes
	}
	return nil
}

func (x *DbAtkCityAct) GetTypeCnt() []*DbDay7ActStatus {
	if x != nil {
		return x.TypeCnt
	}
	return nil
}

func (x *DbAtkCityAct) GetStatus() []*TwoInt {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *DbAtkCityAct) GetStatusCnt() []*TwoInt {
	if x != nil {
		return x.StatusCnt
	}
	return nil
}

func (x *DbAtkCityAct) GetCanRecvKeyId() []int32 {
	if x != nil {
		return x.CanRecvKeyId
	}
	return nil
}

// 活动
type SerActivity struct {
	Activity             []*DbActivity           `protobuf:"bytes,1,rep,name=activity" json:"activity,omitempty"`
	ActBlackhawk         *ActBlackhawk           `protobuf:"bytes,2,opt,name=actBlackhawk" json:"actBlackhawk,omitempty"`
	ActBarton            []*ActBarton            `protobuf:"bytes,3,rep,name=actBarton" json:"actBarton,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerActivity) Reset() {
	*x = SerActivity{}
}

func (x *SerActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerActivity) ProtoMessage() {}

func (x *SerActivity) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[67].MessageOf(x)
}

func (m *SerActivity) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[67].Methods()
}

// Deprecated: Use SerActivity.ProtoReflect.Type instead.
func (*SerActivity) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{67}
}

func (x *SerActivity) GetActivity() []*DbActivity {
	if x != nil {
		return x.Activity
	}
	return nil
}

func (x *SerActivity) GetActBlackhawk() *ActBlackhawk {
	if x != nil {
		return x.ActBlackhawk
	}
	return nil
}

func (x *SerActivity) GetActBarton() []*ActBarton {
	if x != nil {
		return x.ActBarton
	}
	return nil
}

type DbActivity struct {
	ActivityId           *int32                  `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	Status               []*IntLong              `protobuf:"bytes,2,rep,name=status" json:"status,omitempty"`
	TowInt               []*TwoInt               `protobuf:"bytes,3,rep,name=towInt" json:"towInt,omitempty"`
	BeginTime            *int32                  `protobuf:"varint,4,opt,name=beginTime" json:"beginTime,omitempty"`
	Open                 *int32                  `protobuf:"varint,5,opt,name=open" json:"open,omitempty"`
	EndTime              *int32                  `protobuf:"varint,6,opt,name=endTime" json:"endTime,omitempty"`
	Prop                 []*TwoInt               `protobuf:"bytes,7,rep,name=prop" json:"prop,omitempty"`
	Save                 []*TwoInt               `protobuf:"bytes,8,rep,name=save" json:"save,omitempty"`
	ActivityType         *int32                  `protobuf:"varint,9,opt,name=activityType" json:"activityType,omitempty"`
	Turnplat             *DbActTurnplat          `protobuf:"bytes,10,opt,name=turnplat" json:"turnplat,omitempty"`
	EquipTurnplat        *DbEquipTurnplat        `protobuf:"bytes,11,opt,name=equipTurnplat" json:"equipTurnplat,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *DbActivity) Reset() {
	*x = DbActivity{}
}

func (x *DbActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbActivity) ProtoMessage() {}

func (x *DbActivity) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[68].MessageOf(x)
}

func (m *DbActivity) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[68].Methods()
}

// Deprecated: Use DbActivity.ProtoReflect.Type instead.
func (*DbActivity) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{68}
}

func (x *DbActivity) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *DbActivity) GetStatus() []*IntLong {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *DbActivity) GetTowInt() []*TwoInt {
	if x != nil {
		return x.TowInt
	}
	return nil
}

func (x *DbActivity) GetBeginTime() int32 {
	if x != nil && x.BeginTime != nil {
		return *x.BeginTime
	}
	return 0
}

func (x *DbActivity) GetOpen() int32 {
	if x != nil && x.Open != nil {
		return *x.Open
	}
	return 0
}

func (x *DbActivity) GetEndTime() int32 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

func (x *DbActivity) GetProp() []*TwoInt {
	if x != nil {
		return x.Prop
	}
	return nil
}

func (x *DbActivity) GetSave() []*TwoInt {
	if x != nil {
		return x.Save
	}
	return nil
}

func (x *DbActivity) GetActivityType() int32 {
	if x != nil && x.ActivityType != nil {
		return *x.ActivityType
	}
	return 0
}

func (x *DbActivity) GetTurnplat() *DbActTurnplat {
	if x != nil {
		return x.Turnplat
	}
	return nil
}

func (x *DbActivity) GetEquipTurnplat() *DbEquipTurnplat {
	if x != nil {
		return x.EquipTurnplat
	}
	return nil
}

// 聊天信息的序列化
type SerChat struct {
	ChatHistory          []*DbChatHistory        `protobuf:"bytes,1,rep,name=chatHistory" json:"chatHistory,omitempty"`
	ChatDialog           []*DbChatDialogByLord   `protobuf:"bytes,2,rep,name=chatDialog" json:"chatDialog,omitempty"`
	WorldRoleChat        []*Chat                 `protobuf:"bytes,3,rep,name=worldRoleChat" json:"worldRoleChat,omitempty"`
	RedPacket            []*RedPacket            `protobuf:"bytes,4,rep,name=redPacket" json:"redPacket,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerChat) Reset() {
	*x = SerChat{}
}

func (x *SerChat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerChat) ProtoMessage() {}

func (x *SerChat) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[69].MessageOf(x)
}

func (m *SerChat) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[69].Methods()
}

// Deprecated: Use SerChat.ProtoReflect.Type instead.
func (*SerChat) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{69}
}

func (x *SerChat) GetChatHistory() []*DbChatHistory {
	if x != nil {
		return x.ChatHistory
	}
	return nil
}

func (x *SerChat) GetChatDialog() []*DbChatDialogByLord {
	if x != nil {
		return x.ChatDialog
	}
	return nil
}

func (x *SerChat) GetWorldRoleChat() []*Chat {
	if x != nil {
		return x.WorldRoleChat
	}
	return nil
}

func (x *SerChat) GetRedPacket() []*RedPacket {
	if x != nil {
		return x.RedPacket
	}
	return nil
}

// 触发式礼包序列化
type SerTriggerGift struct {
	GiftId               *int32                  `protobuf:"varint,1,opt,name=giftId" json:"giftId,omitempty"`
	BeginTime            *int32                  `protobuf:"varint,2,opt,name=beginTime" json:"beginTime,omitempty"`
	EndTime              *int32                  `protobuf:"varint,3,opt,name=endTime" json:"endTime,omitempty"`
	Count                *int32                  `protobuf:"varint,4,opt,name=count" json:"count,omitempty"`
	State                *int32                  `protobuf:"varint,5,opt,name=state" json:"state,omitempty"`
	Status               *int32                  `protobuf:"varint,6,opt,name=status" json:"status,omitempty"`
	KeyId                *int32                  `protobuf:"varint,7,opt,name=keyId" json:"keyId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerTriggerGift) Reset() {
	*x = SerTriggerGift{}
}

func (x *SerTriggerGift) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerTriggerGift) ProtoMessage() {}

func (x *SerTriggerGift) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[70].MessageOf(x)
}

func (m *SerTriggerGift) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[70].Methods()
}

// Deprecated: Use SerTriggerGift.ProtoReflect.Type instead.
func (*SerTriggerGift) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{70}
}

func (x *SerTriggerGift) GetGiftId() int32 {
	if x != nil && x.GiftId != nil {
		return *x.GiftId
	}
	return 0
}

func (x *SerTriggerGift) GetBeginTime() int32 {
	if x != nil && x.BeginTime != nil {
		return *x.BeginTime
	}
	return 0
}

func (x *SerTriggerGift) GetEndTime() int32 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

func (x *SerTriggerGift) GetCount() int32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *SerTriggerGift) GetState() int32 {
	if x != nil && x.State != nil {
		return *x.State
	}
	return 0
}

func (x *SerTriggerGift) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *SerTriggerGift) GetKeyId() int32 {
	if x != nil && x.KeyId != nil {
		return *x.KeyId
	}
	return 0
}

type DbTriggerGiftMap struct {
	Key                  *int32                  `protobuf:"varint,1,opt,name=key" json:"key,omitempty"`
	SerTriggerGift       []*SerTriggerGift       `protobuf:"bytes,2,rep,name=serTriggerGift" json:"serTriggerGift,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *DbTriggerGiftMap) Reset() {
	*x = DbTriggerGiftMap{}
}

func (x *DbTriggerGiftMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbTriggerGiftMap) ProtoMessage() {}

func (x *DbTriggerGiftMap) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[71].MessageOf(x)
}

func (m *DbTriggerGiftMap) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[71].Methods()
}

// Deprecated: Use DbTriggerGiftMap.ProtoReflect.Type instead.
func (*DbTriggerGiftMap) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{71}
}

func (x *DbTriggerGiftMap) GetKey() int32 {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return 0
}

func (x *DbTriggerGiftMap) GetSerTriggerGift() []*SerTriggerGift {
	if x != nil {
		return x.SerTriggerGift
	}
	return nil
}

type DbCia struct {
	InteractionCnt       *int32                  `protobuf:"varint,1,req,name=interactionCnt" json:"interactionCnt,omitempty"`
	LastTime             *int32                  `protobuf:"varint,2,req,name=lastTime" json:"lastTime,omitempty"`
	FemaleAgent          []*FemaleAgent          `protobuf:"bytes,3,rep,name=femaleAgent" json:"femaleAgent,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *DbCia) Reset() {
	*x = DbCia{}
}

func (x *DbCia) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbCia) ProtoMessage() {}

func (x *DbCia) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[72].MessageOf(x)
}

func (m *DbCia) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[72].Methods()
}

// Deprecated: Use DbCia.ProtoReflect.Type instead.
func (*DbCia) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{72}
}

func (x *DbCia) GetInteractionCnt() int32 {
	if x != nil && x.InteractionCnt != nil {
		return *x.InteractionCnt
	}
	return 0
}

func (x *DbCia) GetLastTime() int32 {
	if x != nil && x.LastTime != nil {
		return *x.LastTime
	}
	return 0
}

func (x *DbCia) GetFemaleAgent() []*FemaleAgent {
	if x != nil {
		return x.FemaleAgent
	}
	return nil
}

// 玩家身上的匪军叛乱的信息
type DbPlayerRebellion struct {
	Buffs                []*RebelBuff            `protobuf:"bytes,1,rep,name=buffs" json:"buffs,omitempty"`
	Credit               *int32                  `protobuf:"varint,2,opt,name=credit" json:"credit,omitempty"`
	IsDead               *bool                   `protobuf:"varint,3,opt,name=isDead" json:"isDead,omitempty"`
	Round                *int32                  `protobuf:"varint,4,opt,name=round" json:"round,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *DbPlayerRebellion) Reset() {
	*x = DbPlayerRebellion{}
}

func (x *DbPlayerRebellion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbPlayerRebellion) ProtoMessage() {}

func (x *DbPlayerRebellion) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[73].MessageOf(x)
}

func (m *DbPlayerRebellion) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[73].Methods()
}

// Deprecated: Use DbPlayerRebellion.ProtoReflect.Type instead.
func (*DbPlayerRebellion) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{73}
}

func (x *DbPlayerRebellion) GetBuffs() []*RebelBuff {
	if x != nil {
		return x.Buffs
	}
	return nil
}

func (x *DbPlayerRebellion) GetCredit() int32 {
	if x != nil && x.Credit != nil {
		return *x.Credit
	}
	return 0
}

func (x *DbPlayerRebellion) GetIsDead() bool {
	if x != nil && x.IsDead != nil {
		return *x.IsDead
	}
	return false
}

func (x *DbPlayerRebellion) GetRound() int32 {
	if x != nil && x.Round != nil {
		return *x.Round
	}
	return 0
}

// 飞艇个人数据
type DbAirshipPersonData struct {
	BelongAwardCnt       *int32                  `protobuf:"varint,1,opt,name=belongAwardCnt" json:"belongAwardCnt,omitempty"`
	HelpAwardCnt         *int32                  `protobuf:"varint,2,opt,name=helpAwardCnt" json:"helpAwardCnt,omitempty"`
	LastRefreshDate      *int32                  `protobuf:"varint,3,opt,name=lastRefreshDate" json:"lastRefreshDate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *DbAirshipPersonData) Reset() {
	*x = DbAirshipPersonData{}
}

func (x *DbAirshipPersonData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbAirshipPersonData) ProtoMessage() {}

func (x *DbAirshipPersonData) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[74].MessageOf(x)
}

func (m *DbAirshipPersonData) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[74].Methods()
}

// Deprecated: Use DbAirshipPersonData.ProtoReflect.Type instead.
func (*DbAirshipPersonData) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{74}
}

func (x *DbAirshipPersonData) GetBelongAwardCnt() int32 {
	if x != nil && x.BelongAwardCnt != nil {
		return *x.BelongAwardCnt
	}
	return 0
}

func (x *DbAirshipPersonData) GetHelpAwardCnt() int32 {
	if x != nil && x.HelpAwardCnt != nil {
		return *x.HelpAwardCnt
	}
	return 0
}

func (x *DbAirshipPersonData) GetLastRefreshDate() int32 {
	if x != nil && x.LastRefreshDate != nil {
		return *x.LastRefreshDate
	}
	return 0
}

// 对应 p_cross_map, city ,bandit,mine 字段
type SerMapEntityPb struct {
	MapEntity            []*MapEntityPb          `protobuf:"bytes,1,rep,name=mapEntity" json:"mapEntity,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerMapEntityPb) Reset() {
	*x = SerMapEntityPb{}
}

func (x *SerMapEntityPb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerMapEntityPb) ProtoMessage() {}

func (x *SerMapEntityPb) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[75].MessageOf(x)
}

func (m *SerMapEntityPb) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[75].Methods()
}

// Deprecated: Use SerMapEntityPb.ProtoReflect.Type instead.
func (*SerMapEntityPb) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{75}
}

func (x *SerMapEntityPb) GetMapEntity() []*MapEntityPb {
	if x != nil {
		return x.MapEntity
	}
	return nil
}

// 对应 p_cross_map 的playerArmy 字段
type SerPlayerArmyPb struct {
	Army                 []*Army                 `protobuf:"bytes,1,rep,name=army" json:"army,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerPlayerArmyPb) Reset() {
	*x = SerPlayerArmyPb{}
}

func (x *SerPlayerArmyPb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerPlayerArmyPb) ProtoMessage() {}

func (x *SerPlayerArmyPb) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[76].MessageOf(x)
}

func (m *SerPlayerArmyPb) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[76].Methods()
}

// Deprecated: Use SerPlayerArmyPb.ProtoReflect.Type instead.
func (*SerPlayerArmyPb) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{76}
}

func (x *SerPlayerArmyPb) GetArmy() []*Army {
	if x != nil {
		return x.Army
	}
	return nil
}

// 对应 p_cross_map 的mapInfo 字段
type SerMapBattlePb struct {
	Battle               []*BattlePO             `protobuf:"bytes,1,rep,name=battle" json:"battle,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerMapBattlePb) Reset() {
	*x = SerMapBattlePb{}
}

func (x *SerMapBattlePb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerMapBattlePb) ProtoMessage() {}

func (x *SerMapBattlePb) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[77].MessageOf(x)
}

func (m *SerMapBattlePb) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[77].Methods()
}

// Deprecated: Use SerMapBattlePb.ProtoReflect.Type instead.
func (*SerMapBattlePb) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{77}
}

func (x *SerMapBattlePb) GetBattle() []*BattlePO {
	if x != nil {
		return x.Battle
	}
	return nil
}

// 对应 p_cross_map 的mapInfo 字段
type SerMapInfoPb struct {
	WarPlanInfo          *WorldWarPlanInfoPb     `protobuf:"bytes,1,opt,name=warPlanInfo" json:"warPlanInfo,omitempty"`
	MapOpenType          *int32                  `protobuf:"varint,2,opt,name=mapOpenType" json:"mapOpenType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerMapInfoPb) Reset() {
	*x = SerMapInfoPb{}
}

func (x *SerMapInfoPb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerMapInfoPb) ProtoMessage() {}

func (x *SerMapInfoPb) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[78].MessageOf(x)
}

func (m *SerMapInfoPb) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[78].Methods()
}

// Deprecated: Use SerMapInfoPb.ProtoReflect.Type instead.
func (*SerMapInfoPb) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{78}
}

func (x *SerMapInfoPb) GetWarPlanInfo() *WorldWarPlanInfoPb {
	if x != nil {
		return x.WarPlanInfo
	}
	return nil
}

func (x *SerMapInfoPb) GetMapOpenType() int32 {
	if x != nil && x.MapOpenType != nil {
		return *x.MapOpenType
	}
	return 0
}

//对应 p_cross_map 的 mapExt1 ,扩展使用
type SerMapExt1Pb struct {
	Airship              []*Airship              `protobuf:"bytes,1,rep,name=airship" json:"airship,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerMapExt1Pb) Reset() {
	*x = SerMapExt1Pb{}
}

func (x *SerMapExt1Pb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerMapExt1Pb) ProtoMessage() {}

func (x *SerMapExt1Pb) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[79].MessageOf(x)
}

func (m *SerMapExt1Pb) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[79].Methods()
}

// Deprecated: Use SerMapExt1Pb.ProtoReflect.Type instead.
func (*SerMapExt1Pb) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{79}
}

func (x *SerMapExt1Pb) GetAirship() []*Airship {
	if x != nil {
		return x.Airship
	}
	return nil
}

// 序列化签到信息
type SerSignInInfo struct {
	SignInInfo           []*SignInInfo           `protobuf:"bytes,1,rep,name=signInInfo" json:"signInInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerSignInInfo) Reset() {
	*x = SerSignInInfo{}
}

func (x *SerSignInInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerSignInInfo) ProtoMessage() {}

func (x *SerSignInInfo) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[80].MessageOf(x)
}

func (m *SerSignInInfo) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[80].Methods()
}

// Deprecated: Use SerSignInInfo.ProtoReflect.Type instead.
func (*SerSignInInfo) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{80}
}

func (x *SerSignInInfo) GetSignInInfo() []*SignInInfo {
	if x != nil {
		return x.SignInInfo
	}
	return nil
}

// 跨服个人信息
type SerCrossPersonalData struct {
	KillNum              *int32                  `protobuf:"varint,1,opt,name=killNum" json:"killNum,omitempty"`
	GainTrophyId         []int32                 `protobuf:"varint,2,rep,name=gainTrophyId" json:"gainTrophyId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerCrossPersonalData) Reset() {
	*x = SerCrossPersonalData{}
}

func (x *SerCrossPersonalData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerCrossPersonalData) ProtoMessage() {}

func (x *SerCrossPersonalData) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[81].MessageOf(x)
}

func (m *SerCrossPersonalData) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[81].Methods()
}

// Deprecated: Use SerCrossPersonalData.ProtoReflect.Type instead.
func (*SerCrossPersonalData) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{81}
}

func (x *SerCrossPersonalData) GetKillNum() int32 {
	if x != nil && x.KillNum != nil {
		return *x.KillNum
	}
	return 0
}

func (x *SerCrossPersonalData) GetGainTrophyId() []int32 {
	if x != nil {
		return x.GainTrophyId
	}
	return nil
}

// 所有堡垒信息(跨服数据保存)
type SerCrossFort struct {
	Fort                 []*DbFortress           `protobuf:"bytes,1,rep,name=fort" json:"fort,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerCrossFort) Reset() {
	*x = SerCrossFort{}
}

func (x *SerCrossFort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerCrossFort) ProtoMessage() {}

func (x *SerCrossFort) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[82].MessageOf(x)
}

func (m *SerCrossFort) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[82].Methods()
}

// Deprecated: Use SerCrossFort.ProtoReflect.Type instead.
func (*SerCrossFort) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{82}
}

func (x *SerCrossFort) GetFort() []*DbFortress {
	if x != nil {
		return x.Fort
	}
	return nil
}

// 单个堡垒信息
type DbFortress struct {
	Id                   *int32                  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Type                 *int32                  `protobuf:"varint,2,opt,name=type" json:"type,omitempty"`
	Camp                 *int32                  `protobuf:"varint,3,opt,name=camp" json:"camp,omitempty"`
	NpcForce             []*Force                `protobuf:"bytes,4,rep,name=npcForce" json:"npcForce,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *DbFortress) Reset() {
	*x = DbFortress{}
}

func (x *DbFortress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbFortress) ProtoMessage() {}

func (x *DbFortress) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[83].MessageOf(x)
}

func (m *DbFortress) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[83].Methods()
}

// Deprecated: Use DbFortress.ProtoReflect.Type instead.
func (*DbFortress) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{83}
}

func (x *DbFortress) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *DbFortress) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *DbFortress) GetCamp() int32 {
	if x != nil && x.Camp != nil {
		return *x.Camp
	}
	return 0
}

func (x *DbFortress) GetNpcForce() []*Force {
	if x != nil {
		return x.NpcForce
	}
	return nil
}

// 跨服排行(跨服数据保存)
type SerCrossRank struct {
	CampRank             []*CrossRankItem        `protobuf:"bytes,1,rep,name=campRank" json:"campRank,omitempty"`
	PersonalRank         []*CrossRankItem        `protobuf:"bytes,2,rep,name=personalRank" json:"personalRank,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerCrossRank) Reset() {
	*x = SerCrossRank{}
}

func (x *SerCrossRank) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerCrossRank) ProtoMessage() {}

func (x *SerCrossRank) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[84].MessageOf(x)
}

func (m *SerCrossRank) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[84].Methods()
}

// Deprecated: Use SerCrossRank.ProtoReflect.Type instead.
func (*SerCrossRank) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{84}
}

func (x *SerCrossRank) GetCampRank() []*CrossRankItem {
	if x != nil {
		return x.CampRank
	}
	return nil
}

func (x *SerCrossRank) GetPersonalRank() []*CrossRankItem {
	if x != nil {
		return x.PersonalRank
	}
	return nil
}

// 跨服玩家个人lord模块数据
type SerCrossPlayerLord struct {
	LordPb               *CrossLordPb            `protobuf:"bytes,1,opt,name=lordPb" json:"lordPb,omitempty"`
	MainServerId         *int32                  `protobuf:"varint,2,opt,name=mainServerId" json:"mainServerId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerCrossPlayerLord) Reset() {
	*x = SerCrossPlayerLord{}
}

func (x *SerCrossPlayerLord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerCrossPlayerLord) ProtoMessage() {}

func (x *SerCrossPlayerLord) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[85].MessageOf(x)
}

func (m *SerCrossPlayerLord) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[85].Methods()
}

// Deprecated: Use SerCrossPlayerLord.ProtoReflect.Type instead.
func (*SerCrossPlayerLord) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{85}
}

func (x *SerCrossPlayerLord) GetLordPb() *CrossLordPb {
	if x != nil {
		return x.LordPb
	}
	return nil
}

func (x *SerCrossPlayerLord) GetMainServerId() int32 {
	if x != nil && x.MainServerId != nil {
		return *x.MainServerId
	}
	return 0
}

// 跨服玩家个人War模块数据
type SerCrossPlayerWar struct {
	KillNum              *int32                  `protobuf:"varint,1,opt,name=killNum" json:"killNum,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerCrossPlayerWar) Reset() {
	*x = SerCrossPlayerWar{}
}

func (x *SerCrossPlayerWar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerCrossPlayerWar) ProtoMessage() {}

func (x *SerCrossPlayerWar) ProtoReflect() protoreflect.Message {
	return file_Serialize_proto_msgTypes[86].MessageOf(x)
}

func (m *SerCrossPlayerWar) XXX_Methods() *protoiface.Methods {
	return file_Serialize_proto_msgTypes[86].Methods()
}

// Deprecated: Use SerCrossPlayerWar.ProtoReflect.Type instead.
func (*SerCrossPlayerWar) Descriptor() ([]byte, []int) {
	return file_Serialize_proto_rawDescGZIP(), []int{86}
}

func (x *SerCrossPlayerWar) GetKillNum() int32 {
	if x != nil && x.KillNum != nil {
		return *x.KillNum
	}
	return 0
}

var File_Serialize_proto protoreflect.FileDescriptor

var file_Serialize_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x26, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x0a, 0x70, 0x75,
	0x73, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07,
	0x2e, 0x53, 0x74, 0x72, 0x49, 0x6e, 0x74, 0x22, 0x33, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x48, 0x65,
	0x72, 0x6f, 0x12, 0x13, 0x0a, 0x04, 0x68, 0x65, 0x72, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x05, 0x2e, 0x48, 0x65, 0x72, 0x6f, 0x12, 0x13, 0x0a, 0x03, 0x63, 0x69, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x44, 0x62, 0x43, 0x69, 0x61, 0x22, 0x21, 0x0a, 0x08,
	0x53, 0x65, 0x72, 0x45, 0x71, 0x75, 0x69, 0x70, 0x12, 0x15, 0x0a, 0x05, 0x65, 0x71, 0x75, 0x69,
	0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x45, 0x71, 0x75, 0x69, 0x70, 0x22,
	0x21, 0x0a, 0x08, 0x53, 0x65, 0x72, 0x4d, 0x65, 0x64, 0x61, 0x6c, 0x12, 0x15, 0x0a, 0x05, 0x6d,
	0x65, 0x64, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x4d, 0x65, 0x64,
	0x61, 0x6c, 0x22, 0x1e, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x12, 0x13, 0x0a,
	0x04, 0x70, 0x72, 0x6f, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x50, 0x72,
	0x6f, 0x70, 0x22, 0x2a, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x51, 0x75,
	0x65, 0x12, 0x1b, 0x0a, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x51, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x51, 0x75, 0x65, 0x22, 0x25,
	0x0a, 0x0b, 0x53, 0x65, 0x72, 0x45, 0x71, 0x75, 0x69, 0x70, 0x51, 0x75, 0x65, 0x12, 0x16, 0x0a,
	0x03, 0x71, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x45, 0x71, 0x75,
	0x69, 0x70, 0x51, 0x75, 0x65, 0x22, 0xbd, 0x01, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x54, 0x61, 0x73,
	0x6b, 0x12, 0x18, 0x0a, 0x09, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x18, 0x0a, 0x09, 0x64,
	0x61, 0x79, 0x69, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x17, 0x0a, 0x08, 0x6c, 0x69, 0x76, 0x65, 0x54, 0x61, 0x73,
	0x6b, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x18,
	0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x05, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x1d, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x53, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x74, 0x61, 0x73, 0x6b, 0x12, 0x12, 0x0a, 0x0a, 0x64, 0x61, 0x69, 0x6c, 0x79,
	0x49, 0x73, 0x47, 0x65, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x05, 0x12, 0x18, 0x0a, 0x10, 0x64,
	0x61, 0x69, 0x6c, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x76, 0x65, 0x6e, 0x73, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x22, 0x24, 0x0a, 0x09, 0x53, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x62,
	0x61, 0x74, 0x12, 0x17, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x07, 0x2e, 0x43, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x22, 0x91, 0x01, 0x0a, 0x0b,
	0x53, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x46, 0x62, 0x12, 0x1b, 0x0a, 0x08, 0x63,
	0x6f, 0x6d, 0x62, 0x61, 0x74, 0x46, 0x62, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x43, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x46, 0x42, 0x12, 0x21, 0x0a, 0x0b, 0x73, 0x74, 0x6f, 0x6e,
	0x65, 0x43, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x53, 0x74, 0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x12, 0x21, 0x0a, 0x0b, 0x70,
	0x69, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x50, 0x69, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x12, 0x1f,
	0x0a, 0x0a, 0x6d, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x22,
	0x0d, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x1e,
	0x0a, 0x07, 0x53, 0x65, 0x72, 0x4d, 0x61, 0x69, 0x6c, 0x12, 0x13, 0x0a, 0x04, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x22, 0x24,
	0x0a, 0x09, 0x53, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x17, 0x0a, 0x06, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x22, 0x1e, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x41, 0x72, 0x65, 0x61, 0x12,
	0x13, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e,
	0x41, 0x72, 0x65, 0x61, 0x22, 0x1e, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x43, 0x69, 0x74, 0x79, 0x12,
	0x13, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e,
	0x43, 0x69, 0x74, 0x79, 0x22, 0x24, 0x0a, 0x09, 0x53, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x64, 0x69,
	0x74, 0x12, 0x17, 0x0a, 0x06, 0x62, 0x61, 0x6e, 0x64, 0x69, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x07, 0x2e, 0x54, 0x77, 0x6f, 0x49, 0x6e, 0x74, 0x22, 0x5a, 0x0a, 0x07, 0x53, 0x65,
	0x72, 0x4d, 0x69, 0x6e, 0x65, 0x12, 0x15, 0x0a, 0x04, 0x6d, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x54, 0x77, 0x6f, 0x49, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07,
	0x2e, 0x54, 0x77, 0x6f, 0x49, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x09, 0x73, 0x75, 0x70, 0x65, 0x72,
	0x4d, 0x69, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x53, 0x75, 0x70,
	0x65, 0x72, 0x4d, 0x69, 0x6e, 0x65, 0x22, 0x48, 0x0a, 0x09, 0x53, 0x65, 0x72, 0x42, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x06, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x50, 0x4f, 0x12, 0x20,
	0x0a, 0x0d, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x50, 0x4f,
	0x22, 0x59, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x54, 0x61, 0x73, 0x6b,
	0x12, 0x13, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x12, 0x1d, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x54, 0x61,
	0x73, 0x6b, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x57, 0x6f, 0x72, 0x6c, 0x64,
	0x54, 0x61, 0x73, 0x6b, 0x12, 0x15, 0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x22, 0x54, 0x0a, 0x10, 0x53,
	0x65, 0x72, 0x57, 0x72, 0x6f, 0x6c, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12,
	0x19, 0x0a, 0x11, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x12, 0x25, 0x0a, 0x0d, 0x77, 0x6f,
	0x72, 0x6c, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x22, 0x3f, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x4d, 0x69, 0x6c, 0x6c, 0x12, 0x13, 0x0a, 0x04,
	0x6d, 0x69, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x4d, 0x69, 0x6c,
	0x6c, 0x12, 0x1f, 0x0a, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x45, 0x78, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x61,
	0x73, 0x65, 0x22, 0x27, 0x0a, 0x0a, 0x53, 0x65, 0x72, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x12, 0x19, 0x0a, 0x07, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x08, 0x2e, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x21, 0x0a, 0x08, 0x53,
	0x65, 0x72, 0x47, 0x61, 0x69, 0x6e, 0x73, 0x12, 0x15, 0x0a, 0x05, 0x67, 0x61, 0x69, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x47, 0x61, 0x69, 0x6e, 0x73, 0x22, 0x1e,
	0x0a, 0x07, 0x53, 0x65, 0x72, 0x41, 0x72, 0x6d, 0x79, 0x12, 0x13, 0x0a, 0x04, 0x61, 0x72, 0x6d,
	0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x41, 0x72, 0x6d, 0x79, 0x22, 0x39,
	0x0a, 0x07, 0x53, 0x65, 0x72, 0x54, 0x65, 0x63, 0x68, 0x12, 0x13, 0x0a, 0x04, 0x74, 0x65, 0x63,
	0x68, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x54, 0x65, 0x63, 0x68, 0x12, 0x19,
	0x0a, 0x07, 0x74, 0x65, 0x63, 0x68, 0x51, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x08, 0x2e, 0x54, 0x65, 0x63, 0x68, 0x51, 0x75, 0x65, 0x22, 0x3a, 0x0a, 0x0b, 0x53, 0x65, 0x72,
	0x43, 0x68, 0x65, 0x6d, 0x69, 0x63, 0x61, 0x6c, 0x12, 0x10, 0x0a, 0x08, 0x65, 0x78, 0x70, 0x61,
	0x6e, 0x64, 0x4c, 0x76, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x12, 0x19, 0x0a, 0x03, 0x71, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x68, 0x65, 0x6d, 0x69, 0x63,
	0x61, 0x6c, 0x51, 0x75, 0x65, 0x22, 0x78, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x54, 0x72, 0x65, 0x61,
	0x73, 0x75, 0x72, 0x65, 0x12, 0x0e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0b, 0x0a, 0x03, 0x72, 0x65, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x12, 0x0f, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x54, 0x77, 0x6f, 0x49, 0x6e, 0x74, 0x22,
	0x28, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19,
	0x0a, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x08, 0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x5f, 0x0a, 0x07, 0x53, 0x65, 0x72,
	0x53, 0x68, 0x6f, 0x70, 0x12, 0x16, 0x0a, 0x05, 0x69, 0x64, 0x43, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x54, 0x77, 0x6f, 0x49, 0x6e, 0x74, 0x12, 0x0d, 0x0a, 0x05,
	0x76, 0x69, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x12, 0x13, 0x0a, 0x0b, 0x72,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x12, 0x18, 0x0a, 0x07, 0x66, 0x72, 0x65, 0x65, 0x43, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x07, 0x2e, 0x54, 0x77, 0x6f, 0x49, 0x6e, 0x74, 0x22, 0x32, 0x0a, 0x11, 0x53, 0x65,
	0x72, 0x50, 0x61, 0x72, 0x74, 0x79, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x12,
	0x1d, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x50, 0x61, 0x72, 0x74, 0x79, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x22, 0x25,
	0x0a, 0x0b, 0x53, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4c, 0x6f, 0x67, 0x12, 0x16, 0x0a,
	0x03, 0x6c, 0x6f, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x50, 0x61, 0x72,
	0x74, 0x79, 0x4c, 0x6f, 0x67, 0x22, 0x44, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74,
	0x79, 0x4a, 0x6f, 0x62, 0x12, 0x16, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4a, 0x6f, 0x62, 0x12, 0x1d, 0x0a, 0x05,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x50, 0x61,
	0x72, 0x74, 0x79, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x8e, 0x02, 0x0a, 0x0b,
	0x53, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x79, 0x45, 0x78, 0x74, 0x12, 0x15, 0x0a, 0x0d, 0x63,
	0x61, 0x62, 0x69, 0x6e, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x4c, 0x76, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x12, 0x16, 0x0a, 0x0e, 0x63, 0x61, 0x62, 0x69, 0x6e, 0x65, 0x74, 0x4c, 0x65, 0x61,
	0x64, 0x45, 0x78, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x12, 0x18, 0x0a, 0x10, 0x66, 0x69,
	0x72, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x4a, 0x6f, 0x62, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x12, 0x26, 0x0a, 0x0c, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x53, 0x65, 0x72,
	0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x26, 0x0a, 0x0b,
	0x73, 0x75, 0x70, 0x65, 0x72, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x53, 0x75, 0x70, 0x65, 0x72, 0x53, 0x75,
	0x70, 0x70, 0x6c, 0x79, 0x12, 0x21, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x79, 0x53, 0x75, 0x70,
	0x70, 0x6c, 0x79, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x50, 0x61, 0x72, 0x74,
	0x79, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x1f, 0x0a, 0x17, 0x77, 0x6f, 0x72, 0x6c, 0x64,
	0x57, 0x61, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x12, 0x22, 0x0a, 0x1a, 0x77, 0x6f, 0x72, 0x6c,
	0x64, 0x57, 0x61, 0x72, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x43, 0x69, 0x74, 0x79, 0x49, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x22, 0x58, 0x0a, 0x0e,
	0x53, 0x65, 0x72, 0x41, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x13,
	0x0a, 0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x12, 0x17, 0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x54, 0x77, 0x6f, 0x49, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e,
	0x54, 0x77, 0x6f, 0x49, 0x6e, 0x74, 0x22, 0x24, 0x0a, 0x09, 0x53, 0x65, 0x72, 0x54, 0x72, 0x6f,
	0x70, 0x68, 0x79, 0x12, 0x17, 0x0a, 0x06, 0x74, 0x72, 0x6f, 0x70, 0x68, 0x79, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x54, 0x77, 0x6f, 0x49, 0x6e, 0x74, 0x22, 0x74, 0x0a, 0x0f,
	0x53, 0x65, 0x72, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x54, 0x72, 0x6f, 0x70, 0x68, 0x79, 0x12,
	0x0c, 0x0a, 0x04, 0x67, 0x6c, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x12, 0x1b, 0x0a,
	0x13, 0x73, 0x6f, 0x6c, 0x61, 0x72, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x61,
	0x6e, 0x6b, 0x45, 0x71, 0x75, 0x69, 0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x45, 0x71, 0x75, 0x69, 0x70, 0x12, 0x16, 0x0a, 0x0e, 0x70, 0x61,
	0x73, 0x73, 0x4d, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x05, 0x22, 0x2c, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x41, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x12, 0x1b, 0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x41, 0x77, 0x61, 0x72, 0x64, 0x73,
	0x22, 0x30, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x53, 0x75, 0x70, 0x65, 0x72, 0x45, 0x71, 0x75, 0x69,
	0x70, 0x12, 0x1f, 0x0a, 0x0a, 0x73, 0x75, 0x70, 0x65, 0x72, 0x45, 0x71, 0x75, 0x69, 0x70, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x53, 0x75, 0x70, 0x65, 0x72, 0x45, 0x71, 0x75,
	0x69, 0x70, 0x22, 0x28, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x53, 0x75, 0x70, 0x65, 0x72, 0x45, 0x71,
	0x75, 0x69, 0x70, 0x51, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x03, 0x71, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x54, 0x77, 0x6f, 0x49, 0x6e, 0x74, 0x22, 0x23, 0x0a, 0x0a,
	0x53, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x6f, 0x70,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x4f, 0x70,
	0x74, 0x22, 0x27, 0x0a, 0x0a, 0x53, 0x65, 0x72, 0x57, 0x61, 0x6c, 0x6c, 0x4e, 0x70, 0x63, 0x12,
	0x19, 0x0a, 0x07, 0x77, 0x61, 0x6c, 0x6c, 0x4e, 0x70, 0x63, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x08, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x4e, 0x70, 0x63, 0x22, 0x25, 0x0a, 0x0a, 0x53, 0x65,
	0x72, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x73, 0x12, 0x17, 0x0a, 0x06, 0x65, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x45, 0x66, 0x66, 0x65, 0x63,
	0x74, 0x22, 0x28, 0x0a, 0x09, 0x53, 0x65, 0x72, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x1b,
	0x0a, 0x08, 0x64, 0x62, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x44, 0x62, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x22, 0x94, 0x01, 0x0a, 0x13,
	0x53, 0x65, 0x72, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x41, 0x70, 0x70, 0x72, 0x65, 0x6e, 0x74,
	0x69, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x06, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x44, 0x62, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x41, 0x70,
	0x70, 0x72, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x72,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x44, 0x62, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x41, 0x70, 0x70, 0x72, 0x65, 0x6e, 0x74, 0x69,
	0x63, 0x65, 0x12, 0x1b, 0x0a, 0x0a, 0x61, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x49, 0x64, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x54, 0x77, 0x6f, 0x49, 0x6e, 0x74, 0x12,
	0x11, 0x0a, 0x09, 0x62, 0x6f, 0x75, 0x67, 0x68, 0x74, 0x49, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x05, 0x22, 0x7f, 0x0a, 0x0a, 0x53, 0x65, 0x72, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x65, 0x74,
	0x12, 0x11, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x12, 0x11, 0x0a, 0x09, 0x63, 0x75, 0x72, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x12, 0x10, 0x0a, 0x08, 0x6c, 0x65, 0x61, 0x64, 0x53, 0x74,
	0x65, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07, 0x69, 0x73, 0x46, 0x69,
	0x6e, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x12, 0x14, 0x0a, 0x0c, 0x69, 0x73, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x12,
	0x12, 0x0a, 0x0a, 0x69, 0x73, 0x4c, 0x76, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x22, 0x33, 0x0a, 0x0e, 0x53, 0x65, 0x72, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x65,
	0x74, 0x4c, 0x65, 0x61, 0x64, 0x12, 0x21, 0x0a, 0x0b, 0x63, 0x61, 0x62, 0x69, 0x6e, 0x65, 0x74,
	0x4c, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x61, 0x62,
	0x69, 0x6e, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x22, 0x42, 0x0a, 0x0a, 0x53, 0x65, 0x72, 0x47,
	0x65, 0x73, 0x74, 0x61, 0x70, 0x6f, 0x12, 0x19, 0x0a, 0x07, 0x67, 0x65, 0x73, 0x74, 0x61, 0x70,
	0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x47, 0x65, 0x73, 0x74, 0x61, 0x70,
	0x6f, 0x12, 0x19, 0x0a, 0x07, 0x61, 0x69, 0x72, 0x73, 0x68, 0x69, 0x70, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x08, 0x2e, 0x41, 0x69, 0x72, 0x73, 0x68, 0x69, 0x70, 0x22, 0x8b, 0x02, 0x0a,
	0x0c, 0x53, 0x65, 0x72, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x45, 0x78, 0x74, 0x12, 0x22, 0x0a,
	0x04, 0x62, 0x6f, 0x73, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x53, 0x65,
	0x72, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x6e, 0x69, 0x6e, 0x67, 0x57, 0x61, 0x72, 0x42, 0x6f, 0x73,
	0x73, 0x12, 0x1c, 0x0a, 0x0b, 0x73, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x54, 0x77, 0x6f, 0x49, 0x6e, 0x74, 0x12,
	0x20, 0x0a, 0x09, 0x62, 0x65, 0x72, 0x6c, 0x69, 0x6e, 0x57, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x53, 0x65, 0x72, 0x42, 0x65, 0x72, 0x6c, 0x69, 0x6e, 0x57, 0x61,
	0x72, 0x12, 0x22, 0x0a, 0x0a, 0x68, 0x6f, 0x6e, 0x6f, 0x72, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x65, 0x72, 0x48, 0x6f, 0x6e, 0x6f, 0x72,
	0x44, 0x61, 0x69, 0x6c, 0x79, 0x12, 0x29, 0x0a, 0x0f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52,
	0x65, 0x62, 0x65, 0x6c, 0x6c, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x65, 0x62, 0x65, 0x6c, 0x6c, 0x69, 0x6f, 0x6e,
	0x12, 0x28, 0x0a, 0x0d, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x53, 0x65, 0x72, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x65, 0x72, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x12, 0x1e, 0x0a, 0x16, 0x63, 0x72,
	0x6f, 0x73, 0x73, 0x43, 0x69, 0x74, 0x79, 0x4e, 0x70, 0x63, 0x43, 0x68, 0x67, 0x41, 0x74, 0x74,
	0x72, 0x43, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x22, 0xf8, 0x01, 0x0a, 0x10, 0x53,
	0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x12,
	0x1d, 0x0a, 0x09, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e,
	0x0a, 0x06, 0x63, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0b,
	0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e,
	0x49, 0x6e, 0x74, 0x4c, 0x6f, 0x6e, 0x67, 0x12, 0x13, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x42, 0x6f, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x12, 0x15, 0x0a, 0x0d,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x6b, 0x43, 0x6e, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x12, 0x15, 0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x06, 0x2e, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x0e, 0x6a, 0x6f,
	0x69, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x03, 0x12, 0x21, 0x0a, 0x08, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x53, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65,
	0x72, 0x53, 0x68, 0x6f, 0x70, 0x22, 0x3b, 0x0a, 0x0e, 0x53, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x72, 0x53, 0x68, 0x6f, 0x70, 0x12, 0x0e, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x6f, 0x70, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x54, 0x77, 0x6f, 0x49,
	0x6e, 0x74, 0x22, 0x68, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x44, 0x61,
	0x69, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x61, 0x69, 0x6c, 0x79,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1f, 0x0a, 0x08, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x32, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x32, 0x22, 0x7c, 0x0a, 0x13,
	0x53, 0x65, 0x72, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x6e, 0x69, 0x6e, 0x67, 0x57, 0x61, 0x72, 0x42,
	0x6f, 0x73, 0x73, 0x12, 0x0a, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x12,
	0x0e, 0x0a, 0x06, 0x63, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x12,
	0x0b, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x12, 0x15, 0x0a, 0x0d,
	0x6c, 0x61, 0x73, 0x74, 0x46, 0x69, 0x67, 0x68, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x12, 0x15, 0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x06, 0x2e, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x22, 0x82, 0x03, 0x0a, 0x0c, 0x53,
	0x65, 0x72, 0x42, 0x65, 0x72, 0x6c, 0x69, 0x6e, 0x57, 0x61, 0x72, 0x12, 0x26, 0x0a, 0x0a, 0x62,
	0x65, 0x72, 0x6c, 0x69, 0x6e, 0x43, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x53, 0x65, 0x72, 0x42, 0x65, 0x72, 0x6c, 0x69, 0x6e, 0x43, 0x69, 0x74, 0x79, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x27, 0x0a, 0x0b, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x46, 0x72, 0x6f,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x53, 0x65, 0x72, 0x42, 0x65,
	0x72, 0x6c, 0x69, 0x6e, 0x43, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x21, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x53, 0x65, 0x72, 0x42, 0x65, 0x72,
	0x6c, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x10, 0x0a, 0x08, 0x6c, 0x61, 0x73,
	0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x12, 0x1f, 0x0a, 0x0d, 0x68,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x57, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x08, 0x2e, 0x49, 0x6e, 0x74, 0x4c, 0x6f, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x12, 0x11, 0x0a, 0x09,
	0x62, 0x65, 0x67, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x12,
	0x0f, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x12, 0x13, 0x0a, 0x0b, 0x70, 0x72, 0x65, 0x56, 0x69, 0x65, 0x77, 0x44, 0x61, 0x74, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x61, 0x74, 0x6b, 0x43, 0x44, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x05, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x65, 0x72, 0x6c, 0x69, 0x4a, 0x6f, 0x62,
	0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x49, 0x6e, 0x74, 0x4c, 0x6f, 0x6e,
	0x67, 0x12, 0x15, 0x0a, 0x0d, 0x6a, 0x6f, 0x69, 0x6e, 0x42, 0x65, 0x72, 0x6c, 0x69, 0x6e, 0x57,
	0x61, 0x72, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x03, 0x12, 0x25, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x53, 0x65,
	0x72, 0x42, 0x65, 0x72, 0x6c, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x6b, 0x0a, 0x11, 0x53, 0x65, 0x72, 0x42, 0x65, 0x72, 0x6c, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x03, 0x12, 0x0d, 0x0a, 0x05, 0x61, 0x74, 0x6b, 0x43, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x12, 0x1b, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x54, 0x77, 0x6f, 0x49, 0x6e, 0x74,
	0x12, 0x1a, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x54, 0x77, 0x6f, 0x49, 0x6e, 0x74, 0x22, 0xe2, 0x01, 0x0a,
	0x11, 0x53, 0x65, 0x72, 0x42, 0x65, 0x72, 0x6c, 0x69, 0x6e, 0x43, 0x69, 0x74, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x54, 0x77, 0x6f, 0x49, 0x6e, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x63, 0x69, 0x74, 0x79, 0x44, 0x65, 0x66, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x06, 0x2e, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x42, 0x65,
	0x72, 0x6c, 0x69, 0x6e, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x0c, 0x0a, 0x04, 0x63, 0x61, 0x6d,
	0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x61, 0x74, 0x6b, 0x41, 0x72,
	0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x64, 0x65, 0x66, 0x41, 0x72,
	0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x63, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0b, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x12, 0x16, 0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x4f, 0x63, 0x63, 0x75,
	0x70, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x12, 0x13, 0x0a, 0x0b,
	0x6e, 0x65, 0x78, 0x74, 0x41, 0x74, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x05, 0x22, 0xc5, 0x01, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x42, 0x65, 0x72, 0x6c, 0x69, 0x6e, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x0f, 0x0a, 0x07, 0x6b, 0x69, 0x6c, 0x6c, 0x43, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x12, 0x10, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x4b, 0x69,
	0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x12, 0x14, 0x0a, 0x0c, 0x74, 0x65, 0x6d, 0x70,
	0x4b, 0x69, 0x6c, 0x6c, 0x48, 0x65, 0x72, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x12, 0x16,
	0x0a, 0x0e, 0x6b, 0x69, 0x6c, 0x6c, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6b, 0x48, 0x65, 0x72, 0x6f,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x12, 0x12, 0x0a, 0x0a, 0x6b, 0x69, 0x6c, 0x6c, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x12, 0x14, 0x0a, 0x0c, 0x6b, 0x69,
	0x6c, 0x6c, 0x52, 0x61, 0x6e, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x12, 0x16, 0x0a, 0x0e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6b, 0x52, 0x61, 0x6e, 0x6b, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65,
	0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x12, 0x0f, 0x0a, 0x07, 0x65, 0x78, 0x70, 0x6c,
	0x6f, 0x69, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x22, 0xa7, 0x0a, 0x0a, 0x0c, 0x53, 0x65,
	0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x45, 0x78, 0x74, 0x12, 0x11, 0x0a, 0x09, 0x70, 0x6f,
	0x72, 0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x12, 0x17, 0x0a,
	0x06, 0x73, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e,
	0x53, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x0f, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x46, 0x72, 0x65, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x12,
	0x16, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x48, 0x65, 0x72, 0x6f, 0x46, 0x6f, 0x72,
	0x6d, 0x18, 0x04, 0x20, 0x03, 0x28, 0x05, 0x12, 0x10, 0x0a, 0x08, 0x68, 0x65, 0x72, 0x6f, 0x53,
	0x6b, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x12, 0x17, 0x0a, 0x0f, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x12, 0x22, 0x0a, 0x0d, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x48, 0x65, 0x72, 0x6f,
	0x50, 0x6f, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x49, 0x6e, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x0e, 0x66, 0x69, 0x72, 0x73, 0x74, 0x50,
	0x61, 0x79, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x12, 0x11,
	0x0a, 0x09, 0x62, 0x61, 0x6e, 0x64, 0x69, 0x74, 0x43, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x12, 0x13, 0x0a, 0x0b, 0x69, 0x73, 0x46, 0x69, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x12, 0x1a, 0x0a, 0x12, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x52,
	0x61, 0x69, 0x64, 0x42, 0x61, 0x6e, 0x64, 0x69, 0x74, 0x43, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x05, 0x12, 0x2b, 0x0a, 0x10, 0x64, 0x62, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x47,
	0x69, 0x66, 0x74, 0x4d, 0x61, 0x70, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x44,
	0x62, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x47, 0x69, 0x66, 0x74, 0x4d, 0x61, 0x70, 0x12,
	0x13, 0x0a, 0x0b, 0x68, 0x69, 0x74, 0x46, 0x6c, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x05, 0x12, 0x19, 0x0a, 0x11, 0x69, 0x73, 0x4f, 0x66, 0x66, 0x4f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x48, 0x69, 0x74, 0x46, 0x6c, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x12,
	0x16, 0x0a, 0x0e, 0x69, 0x73, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x77, 0x61, 0x72,
	0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x12, 0x0e, 0x0a, 0x06, 0x70, 0x61, 0x63, 0x6b, 0x49,
	0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x12, 0x1d, 0x0a, 0x09, 0x73, 0x74, 0x6f, 0x6e, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x53, 0x74, 0x6f,
	0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a, 0x0a, 0x61, 0x74, 0x6b, 0x43, 0x69, 0x74,
	0x79, 0x41, 0x63, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x44, 0x62, 0x41,
	0x74, 0x6b, 0x43, 0x69, 0x74, 0x79, 0x41, 0x63, 0x74, 0x12, 0x23, 0x0a, 0x0b, 0x73, 0x70, 0x65,
	0x63, 0x69, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x18, 0x13, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x44, 0x62, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x12, 0x1c,
	0x0a, 0x0b, 0x6d, 0x69, 0x78, 0x74, 0x75, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x14, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x54, 0x77, 0x6f, 0x49, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x13,
	0x6d, 0x69, 0x6c, 0x69, 0x74, 0x61, 0x72, 0x79, 0x45, 0x78, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x12, 0x11, 0x0a, 0x09, 0x63, 0x68, 0x65,
	0x61, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x16, 0x20, 0x03, 0x28, 0x05, 0x12, 0x11, 0x0a, 0x09,
	0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x17, 0x20, 0x03, 0x28, 0x03, 0x12,
	0x23, 0x0a, 0x0c, 0x6f, 0x66, 0x66, 0x4c, 0x69, 0x6e, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x18,
	0x18, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x4f, 0x66, 0x66, 0x4c, 0x69, 0x6e, 0x65, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x12, 0x12, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x42, 0x75, 0x62, 0x62,
	0x6c, 0x65, 0x18, 0x19, 0x20, 0x03, 0x28, 0x05, 0x12, 0x15, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x43,
	0x68, 0x61, 0x74, 0x42, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x05, 0x12,
	0x11, 0x0a, 0x09, 0x62, 0x6f, 0x64, 0x79, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x1b, 0x20, 0x03,
	0x28, 0x05, 0x12, 0x14, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x42, 0x6f, 0x64, 0x79, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x05, 0x12, 0x12, 0x0a, 0x0a, 0x6d, 0x65, 0x64, 0x61,
	0x6c, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x18, 0x1d, 0x20, 0x03, 0x28, 0x05, 0x12, 0x18, 0x0a, 0x10,
	0x6d, 0x65, 0x64, 0x61, 0x6c, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x66, 0x4e, 0x75, 0x6d,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x12, 0x1d, 0x0a, 0x15, 0x70, 0x65, 0x61, 0x63, 0x65, 0x6b,
	0x65, 0x65, 0x70, 0x69, 0x6e, 0x67, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x73, 0x4e, 0x75, 0x6d, 0x18,
	0x1f, 0x20, 0x01, 0x28, 0x05, 0x12, 0x14, 0x0a, 0x0c, 0x6a, 0x47, 0x58, 0x48, 0x4c, 0x61, 0x73,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x20, 0x20, 0x01, 0x28, 0x05, 0x12, 0x1b, 0x0a, 0x0a, 0x70,
	0x6c, 0x61, 0x6e, 0x65, 0x43, 0x68, 0x69, 0x70, 0x73, 0x18, 0x21, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x07, 0x2e, 0x54, 0x77, 0x6f, 0x49, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x07, 0x64, 0x62, 0x50, 0x6c,
	0x61, 0x6e, 0x65, 0x18, 0x22, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x44, 0x62, 0x57, 0x61,
	0x72, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x12, 0x2d, 0x0a, 0x11, 0x64, 0x62, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x52, 0x65, 0x62, 0x65, 0x6c, 0x6c, 0x69, 0x6f, 0x6e, 0x18, 0x23, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x44, 0x62, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x62, 0x65,
	0x6c, 0x6c, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x07, 0x66, 0x75, 0x6e, 0x43, 0x61, 0x72, 0x64,
	0x18, 0x24, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x46, 0x75, 0x6e, 0x43, 0x61, 0x72, 0x64,
	0x12, 0x26, 0x0a, 0x0c, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x25, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x53, 0x65, 0x72, 0x44, 0x65, 0x63, 0x69,
	0x73, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x0a, 0x6d, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x26, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x53,
	0x65, 0x72, 0x4d, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2f, 0x0a, 0x11,
	0x61, 0x69, 0x72, 0x73, 0x68, 0x69, 0x70, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x27, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x44, 0x62, 0x41, 0x69, 0x72, 0x73,
	0x68, 0x69, 0x70, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x26, 0x0a,
	0x0c, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x28, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x53, 0x65, 0x72, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x05, 0x6a, 0x65, 0x77, 0x65, 0x6c, 0x18, 0x29,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x45, 0x71, 0x75, 0x69, 0x70, 0x4a, 0x65, 0x77, 0x65,
	0x6c, 0x12, 0x24, 0x0a, 0x08, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x57, 0x61, 0x72, 0x18, 0x2a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x53, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x57,
	0x6f, 0x72, 0x6c, 0x64, 0x57, 0x61, 0x72, 0x12, 0x15, 0x0a, 0x0d, 0x6f, 0x77, 0x6e, 0x43, 0x61,
	0x73, 0x74, 0x6c, 0x65, 0x53, 0x6b, 0x69, 0x6e, 0x18, 0x2b, 0x20, 0x03, 0x28, 0x05, 0x12, 0x15,
	0x0a, 0x0d, 0x63, 0x75, 0x72, 0x43, 0x61, 0x73, 0x74, 0x6c, 0x65, 0x53, 0x6b, 0x69, 0x6e, 0x18,
	0x2c, 0x20, 0x01, 0x28, 0x05, 0x12, 0x28, 0x0a, 0x0a, 0x6e, 0x65, 0x77, 0x59, 0x6f, 0x72, 0x6b,
	0x57, 0x61, 0x72, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x53, 0x65, 0x72, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x65, 0x77, 0x59, 0x6f, 0x72, 0x6b, 0x57, 0x61, 0x72, 0x12,
	0x22, 0x0a, 0x11, 0x6f, 0x77, 0x6e, 0x43, 0x61, 0x73, 0x74, 0x6c, 0x65, 0x53, 0x6b, 0x69, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x2e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x54, 0x77, 0x6f,
	0x49, 0x6e, 0x74, 0x22, 0x47, 0x0a, 0x13, 0x53, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x4e, 0x65, 0x77, 0x59, 0x6f, 0x72, 0x6b, 0x57, 0x61, 0x72, 0x12, 0x11, 0x0a, 0x09, 0x6d, 0x61,
	0x78, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x12, 0x1d, 0x0a,
	0x0c, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x54, 0x77, 0x6f, 0x49, 0x6e, 0x74, 0x22, 0xaf, 0x02, 0x0a,
	0x11, 0x53, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x57,
	0x61, 0x72, 0x12, 0x13, 0x0a, 0x0b, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x12, 0x21, 0x0a, 0x10, 0x64, 0x61, 0x69, 0x6c, 0x79,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x41, 0x77, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x07, 0x2e, 0x54, 0x77, 0x6f, 0x49, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0c, 0x72, 0x65,
	0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x07, 0x2e, 0x54, 0x77, 0x6f, 0x49, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x11, 0x72, 0x65, 0x73,
	0x74, 0x72, 0x69, 0x63, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x77, 0x61, 0x72, 0x64, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x54, 0x77, 0x6f, 0x49, 0x6e, 0x74, 0x12, 0x14, 0x0a,
	0x0c, 0x77, 0x65, 0x65, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x12, 0x1a, 0x0a, 0x09, 0x77, 0x65, 0x65, 0x6b, 0x41, 0x77, 0x61, 0x72, 0x64,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x54, 0x77, 0x6f, 0x49, 0x6e, 0x74, 0x12,
	0x16, 0x0a, 0x0e, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x12, 0x20, 0x0a, 0x0f, 0x61, 0x74, 0x74, 0x61, 0x63,
	0x6b, 0x43, 0x69, 0x74, 0x79, 0x41, 0x77, 0x61, 0x72, 0x64, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x07, 0x2e, 0x54, 0x77, 0x6f, 0x49, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x0a, 0x73, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x53, 0x68, 0x6f, 0x70, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e,
	0x54, 0x77, 0x6f, 0x49, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x6c, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x22, 0x51,
	0x0a, 0x0f, 0x53, 0x65, 0x72, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x12, 0x1a, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x61, 0x70, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x54, 0x77, 0x6f, 0x49, 0x6e, 0x74, 0x12, 0x22, 0x0a,
	0x11, 0x73, 0x75, 0x70, 0x65, 0x72, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x54, 0x77, 0x6f, 0x49, 0x6e,
	0x74, 0x22, 0x6b, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x76, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x08, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x76, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x12, 0x0f, 0x0a, 0x07, 0x66, 0x6c, 0x79, 0x52, 0x6f, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x12, 0x0f, 0x0a, 0x07, 0x66, 0x6c, 0x79, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x12, 0x10, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x12, 0x12, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x22, 0x8a,
	0x01, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x4d, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x07, 0x2e, 0x4d, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x06, 0x65, 0x71,
	0x75, 0x69, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4d, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x45, 0x71, 0x75, 0x69, 0x70, 0x12, 0x1c, 0x0a, 0x06, 0x73, 0x6b, 0x69, 0x6c,
	0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4d, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x23, 0x0a, 0x07, 0x62, 0x65, 0x74, 0x74, 0x65, 0x72,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x4d, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x42, 0x65, 0x74, 0x74, 0x65, 0x72, 0x45, 0x71, 0x75, 0x69, 0x70, 0x22, 0x43, 0x0a, 0x11, 0x4d,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x42, 0x65, 0x74, 0x74, 0x65, 0x72, 0x45, 0x71, 0x75, 0x69, 0x70,
	0x12, 0x12, 0x0a, 0x0a, 0x6d, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x12, 0x1a, 0x0a, 0x09, 0x65, 0x71, 0x75, 0x69, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x54, 0x77, 0x6f, 0x49, 0x6e, 0x74,
	0x22, 0x86, 0x01, 0x0a, 0x0a, 0x44, 0x62, 0x57, 0x61, 0x72, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x12,
	0x0e, 0x0a, 0x06, 0x68, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12,
	0x0c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0f, 0x0a,
	0x07, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0d,
	0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0b, 0x0a,
	0x03, 0x65, 0x78, 0x70, 0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0b, 0x0a, 0x03, 0x70, 0x6f,
	0x73, 0x18, 0x06, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x07, 0x20, 0x02, 0x28, 0x05, 0x12, 0x11, 0x0a, 0x09, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x50, 0x6f, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x22, 0x79, 0x0a, 0x09, 0x44, 0x62, 0x44,
	0x61, 0x79, 0x37, 0x41, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x76, 0x41, 0x77,
	0x61, 0x72, 0x64, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x12, 0x17, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x54,
	0x77, 0x6f, 0x49, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x09, 0x74, 0x61, 0x6e, 0x6b, 0x54, 0x79, 0x70,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x53, 0x74, 0x72, 0x49, 0x6e,
	0x74, 0x12, 0x21, 0x0a, 0x07, 0x74, 0x79, 0x70, 0x65, 0x43, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x44, 0x62, 0x44, 0x61, 0x79, 0x37, 0x41, 0x63, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x37, 0x0a, 0x0f, 0x44, 0x62, 0x44, 0x61, 0x79, 0x37, 0x41, 0x63,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x12, 0x17, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x54, 0x77, 0x6f, 0x49, 0x6e, 0x74, 0x22, 0x98, 0x01,
	0x0a, 0x0c, 0x44, 0x62, 0x41, 0x74, 0x6b, 0x43, 0x69, 0x74, 0x79, 0x41, 0x63, 0x74, 0x12, 0x1a,
	0x0a, 0x09, 0x74, 0x61, 0x6e, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x07, 0x2e, 0x53, 0x74, 0x72, 0x49, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x07, 0x74, 0x79,
	0x70, 0x65, 0x43, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x44, 0x62,
	0x44, 0x61, 0x79, 0x37, 0x41, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x17, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e,
	0x54, 0x77, 0x6f, 0x49, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x43, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x54, 0x77, 0x6f, 0x49,
	0x6e, 0x74, 0x12, 0x14, 0x0a, 0x0c, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x63, 0x76, 0x4b, 0x65, 0x79,
	0x49, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05, 0x22, 0x70, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x44, 0x62, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x42, 0x6c, 0x61,
	0x63, 0x6b, 0x68, 0x61, 0x77, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x41,
	0x63, 0x74, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x68, 0x61, 0x77, 0x6b, 0x12, 0x1d, 0x0a, 0x09, 0x61,
	0x63, 0x74, 0x42, 0x61, 0x72, 0x74, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x41, 0x63, 0x74, 0x42, 0x61, 0x72, 0x74, 0x6f, 0x6e, 0x22, 0x94, 0x02, 0x0a, 0x0a, 0x44,
	0x62, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x0a, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x18, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e,
	0x49, 0x6e, 0x74, 0x4c, 0x6f, 0x6e, 0x67, 0x12, 0x17, 0x0a, 0x06, 0x74, 0x6f, 0x77, 0x49, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x54, 0x77, 0x6f, 0x49, 0x6e, 0x74,
	0x12, 0x11, 0x0a, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x12, 0x0f, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x12, 0x15, 0x0a, 0x04, 0x70, 0x72, 0x6f, 0x70, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x07, 0x2e, 0x54, 0x77, 0x6f, 0x49, 0x6e, 0x74, 0x12, 0x15, 0x0a, 0x04, 0x73, 0x61, 0x76,
	0x65, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x54, 0x77, 0x6f, 0x49, 0x6e, 0x74,
	0x12, 0x14, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x12, 0x20, 0x0a, 0x08, 0x74, 0x75, 0x72, 0x6e, 0x70, 0x6c,
	0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x44, 0x62, 0x41, 0x63, 0x74,
	0x54, 0x75, 0x72, 0x6e, 0x70, 0x6c, 0x61, 0x74, 0x12, 0x27, 0x0a, 0x0d, 0x65, 0x71, 0x75, 0x69,
	0x70, 0x54, 0x75, 0x72, 0x6e, 0x70, 0x6c, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x44, 0x62, 0x45, 0x71, 0x75, 0x69, 0x70, 0x54, 0x75, 0x72, 0x6e, 0x70, 0x6c, 0x61,
	0x74, 0x22, 0x94, 0x01, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x43, 0x68, 0x61, 0x74, 0x12, 0x23, 0x0a,
	0x0b, 0x63, 0x68, 0x61, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x44, 0x62, 0x43, 0x68, 0x61, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x12, 0x27, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x44, 0x62, 0x43, 0x68, 0x61, 0x74, 0x44,
	0x69, 0x61, 0x6c, 0x6f, 0x67, 0x42, 0x79, 0x4c, 0x6f, 0x72, 0x64, 0x12, 0x1c, 0x0a, 0x0d, 0x77,
	0x6f, 0x72, 0x6c, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x74, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x05, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x12, 0x1d, 0x0a, 0x09, 0x72, 0x65, 0x64,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x52,
	0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x22, 0x81, 0x01, 0x0a, 0x0e, 0x53, 0x65, 0x72,
	0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x47, 0x69, 0x66, 0x74, 0x12, 0x0e, 0x0a, 0x06, 0x67,
	0x69, 0x66, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x12, 0x11, 0x0a, 0x09, 0x62,
	0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0f,
	0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x12,
	0x0d, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0d,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0e, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0d, 0x0a,
	0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x22, 0x48, 0x0a, 0x10,
	0x44, 0x62, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x47, 0x69, 0x66, 0x74, 0x4d, 0x61, 0x70,
	0x12, 0x0b, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x12, 0x27, 0x0a,
	0x0e, 0x73, 0x65, 0x72, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x47, 0x69, 0x66, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x53, 0x65, 0x72, 0x54, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x47, 0x69, 0x66, 0x74, 0x22, 0x54, 0x0a, 0x05, 0x44, 0x62, 0x43, 0x69, 0x61, 0x12,
	0x16, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x10, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x12, 0x21, 0x0a, 0x0b, 0x66, 0x65, 0x6d,
	0x61, 0x6c, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x46, 0x65, 0x6d, 0x61, 0x6c, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x22, 0x5d, 0x0a, 0x11,
	0x44, 0x62, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x62, 0x65, 0x6c, 0x6c, 0x69, 0x6f,
	0x6e, 0x12, 0x19, 0x0a, 0x05, 0x62, 0x75, 0x66, 0x66, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x52, 0x65, 0x62, 0x65, 0x6c, 0x42, 0x75, 0x66, 0x66, 0x12, 0x0e, 0x0a, 0x06,
	0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06,
	0x69, 0x73, 0x44, 0x65, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x12, 0x0d, 0x0a, 0x05,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x22, 0x5c, 0x0a, 0x13, 0x44,
	0x62, 0x41, 0x69, 0x72, 0x73, 0x68, 0x69, 0x70, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x16, 0x0a, 0x0e, 0x62, 0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x41, 0x77, 0x61, 0x72,
	0x64, 0x43, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x12, 0x14, 0x0a, 0x0c, 0x68, 0x65,
	0x6c, 0x70, 0x41, 0x77, 0x61, 0x72, 0x64, 0x43, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x12, 0x17, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x44,
	0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x22, 0x31, 0x0a, 0x0e, 0x53, 0x65, 0x72,
	0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x62, 0x12, 0x1f, 0x0a, 0x09, 0x6d,
	0x61, 0x70, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x62, 0x22, 0x26, 0x0a, 0x0f,
	0x53, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x72, 0x6d, 0x79, 0x50, 0x62, 0x12,
	0x13, 0x0a, 0x04, 0x61, 0x72, 0x6d, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e,
	0x41, 0x72, 0x6d, 0x79, 0x22, 0x2b, 0x0a, 0x0e, 0x53, 0x65, 0x72, 0x4d, 0x61, 0x70, 0x42, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x50, 0x62, 0x12, 0x19, 0x0a, 0x06, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x50,
	0x4f, 0x22, 0x4d, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x4d, 0x61, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x50,
	0x62, 0x12, 0x28, 0x0a, 0x0b, 0x77, 0x61, 0x72, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x57, 0x61,
	0x72, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x62, 0x12, 0x13, 0x0a, 0x0b, 0x6d,
	0x61, 0x70, 0x4f, 0x70, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x22, 0x29, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x4d, 0x61, 0x70, 0x45, 0x78, 0x74, 0x31, 0x50, 0x62,
	0x12, 0x19, 0x0a, 0x07, 0x61, 0x69, 0x72, 0x73, 0x68, 0x69, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x08, 0x2e, 0x41, 0x69, 0x72, 0x73, 0x68, 0x69, 0x70, 0x22, 0x30, 0x0a, 0x0d, 0x53,
	0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0a,
	0x73, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x3d, 0x0a,
	0x14, 0x53, 0x65, 0x72, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61,
	0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0f, 0x0a, 0x07, 0x6b, 0x69, 0x6c, 0x6c, 0x4e, 0x75, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x12, 0x14, 0x0a, 0x0c, 0x67, 0x61, 0x69, 0x6e, 0x54, 0x72,
	0x6f, 0x70, 0x68, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x22, 0x29, 0x0a, 0x0c,
	0x53, 0x65, 0x72, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x46, 0x6f, 0x72, 0x74, 0x12, 0x19, 0x0a, 0x04,
	0x66, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x44, 0x62, 0x46,
	0x6f, 0x72, 0x74, 0x72, 0x65, 0x73, 0x73, 0x22, 0x4e, 0x0a, 0x0a, 0x44, 0x62, 0x46, 0x6f, 0x72,
	0x74, 0x72, 0x65, 0x73, 0x73, 0x12, 0x0a, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x12, 0x0c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x12,
	0x0c, 0x0a, 0x04, 0x63, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x12, 0x18, 0x0a,
	0x08, 0x6e, 0x70, 0x63, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x06, 0x2e, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x22, 0x56, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x43, 0x72,
	0x6f, 0x73, 0x73, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x20, 0x0a, 0x08, 0x63, 0x61, 0x6d, 0x70, 0x52,
	0x61, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x43, 0x72, 0x6f, 0x73,
	0x73, 0x52, 0x61, 0x6e, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x24, 0x0a, 0x0c, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x52, 0x61, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x52, 0x61, 0x6e, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x22,
	0x48, 0x0a, 0x12, 0x53, 0x65, 0x72, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x4c, 0x6f, 0x72, 0x64, 0x12, 0x1c, 0x0a, 0x06, 0x6c, 0x6f, 0x72, 0x64, 0x50, 0x62, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x4c, 0x6f, 0x72,
	0x64, 0x50, 0x62, 0x12, 0x14, 0x0a, 0x0c, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x22, 0x24, 0x0a, 0x11, 0x53, 0x65, 0x72,
	0x43, 0x72, 0x6f, 0x73, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x57, 0x61, 0x72, 0x12, 0x0f,
	0x0a, 0x07, 0x6b, 0x69, 0x6c, 0x6c, 0x4e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x55, 0x0a, 0x1a, 0x63, 0x6f, 0x6d, 0x2e, 0x68, 0x75, 0x6e, 0x64, 0x72, 0x65, 0x64, 0x63, 0x65,
	0x6e, 0x74, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x6d, 0x77, 0x2e, 0x70, 0x62, 0x42, 0x0b, 0x53,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x50, 0x62, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x71, 0x69, 0x75, 0x68, 0x6f, 0x75, 0x64, 0x65, 0x2f,
	0x67, 0x6f, 0x2d, 0x77, 0x65, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x32, 0x2f,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
}

var (
	file_Serialize_proto_rawDescOnce sync.Once
	file_Serialize_proto_rawDescData = file_Serialize_proto_rawDesc
)

func file_Serialize_proto_rawDescGZIP() []byte {
	file_Serialize_proto_rawDescOnce.Do(func() {
		file_Serialize_proto_rawDescData = protoimpl.X.CompressGZIP(file_Serialize_proto_rawDescData)
	})
	return file_Serialize_proto_rawDescData
}

var file_Serialize_proto_msgTypes = make([]protoimpl.MessageInfo, 87)
var file_Serialize_proto_goTypes = []interface{}{
	(*SerData)(nil),              // 0: SerData
	(*SerHero)(nil),              // 1: SerHero
	(*SerEquip)(nil),             // 2: SerEquip
	(*SerMedal)(nil),             // 3: SerMedal
	(*SerProp)(nil),              // 4: SerProp
	(*SerBuildQue)(nil),          // 5: SerBuildQue
	(*SerEquipQue)(nil),          // 6: SerEquipQue
	(*SerTask)(nil),              // 7: SerTask
	(*SerCombat)(nil),            // 8: SerCombat
	(*SerCombatFb)(nil),          // 9: SerCombatFb
	(*SerRoleData)(nil),          // 10: SerRoleData
	(*SerMail)(nil),              // 11: SerMail
	(*SerReport)(nil),            // 12: SerReport
	(*SerArea)(nil),              // 13: SerArea
	(*SerCity)(nil),              // 14: SerCity
	(*SerBandit)(nil),            // 15: SerBandit
	(*SerMine)(nil),              // 16: SerMine
	(*SerBattle)(nil),            // 17: SerBattle
	(*SerWorldTask)(nil),         // 18: SerWorldTask
	(*SerWroldSchedule)(nil),     // 19: SerWroldSchedule
	(*SerMill)(nil),              // 20: SerMill
	(*SerFactory)(nil),           // 21: SerFactory
	(*SerGains)(nil),             // 22: SerGains
	(*SerArmy)(nil),              // 23: SerArmy
	(*SerTech)(nil),              // 24: SerTech
	(*SerChemical)(nil),          // 25: SerChemical
	(*SerTreasure)(nil),          // 26: SerTreasure
	(*SerTypeInfo)(nil),          // 27: SerTypeInfo
	(*SerShop)(nil),              // 28: SerShop
	(*SerPartyHonorRank)(nil),    // 29: SerPartyHonorRank
	(*SerPartyLog)(nil),          // 30: SerPartyLog
	(*SerPartyJob)(nil),          // 31: SerPartyJob
	(*SerPartyExt)(nil),          // 32: SerPartyExt
	(*SerAcquisition)(nil),       // 33: SerAcquisition
	(*SerTrophy)(nil),            // 34: SerTrophy
	(*SerGlobalTrophy)(nil),      // 35: SerGlobalTrophy
	(*SerTypeAwards)(nil),        // 36: SerTypeAwards
	(*SerSuperEquip)(nil),        // 37: SerSuperEquip
	(*SerSuperEquipQue)(nil),     // 38: SerSuperEquipQue
	(*SerRoleOpt)(nil),           // 39: SerRoleOpt
	(*SerWallNpc)(nil),           // 40: SerWallNpc
	(*SerEffects)(nil),           // 41: SerEffects
	(*SerFriend)(nil),            // 42: SerFriend
	(*SerMasterApprentice)(nil),  // 43: SerMasterApprentice
	(*SerCabinet)(nil),           // 44: SerCabinet
	(*SerCabinetLead)(nil),       // 45: SerCabinetLead
	(*SerGestapo)(nil),           // 46: SerGestapo
	(*SerGlobalExt)(nil),         // 47: SerGlobalExt
	(*SerCounterAttack)(nil),     // 48: SerCounterAttack
	(*SerCounterShop)(nil),       // 49: SerCounterShop
	(*SerHonorDaily)(nil),        // 50: SerHonorDaily
	(*SerLightningWarBoss)(nil),  // 51: SerLightningWarBoss
	(*SerBerlinWar)(nil),         // 52: SerBerlinWar
	(*SerBerlinRoleInfo)(nil),    // 53: SerBerlinRoleInfo
	(*SerBerlinCityInfo)(nil),    // 54: SerBerlinCityInfo
	(*SerBerlinRecord)(nil),      // 55: SerBerlinRecord
	(*SerPlayerExt)(nil),         // 56: SerPlayerExt
	(*SerPlayerNewYorkWar)(nil),  // 57: SerPlayerNewYorkWar
	(*SerPlayerWorldWar)(nil),    // 58: SerPlayerWorldWar
	(*SerSupplyRecord)(nil),      // 59: SerSupplyRecord
	(*SerDecisiveInfo)(nil),      // 60: SerDecisiveInfo
	(*SerMentorInfo)(nil),        // 61: SerMentorInfo
	(*MentorBetterEquip)(nil),    // 62: MentorBetterEquip
	(*DbWarPlane)(nil),           // 63: DbWarPlane
	(*DbDay7Act)(nil),            // 64: DbDay7Act
	(*DbDay7ActStatus)(nil),      // 65: DbDay7ActStatus
	(*DbAtkCityAct)(nil),         // 66: DbAtkCityAct
	(*SerActivity)(nil),          // 67: SerActivity
	(*DbActivity)(nil),           // 68: DbActivity
	(*SerChat)(nil),              // 69: SerChat
	(*SerTriggerGift)(nil),       // 70: SerTriggerGift
	(*DbTriggerGiftMap)(nil),     // 71: DbTriggerGiftMap
	(*DbCia)(nil),                // 72: DbCia
	(*DbPlayerRebellion)(nil),    // 73: DbPlayerRebellion
	(*DbAirshipPersonData)(nil),  // 74: DbAirshipPersonData
	(*SerMapEntityPb)(nil),       // 75: SerMapEntityPb
	(*SerPlayerArmyPb)(nil),      // 76: SerPlayerArmyPb
	(*SerMapBattlePb)(nil),       // 77: SerMapBattlePb
	(*SerMapInfoPb)(nil),         // 78: SerMapInfoPb
	(*SerMapExt1Pb)(nil),         // 79: SerMapExt1Pb
	(*SerSignInInfo)(nil),        // 80: SerSignInInfo
	(*SerCrossPersonalData)(nil), // 81: SerCrossPersonalData
	(*SerCrossFort)(nil),         // 82: SerCrossFort
	(*DbFortress)(nil),           // 83: DbFortress
	(*SerCrossRank)(nil),         // 84: SerCrossRank
	(*SerCrossPlayerLord)(nil),   // 85: SerCrossPlayerLord
	(*SerCrossPlayerWar)(nil),    // 86: SerCrossPlayerWar
	(*StrInt)(nil),               // 87: StrInt
	(*Hero)(nil),                 // 88: Hero
	(*Equip)(nil),                // 89: Equip
	(*Medal)(nil),                // 90: Medal
	(*Prop)(nil),                 // 91: Prop
	(*BuildQue)(nil),             // 92: BuildQue
	(*EquipQue)(nil),             // 93: EquipQue
	(*Task)(nil),                 // 94: Task
	(*Sectiontask)(nil),          // 95: Sectiontask
	(*Combat)(nil),               // 96: Combat
	(*CombatFB)(nil),             // 97: CombatFB
	(*StoneCombat)(nil),          // 98: StoneCombat
	(*PitchCombat)(nil),          // 99: PitchCombat
	(*MultCombat)(nil),           // 100: MultCombat
	(*Mail)(nil),                 // 101: Mail
	(*Report)(nil),               // 102: Report
	(*Area)(nil),                 // 103: Area
	(*City)(nil),                 // 104: City
	(*TwoInt)(nil),               // 105: TwoInt
	(*SuperMine)(nil),            // 106: SuperMine
	(*BattlePO)(nil),             // 107: BattlePO
	(*WorldTask)(nil),            // 108: WorldTask
	(*Force)(nil),                // 109: Force
	(*WorldSchedule)(nil),        // 110: WorldSchedule
	(*Mill)(nil),                 // 111: Mill
	(*BuildingBase)(nil),         // 112: BuildingBase
	(*Factory)(nil),              // 113: Factory
	(*Gains)(nil),                // 114: Gains
	(*Army)(nil),                 // 115: Army
	(*Tech)(nil),                 // 116: Tech
	(*TechQue)(nil),              // 117: TechQue
	(*ChemicalQue)(nil),          // 118: ChemicalQue
	(*History)(nil),              // 119: History
	(*PartyHonorRank)(nil),       // 120: PartyHonorRank
	(*PartyLog)(nil),             // 121: PartyLog
	(*PartyJob)(nil),             // 122: PartyJob
	(*PartyElection)(nil),        // 123: PartyElection
	(*PartySuperSupply)(nil),     // 124: PartySuperSupply
	(*PartySupply)(nil),          // 125: PartySupply
	(*RankEquip)(nil),            // 126: RankEquip
	(*TypeAwards)(nil),           // 127: TypeAwards
	(*SuperEquip)(nil),           // 128: SuperEquip
	(*RoleOpt)(nil),              // 129: RoleOpt
	(*WallNpc)(nil),              // 130: WallNpc
	(*Effect)(nil),               // 131: Effect
	(*DbFriend)(nil),             // 132: DbFriend
	(*DbMasterApprentice)(nil),   // 133: DbMasterApprentice
	(*CabinetLead)(nil),          // 134: CabinetLead
	(*Gestapo)(nil),              // 135: Gestapo
	(*Airship)(nil),              // 136: Airship
	(*GlobalRebellion)(nil),      // 137: GlobalRebellion
	(*CycleData)(nil),            // 138: CycleData
	(*IntLong)(nil),              // 139: IntLong
	(*HonorReport)(nil),          // 140: HonorReport
	(*HonorReport2)(nil),         // 141: HonorReport2
	(*BerlinForce)(nil),          // 142: BerlinForce
	(*Summon)(nil),               // 143: Summon
	(*IntListInt)(nil),           // 144: IntListInt
	(*StoneInfo)(nil),            // 145: StoneInfo
	(*DbSpecialProp)(nil),        // 146: DbSpecialProp
	(*OffLineBuild)(nil),         // 147: OffLineBuild
	(*FunCard)(nil),              // 148: FunCard
	(*EquipJewel)(nil),           // 149: EquipJewel
	(*Mentor)(nil),               // 150: Mentor
	(*MentorEquip)(nil),          // 151: MentorEquip
	(*MentorSkill)(nil),          // 152: MentorSkill
	(*ActBlackhawk)(nil),         // 153: ActBlackhawk
	(*ActBarton)(nil),            // 154: ActBarton
	(*DbActTurnplat)(nil),        // 155: DbActTurnplat
	(*DbEquipTurnplat)(nil),      // 156: DbEquipTurnplat
	(*DbChatHistory)(nil),        // 157: DbChatHistory
	(*DbChatDialogByLord)(nil),   // 158: DbChatDialogByLord
	(*Chat)(nil),                 // 159: Chat
	(*RedPacket)(nil),            // 160: RedPacket
	(*FemaleAgent)(nil),          // 161: FemaleAgent
	(*RebelBuff)(nil),            // 162: RebelBuff
	(*MapEntityPb)(nil),          // 163: MapEntityPb
	(*WorldWarPlanInfoPb)(nil),   // 164: WorldWarPlanInfoPb
	(*SignInInfo)(nil),           // 165: SignInInfo
	(*CrossRankItem)(nil),        // 166: CrossRankItem
	(*CrossLordPb)(nil),          // 167: CrossLordPb
}
var file_Serialize_proto_depIdxs = []int32{
	87,  // SerData.pushRecord:type_name -> StrInt
	88,  // SerHero.hero:type_name -> Hero
	72,  // SerHero.cia:type_name -> DbCia
	89,  // SerEquip.equip:type_name -> Equip
	90,  // SerMedal.medal:type_name -> Medal
	91,  // SerProp.prop:type_name -> Prop
	92,  // SerBuildQue.buildQue:type_name -> BuildQue
	93,  // SerEquipQue.que:type_name -> EquipQue
	94,  // SerTask.majorTask:type_name -> Task
	94,  // SerTask.dayiyTask:type_name -> Task
	94,  // SerTask.liveTask:type_name -> Task
	94,  // SerTask.worldTask:type_name -> Task
	95,  // SerTask.section:type_name -> Sectiontask
	96,  // SerCombat.combat:type_name -> Combat
	97,  // SerCombatFb.combatFb:type_name -> CombatFB
	98,  // SerCombatFb.stoneCombat:type_name -> StoneCombat
	99,  // SerCombatFb.pitchCombat:type_name -> PitchCombat
	100, // SerCombatFb.multCombat:type_name -> MultCombat
	101, // SerMail.mail:type_name -> Mail
	102, // SerReport.report:type_name -> Report
	103, // SerArea.area:type_name -> Area
	104, // SerCity.city:type_name -> City
	105, // SerBandit.bandit:type_name -> TwoInt
	105, // SerMine.mine:type_name -> TwoInt
	105, // SerMine.resource:type_name -> TwoInt
	106, // SerMine.superMine:type_name -> SuperMine
	107, // SerBattle.battle:type_name -> BattlePO
	107, // SerBattle.specialBattle:type_name -> BattlePO
	108, // SerWorldTask.worldTask:type_name -> WorldTask
	109, // SerWorldTask.force:type_name -> Force
	110, // SerWroldSchedule.worldSchedule:type_name -> WorldSchedule
	111, // SerMill.mill:type_name -> Mill
	112, // SerMill.buildExt:type_name -> BuildingBase
	113, // SerFactory.factory:type_name -> Factory
	114, // SerGains.gains:type_name -> Gains
	115, // SerArmy.army:type_name -> Army
	116, // SerTech.tech:type_name -> Tech
	117, // SerTech.techQue:type_name -> TechQue
	118, // SerChemical.que:type_name -> ChemicalQue
	105, // SerTreasure.idStatus:type_name -> TwoInt
	119, // SerTypeInfo.history:type_name -> History
	105, // SerShop.idCnt:type_name -> TwoInt
	105, // SerShop.freeCnt:type_name -> TwoInt
	120, // SerPartyHonorRank.rank:type_name -> PartyHonorRank
	121, // SerPartyLog.log:type_name -> PartyLog
	122, // SerPartyJob.job:type_name -> PartyJob
	123, // SerPartyJob.elect:type_name -> PartyElection
	59,  // SerPartyExt.supplyRecord:type_name -> SerSupplyRecord
	124, // SerPartyExt.superSupply:type_name -> PartySuperSupply
	125, // SerPartyExt.partySupply:type_name -> PartySupply
	105, // SerAcquisition.reward:type_name -> TwoInt
	105, // SerAcquisition.collect:type_name -> TwoInt
	105, // SerTrophy.trophy:type_name -> TwoInt
	126, // SerGlobalTrophy.rankEquips:type_name -> RankEquip
	127, // SerTypeAwards.reward:type_name -> TypeAwards
	128, // SerSuperEquip.superEquip:type_name -> SuperEquip
	105, // SerSuperEquipQue.que:type_name -> TwoInt
	129, // SerRoleOpt.opt:type_name -> RoleOpt
	130, // SerWallNpc.wallNpc:type_name -> WallNpc
	131, // SerEffects.effect:type_name -> Effect
	132, // SerFriend.dbFriend:type_name -> DbFriend
	133, // SerMasterApprentice.master:type_name -> DbMasterApprentice
	133, // SerMasterApprentice.apprentices:type_name -> DbMasterApprentice
	105, // SerMasterApprentice.awardedIds:type_name -> TwoInt
	134, // SerCabinetLead.cabinetLead:type_name -> CabinetLead
	135, // SerGestapo.gestapo:type_name -> Gestapo
	136, // SerGestapo.airship:type_name -> Airship
	51,  // SerGlobalExt.boss:type_name -> SerLightningWarBoss
	105, // SerGlobalExt.sendChatCnt:type_name -> TwoInt
	52,  // SerGlobalExt.berlinWar:type_name -> SerBerlinWar
	50,  // SerGlobalExt.honorDaily:type_name -> SerHonorDaily
	137, // SerGlobalExt.globalRebellion:type_name -> GlobalRebellion
	48,  // SerGlobalExt.counterAttack:type_name -> SerCounterAttack
	138, // SerCounterAttack.cycleData:type_name -> CycleData
	139, // SerCounterAttack.roleInfo:type_name -> IntLong
	109, // SerCounterAttack.force:type_name -> Force
	49,  // SerCounterAttack.shopInfo:type_name -> SerCounterShop
	105, // SerCounterShop.shopInfo:type_name -> TwoInt
	140, // SerHonorDaily.dailyReports:type_name -> HonorReport
	141, // SerHonorDaily.reports2:type_name -> HonorReport2
	109, // SerLightningWarBoss.force:type_name -> Force
	54,  // SerBerlinWar.berlinCity:type_name -> SerBerlinCityInfo
	54,  // SerBerlinWar.battleFront:type_name -> SerBerlinCityInfo
	102, // SerBerlinWar.reports:type_name -> Report
	55,  // SerBerlinWar.records:type_name -> SerBerlinRecord
	139, // SerBerlinWar.historyWinner:type_name -> IntLong
	139, // SerBerlinWar.berliJobs:type_name -> IntLong
	53,  // SerBerlinWar.roleInfos:type_name -> SerBerlinRoleInfo
	105, // SerBerlinRoleInfo.statusData:type_name -> TwoInt
	105, // SerBerlinRoleInfo.countData:type_name -> TwoInt
	105, // SerBerlinCityInfo.statusTime:type_name -> TwoInt
	109, // SerBerlinCityInfo.cityDef:type_name -> Force
	142, // SerBerlinCityInfo.roleQueue:type_name -> BerlinForce
	143, // SerPlayerExt.summon:type_name -> Summon
	144, // SerPlayerExt.battleHeroPos:type_name -> IntListInt
	71,  // SerPlayerExt.dbTriggerGiftMap:type_name -> DbTriggerGiftMap
	145, // SerPlayerExt.stoneInfo:type_name -> StoneInfo
	66,  // SerPlayerExt.atkCityAct:type_name -> DbAtkCityAct
	146, // SerPlayerExt.specialProp:type_name -> DbSpecialProp
	105, // SerPlayerExt.mixtureData:type_name -> TwoInt
	147, // SerPlayerExt.offLineBuild:type_name -> OffLineBuild
	105, // SerPlayerExt.planeChips:type_name -> TwoInt
	63,  // SerPlayerExt.dbPlane:type_name -> DbWarPlane
	73,  // SerPlayerExt.dbPlayerRebellion:type_name -> DbPlayerRebellion
	148, // SerPlayerExt.funCard:type_name -> FunCard
	60,  // SerPlayerExt.decisiveInfo:type_name -> SerDecisiveInfo
	61,  // SerPlayerExt.mentorInfo:type_name -> SerMentorInfo
	74,  // SerPlayerExt.airshipPersonData:type_name -> DbAirshipPersonData
	59,  // SerPlayerExt.supplyRecord:type_name -> SerSupplyRecord
	149, // SerPlayerExt.jewel:type_name -> EquipJewel
	58,  // SerPlayerExt.worldWar:type_name -> SerPlayerWorldWar
	57,  // SerPlayerExt.newYorkWar:type_name -> SerPlayerNewYorkWar
	105, // SerPlayerExt.ownCastleSkinTime:type_name -> TwoInt
	105, // SerPlayerNewYorkWar.achievements:type_name -> TwoInt
	105, // SerPlayerWorldWar.dailyAttackAward:type_name -> TwoInt
	105, // SerPlayerWorldWar.restrictTask:type_name -> TwoInt
	105, // SerPlayerWorldWar.restrictTaskAward:type_name -> TwoInt
	105, // SerPlayerWorldWar.weekAward:type_name -> TwoInt
	105, // SerPlayerWorldWar.attackCityAward:type_name -> TwoInt
	105, // SerPlayerWorldWar.seasonShop:type_name -> TwoInt
	105, // SerSupplyRecord.statusMap:type_name -> TwoInt
	105, // SerSupplyRecord.superSupplyStatus:type_name -> TwoInt
	150, // SerMentorInfo.mentors:type_name -> Mentor
	151, // SerMentorInfo.equips:type_name -> MentorEquip
	152, // SerMentorInfo.skills:type_name -> MentorSkill
	62,  // SerMentorInfo.betters:type_name -> MentorBetterEquip
	105, // MentorBetterEquip.equipInfo:type_name -> TwoInt
	105, // DbDay7Act.status:type_name -> TwoInt
	87,  // DbDay7Act.tankTypes:type_name -> StrInt
	65,  // DbDay7Act.typeCnt:type_name -> DbDay7ActStatus
	105, // DbDay7ActStatus.status:type_name -> TwoInt
	87,  // DbAtkCityAct.tankTypes:type_name -> StrInt
	65,  // DbAtkCityAct.typeCnt:type_name -> DbDay7ActStatus
	105, // DbAtkCityAct.status:type_name -> TwoInt
	105, // DbAtkCityAct.statusCnt:type_name -> TwoInt
	68,  // SerActivity.activity:type_name -> DbActivity
	153, // SerActivity.actBlackhawk:type_name -> ActBlackhawk
	154, // SerActivity.actBarton:type_name -> ActBarton
	139, // DbActivity.status:type_name -> IntLong
	105, // DbActivity.towInt:type_name -> TwoInt
	105, // DbActivity.prop:type_name -> TwoInt
	105, // DbActivity.save:type_name -> TwoInt
	155, // DbActivity.turnplat:type_name -> DbActTurnplat
	156, // DbActivity.equipTurnplat:type_name -> DbEquipTurnplat
	157, // SerChat.chatHistory:type_name -> DbChatHistory
	158, // SerChat.chatDialog:type_name -> DbChatDialogByLord
	159, // SerChat.worldRoleChat:type_name -> Chat
	160, // SerChat.redPacket:type_name -> RedPacket
	70,  // DbTriggerGiftMap.serTriggerGift:type_name -> SerTriggerGift
	161, // DbCia.femaleAgent:type_name -> FemaleAgent
	162, // DbPlayerRebellion.buffs:type_name -> RebelBuff
	163, // SerMapEntityPb.mapEntity:type_name -> MapEntityPb
	115, // SerPlayerArmyPb.army:type_name -> Army
	107, // SerMapBattlePb.battle:type_name -> BattlePO
	164, // SerMapInfoPb.warPlanInfo:type_name -> WorldWarPlanInfoPb
	136, // SerMapExt1Pb.airship:type_name -> Airship
	165, // SerSignInInfo.signInInfo:type_name -> SignInInfo
	83,  // SerCrossFort.fort:type_name -> DbFortress
	109, // DbFortress.npcForce:type_name -> Force
	166, // SerCrossRank.campRank:type_name -> CrossRankItem
	166, // SerCrossRank.personalRank:type_name -> CrossRankItem
	167, // SerCrossPlayerLord.lordPb:type_name -> CrossLordPb
}

func init() { file_Serialize_proto_init() }
func file_Serialize_proto_init() {
	if File_Serialize_proto != nil {
		return
	}
	file_Common_proto_init()
	File_Serialize_proto = protoimpl.FileBuilder{
		RawDescriptor:      file_Serialize_proto_rawDesc,
		GoTypes:            file_Serialize_proto_goTypes,
		DependencyIndexes:  file_Serialize_proto_depIdxs,
		MessageOutputTypes: file_Serialize_proto_msgTypes,
		FilesRegistry:      protoregistry.GlobalFiles,
		TypesRegistry:      protoregistry.GlobalTypes,
	}.Init()
	file_Serialize_proto_rawDesc = nil
	file_Serialize_proto_goTypes = nil
	file_Serialize_proto_depIdxs = nil
}
