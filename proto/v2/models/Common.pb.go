// Code generated by protoc-gen-go. DO NOT EDIT.
// source: Common.proto

package models

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoregistry "google.golang.org/protobuf/reflect/protoregistry"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	sync "sync"
)

const (
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 0)
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(0 - protoimpl.MinVersion)
)

// 战斗buff的常量定义
type FightBuffParam int32

const (
	FightBuffParam_FIRST_RELEASE FightBuffParam = 1
	FightBuffParam_DEFENCE_HURT  FightBuffParam = 2
)

// Deprecated: Use FightBuffParam.Type.Values instead.
var FightBuffParam_name = map[int32]string{
	1: "FIRST_RELEASE",
	2: "DEFENCE_HURT",
}

// Deprecated: Use FightBuffParam.Type.Values instead.
var FightBuffParam_value = map[string]int32{
	"FIRST_RELEASE": 1,
	"DEFENCE_HURT":  2,
}

func (x FightBuffParam) Enum() *FightBuffParam {
	p := new(FightBuffParam)
	*p = x
	return p
}

func (x FightBuffParam) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FightBuffParam) Descriptor() protoreflect.EnumDescriptor {
	return file_Common_proto_enumTypes[0].Descriptor()
}

// Deprecated: Use Descriptor instead.
func (FightBuffParam) Type() protoreflect.EnumType {
	return file_Common_proto_enumTypes[0]
}

func (x FightBuffParam) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *FightBuffParam) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = FightBuffParam(num)
	return nil
}

// Deprecated: Use FightBuffParam.Type instead.
func (FightBuffParam) EnumDescriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{0}
}

//*
// 阵营类型定义
type CampType int32

const (
	CampType_Camp_LJ CampType = 1
	CampType_Camp_MJ CampType = 2
	CampType_Camp_DG CampType = 3
)

// Deprecated: Use CampType.Type.Values instead.
var CampType_name = map[int32]string{
	1: "Camp_LJ",
	2: "Camp_MJ",
	3: "Camp_DG",
}

// Deprecated: Use CampType.Type.Values instead.
var CampType_value = map[string]int32{
	"Camp_LJ": 1,
	"Camp_MJ": 2,
	"Camp_DG": 3,
}

func (x CampType) Enum() *CampType {
	p := new(CampType)
	*p = x
	return p
}

func (x CampType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CampType) Descriptor() protoreflect.EnumDescriptor {
	return file_Common_proto_enumTypes[1].Descriptor()
}

// Deprecated: Use Descriptor instead.
func (CampType) Type() protoreflect.EnumType {
	return file_Common_proto_enumTypes[1]
}

func (x CampType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CampType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CampType(num)
	return nil
}

// Deprecated: Use CampType.Type instead.
func (CampType) EnumDescriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{1}
}

//*
// 服务区开放状态
type ServerOpenStatus int32

const (
	ServerOpenStatus_ServerHot  ServerOpenStatus = 1
	ServerOpenStatus_ServerNew  ServerOpenStatus = 2
	ServerOpenStatus_ServerStop ServerOpenStatus = 3
)

// Deprecated: Use ServerOpenStatus.Type.Values instead.
var ServerOpenStatus_name = map[int32]string{
	1: "ServerHot",
	2: "ServerNew",
	3: "ServerStop",
}

// Deprecated: Use ServerOpenStatus.Type.Values instead.
var ServerOpenStatus_value = map[string]int32{
	"ServerHot":  1,
	"ServerNew":  2,
	"ServerStop": 3,
}

func (x ServerOpenStatus) Enum() *ServerOpenStatus {
	p := new(ServerOpenStatus)
	*p = x
	return p
}

func (x ServerOpenStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServerOpenStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_Common_proto_enumTypes[2].Descriptor()
}

// Deprecated: Use Descriptor instead.
func (ServerOpenStatus) Type() protoreflect.EnumType {
	return file_Common_proto_enumTypes[2]
}

func (x ServerOpenStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ServerOpenStatus) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ServerOpenStatus(num)
	return nil
}

// Deprecated: Use ServerOpenStatus.Type instead.
func (ServerOpenStatus) EnumDescriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{2}
}

type TwoInt struct {
	V1                   *int32                  `protobuf:"varint,1,req,name=v1" json:"v1,omitempty"`
	V2                   *int32                  `protobuf:"varint,2,req,name=v2" json:"v2,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *TwoInt) Reset() {
	*x = TwoInt{}
}

func (x *TwoInt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TwoInt) ProtoMessage() {}

func (x *TwoInt) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[0].MessageOf(x)
}

func (m *TwoInt) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[0].Methods()
}

// Deprecated: Use TwoInt.ProtoReflect.Type instead.
func (*TwoInt) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{0}
}

func (x *TwoInt) GetV1() int32 {
	if x != nil && x.V1 != nil {
		return *x.V1
	}
	return 0
}

func (x *TwoInt) GetV2() int32 {
	if x != nil && x.V2 != nil {
		return *x.V2
	}
	return 0
}

type StrInt struct {
	V1                   *string                 `protobuf:"bytes,1,req,name=v1" json:"v1,omitempty"`
	V2                   *int32                  `protobuf:"varint,2,req,name=v2" json:"v2,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *StrInt) Reset() {
	*x = StrInt{}
}

func (x *StrInt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StrInt) ProtoMessage() {}

func (x *StrInt) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[1].MessageOf(x)
}

func (m *StrInt) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[1].Methods()
}

// Deprecated: Use StrInt.ProtoReflect.Type instead.
func (*StrInt) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{1}
}

func (x *StrInt) GetV1() string {
	if x != nil && x.V1 != nil {
		return *x.V1
	}
	return ""
}

func (x *StrInt) GetV2() int32 {
	if x != nil && x.V2 != nil {
		return *x.V2
	}
	return 0
}

type IntLong struct {
	V1                   *int32                  `protobuf:"varint,1,req,name=v1" json:"v1,omitempty"`
	V2                   *int64                  `protobuf:"varint,2,req,name=v2" json:"v2,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *IntLong) Reset() {
	*x = IntLong{}
}

func (x *IntLong) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntLong) ProtoMessage() {}

func (x *IntLong) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[2].MessageOf(x)
}

func (m *IntLong) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[2].Methods()
}

// Deprecated: Use IntLong.ProtoReflect.Type instead.
func (*IntLong) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{2}
}

func (x *IntLong) GetV1() int32 {
	if x != nil && x.V1 != nil {
		return *x.V1
	}
	return 0
}

func (x *IntLong) GetV2() int64 {
	if x != nil && x.V2 != nil {
		return *x.V2
	}
	return 0
}

type IntDouble struct {
	V1                   *int32                  `protobuf:"varint,1,req,name=v1" json:"v1,omitempty"`
	V2                   *float64                `protobuf:"fixed64,2,req,name=v2" json:"v2,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *IntDouble) Reset() {
	*x = IntDouble{}
}

func (x *IntDouble) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntDouble) ProtoMessage() {}

func (x *IntDouble) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[3].MessageOf(x)
}

func (m *IntDouble) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[3].Methods()
}

// Deprecated: Use IntDouble.ProtoReflect.Type instead.
func (*IntDouble) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{3}
}

func (x *IntDouble) GetV1() int32 {
	if x != nil && x.V1 != nil {
		return *x.V1
	}
	return 0
}

func (x *IntDouble) GetV2() float64 {
	if x != nil && x.V2 != nil {
		return *x.V2
	}
	return 0
}

type IntListInt struct {
	V1                   *int32                  `protobuf:"varint,1,req,name=v1" json:"v1,omitempty"`
	V2                   []int32                 `protobuf:"varint,2,rep,name=v2" json:"v2,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *IntListInt) Reset() {
	*x = IntListInt{}
}

func (x *IntListInt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntListInt) ProtoMessage() {}

func (x *IntListInt) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[4].MessageOf(x)
}

func (m *IntListInt) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[4].Methods()
}

// Deprecated: Use IntListInt.ProtoReflect.Type instead.
func (*IntListInt) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{4}
}

func (x *IntListInt) GetV1() int32 {
	if x != nil && x.V1 != nil {
		return *x.V1
	}
	return 0
}

func (x *IntListInt) GetV2() []int32 {
	if x != nil {
		return x.V2
	}
	return nil
}

type LongInt struct {
	V1                   *int64                  `protobuf:"varint,1,req,name=v1" json:"v1,omitempty"`
	V2                   *int32                  `protobuf:"varint,2,req,name=v2" json:"v2,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *LongInt) Reset() {
	*x = LongInt{}
}

func (x *LongInt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LongInt) ProtoMessage() {}

func (x *LongInt) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[5].MessageOf(x)
}

func (m *LongInt) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[5].Methods()
}

// Deprecated: Use LongInt.ProtoReflect.Type instead.
func (*LongInt) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{5}
}

func (x *LongInt) GetV1() int64 {
	if x != nil && x.V1 != nil {
		return *x.V1
	}
	return 0
}

func (x *LongInt) GetV2() int32 {
	if x != nil && x.V2 != nil {
		return *x.V2
	}
	return 0
}

type IntDoubles struct {
	Ls                   []*IntDouble            `protobuf:"bytes,1,rep,name=ls" json:"ls,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *IntDoubles) Reset() {
	*x = IntDoubles{}
}

func (x *IntDoubles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntDoubles) ProtoMessage() {}

func (x *IntDoubles) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[6].MessageOf(x)
}

func (m *IntDoubles) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[6].Methods()
}

// Deprecated: Use IntDoubles.ProtoReflect.Type instead.
func (*IntDoubles) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{6}
}

func (x *IntDoubles) GetLs() []*IntDouble {
	if x != nil {
		return x.Ls
	}
	return nil
}

//资源
type Resource struct {
	Oil                  *int64                  `protobuf:"varint,1,opt,name=oil" json:"oil,omitempty"`
	Ele                  *int64                  `protobuf:"varint,2,opt,name=ele" json:"ele,omitempty"`
	Food                 *int64                  `protobuf:"varint,3,opt,name=food" json:"food,omitempty"`
	Ore                  *int64                  `protobuf:"varint,4,opt,name=ore" json:"ore,omitempty"`
	Uranium              *int64                  `protobuf:"varint,5,opt,name=uranium" json:"uranium,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *Resource) Reset() {
	*x = Resource{}
}

func (x *Resource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource) ProtoMessage() {}

func (x *Resource) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[7].MessageOf(x)
}

func (m *Resource) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[7].Methods()
}

// Deprecated: Use Resource.ProtoReflect.Type instead.
func (*Resource) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{7}
}

func (x *Resource) GetOil() int64 {
	if x != nil && x.Oil != nil {
		return *x.Oil
	}
	return 0
}

func (x *Resource) GetEle() int64 {
	if x != nil && x.Ele != nil {
		return *x.Ele
	}
	return 0
}

func (x *Resource) GetFood() int64 {
	if x != nil && x.Food != nil {
		return *x.Food
	}
	return 0
}

func (x *Resource) GetOre() int64 {
	if x != nil && x.Ore != nil {
		return *x.Ore
	}
	return 0
}

func (x *Resource) GetUranium() int64 {
	if x != nil && x.Uranium != nil {
		return *x.Uranium
	}
	return 0
}

//兵力
type Arm struct {
	Arm1                 *int64                  `protobuf:"varint,1,opt,name=arm1" json:"arm1,omitempty"`
	Arm2                 *int64                  `protobuf:"varint,2,opt,name=arm2" json:"arm2,omitempty"`
	Arm3                 *int64                  `protobuf:"varint,3,opt,name=arm3" json:"arm3,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *Arm) Reset() {
	*x = Arm{}
}

func (x *Arm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Arm) ProtoMessage() {}

func (x *Arm) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[8].MessageOf(x)
}

func (m *Arm) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[8].Methods()
}

// Deprecated: Use Arm.ProtoReflect.Type instead.
func (*Arm) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{8}
}

func (x *Arm) GetArm1() int64 {
	if x != nil && x.Arm1 != nil {
		return *x.Arm1
	}
	return 0
}

func (x *Arm) GetArm2() int64 {
	if x != nil && x.Arm2 != nil {
		return *x.Arm2
	}
	return 0
}

func (x *Arm) GetArm3() int64 {
	if x != nil && x.Arm3 != nil {
		return *x.Arm3
	}
	return 0
}

//资源加成
type ResAdd struct {
	ResId                *int32                  `protobuf:"varint,1,opt,name=resId" json:"resId,omitempty"`
	BaseAdd              *int32                  `protobuf:"varint,2,opt,name=baseAdd" json:"baseAdd,omitempty"`
	TechAdd              *int32                  `protobuf:"varint,3,opt,name=techAdd" json:"techAdd,omitempty"`
	SeasonAdd            *int32                  `protobuf:"varint,4,opt,name=seasonAdd" json:"seasonAdd,omitempty"`
	ActiveAdd            *int32                  `protobuf:"varint,5,opt,name=activeAdd" json:"activeAdd,omitempty"`
	WeatherAdd           *int32                  `protobuf:"varint,6,opt,name=weatherAdd" json:"weatherAdd,omitempty"`
	AgentAdd             *int32                  `protobuf:"varint,7,opt,name=agentAdd" json:"agentAdd,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *ResAdd) Reset() {
	*x = ResAdd{}
}

func (x *ResAdd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResAdd) ProtoMessage() {}

func (x *ResAdd) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[9].MessageOf(x)
}

func (m *ResAdd) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[9].Methods()
}

// Deprecated: Use ResAdd.ProtoReflect.Type instead.
func (*ResAdd) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{9}
}

func (x *ResAdd) GetResId() int32 {
	if x != nil && x.ResId != nil {
		return *x.ResId
	}
	return 0
}

func (x *ResAdd) GetBaseAdd() int32 {
	if x != nil && x.BaseAdd != nil {
		return *x.BaseAdd
	}
	return 0
}

func (x *ResAdd) GetTechAdd() int32 {
	if x != nil && x.TechAdd != nil {
		return *x.TechAdd
	}
	return 0
}

func (x *ResAdd) GetSeasonAdd() int32 {
	if x != nil && x.SeasonAdd != nil {
		return *x.SeasonAdd
	}
	return 0
}

func (x *ResAdd) GetActiveAdd() int32 {
	if x != nil && x.ActiveAdd != nil {
		return *x.ActiveAdd
	}
	return 0
}

func (x *ResAdd) GetWeatherAdd() int32 {
	if x != nil && x.WeatherAdd != nil {
		return *x.WeatherAdd
	}
	return 0
}

func (x *ResAdd) GetAgentAdd() int32 {
	if x != nil && x.AgentAdd != nil {
		return *x.AgentAdd
	}
	return 0
}

//玩家完成事件
type RoleOpt struct {
	Type                 *int32                  `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Param                []string                `protobuf:"bytes,2,rep,name=param" json:"param,omitempty"`
	EndTime              *int32                  `protobuf:"varint,3,opt,name=endTime" json:"endTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *RoleOpt) Reset() {
	*x = RoleOpt{}
}

func (x *RoleOpt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleOpt) ProtoMessage() {}

func (x *RoleOpt) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[10].MessageOf(x)
}

func (m *RoleOpt) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[10].Methods()
}

// Deprecated: Use RoleOpt.ProtoReflect.Type instead.
func (*RoleOpt) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{10}
}

func (x *RoleOpt) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *RoleOpt) GetParam() []string {
	if x != nil {
		return x.Param
	}
	return nil
}

func (x *RoleOpt) GetEndTime() int32 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

// 建筑队列
type BuildQue struct {
	KeyId                *int32                  `protobuf:"varint,1,req,name=keyId" json:"keyId,omitempty"`
	Index                *int32                  `protobuf:"varint,2,opt,name=index" json:"index,omitempty"`
	BuildingType         *int32                  `protobuf:"varint,3,req,name=buildingType" json:"buildingType,omitempty"`
	Id                   *int32                  `protobuf:"varint,4,opt,name=id" json:"id,omitempty"`
	Period               *int32                  `protobuf:"varint,5,req,name=period" json:"period,omitempty"`
	EndTime              *int32                  `protobuf:"varint,6,opt,name=endTime" json:"endTime,omitempty"`
	Free                 *int32                  `protobuf:"varint,7,opt,name=free" json:"free,omitempty"`
	Param                *int32                  `protobuf:"varint,8,opt,name=param" json:"param,omitempty"`
	FromType             *int32                  `protobuf:"varint,9,opt,name=fromType" json:"fromType,omitempty"`
	NewType              *int32                  `protobuf:"varint,10,opt,name=newType" json:"newType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *BuildQue) Reset() {
	*x = BuildQue{}
}

func (x *BuildQue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildQue) ProtoMessage() {}

func (x *BuildQue) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[11].MessageOf(x)
}

func (m *BuildQue) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[11].Methods()
}

// Deprecated: Use BuildQue.ProtoReflect.Type instead.
func (*BuildQue) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{11}
}

func (x *BuildQue) GetKeyId() int32 {
	if x != nil && x.KeyId != nil {
		return *x.KeyId
	}
	return 0
}

func (x *BuildQue) GetIndex() int32 {
	if x != nil && x.Index != nil {
		return *x.Index
	}
	return 0
}

func (x *BuildQue) GetBuildingType() int32 {
	if x != nil && x.BuildingType != nil {
		return *x.BuildingType
	}
	return 0
}

func (x *BuildQue) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *BuildQue) GetPeriod() int32 {
	if x != nil && x.Period != nil {
		return *x.Period
	}
	return 0
}

func (x *BuildQue) GetEndTime() int32 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

func (x *BuildQue) GetFree() int32 {
	if x != nil && x.Free != nil {
		return *x.Free
	}
	return 0
}

func (x *BuildQue) GetParam() int32 {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return 0
}

func (x *BuildQue) GetFromType() int32 {
	if x != nil && x.FromType != nil {
		return *x.FromType
	}
	return 0
}

func (x *BuildQue) GetNewType() int32 {
	if x != nil && x.NewType != nil {
		return *x.NewType
	}
	return 0
}

// 募兵队列
type ArmQue struct {
	KeyId                *int32                  `protobuf:"varint,1,req,name=keyId" json:"keyId,omitempty"`
	Id                   *int32                  `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	AddArm               *int32                  `protobuf:"varint,3,req,name=addArm" json:"addArm,omitempty"`
	EndTime              *int32                  `protobuf:"varint,4,opt,name=endTime" json:"endTime,omitempty"`
	Time                 *int32                  `protobuf:"varint,5,opt,name=time" json:"time,omitempty"`
	Free                 *int32                  `protobuf:"varint,6,opt,name=free" json:"free,omitempty"`
	Param                *int32                  `protobuf:"varint,7,opt,name=param" json:"param,omitempty"`
	NeedFood             *int32                  `protobuf:"varint,8,opt,name=needFood" json:"needFood,omitempty"`
	IsNotExtendQue       *bool                   `protobuf:"varint,9,opt,name=isNotExtendQue" json:"isNotExtendQue,omitempty"`
	NeedOIL              *int32                  `protobuf:"varint,10,opt,name=needOIL" json:"needOIL,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *ArmQue) Reset() {
	*x = ArmQue{}
}

func (x *ArmQue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArmQue) ProtoMessage() {}

func (x *ArmQue) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[12].MessageOf(x)
}

func (m *ArmQue) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[12].Methods()
}

// Deprecated: Use ArmQue.ProtoReflect.Type instead.
func (*ArmQue) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{12}
}

func (x *ArmQue) GetKeyId() int32 {
	if x != nil && x.KeyId != nil {
		return *x.KeyId
	}
	return 0
}

func (x *ArmQue) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *ArmQue) GetAddArm() int32 {
	if x != nil && x.AddArm != nil {
		return *x.AddArm
	}
	return 0
}

func (x *ArmQue) GetEndTime() int32 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

func (x *ArmQue) GetTime() int32 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return 0
}

func (x *ArmQue) GetFree() int32 {
	if x != nil && x.Free != nil {
		return *x.Free
	}
	return 0
}

func (x *ArmQue) GetParam() int32 {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return 0
}

func (x *ArmQue) GetNeedFood() int32 {
	if x != nil && x.NeedFood != nil {
		return *x.NeedFood
	}
	return 0
}

func (x *ArmQue) GetIsNotExtendQue() bool {
	if x != nil && x.IsNotExtendQue != nil {
		return *x.IsNotExtendQue
	}
	return false
}

func (x *ArmQue) GetNeedOIL() int32 {
	if x != nil && x.NeedOIL != nil {
		return *x.NeedOIL
	}
	return 0
}

//兵营招募
type Factory struct {
	Id                   *int32                  `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	FctLv                *int32                  `protobuf:"varint,2,req,name=fctLv" json:"fctLv,omitempty"`
	FctExpLv             *int32                  `protobuf:"varint,3,opt,name=fctExpLv" json:"fctExpLv,omitempty"`
	ArmQue               []*ArmQue               `protobuf:"bytes,4,rep,name=armQue" json:"armQue,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *Factory) Reset() {
	*x = Factory{}
}

func (x *Factory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Factory) ProtoMessage() {}

func (x *Factory) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[13].MessageOf(x)
}

func (m *Factory) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[13].Methods()
}

// Deprecated: Use Factory.ProtoReflect.Type instead.
func (*Factory) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{13}
}

func (x *Factory) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *Factory) GetFctLv() int32 {
	if x != nil && x.FctLv != nil {
		return *x.FctLv
	}
	return 0
}

func (x *Factory) GetFctExpLv() int32 {
	if x != nil && x.FctExpLv != nil {
		return *x.FctExpLv
	}
	return 0
}

func (x *Factory) GetArmQue() []*ArmQue {
	if x != nil {
		return x.ArmQue
	}
	return nil
}

//城内建筑
type BuildingBase struct {
	Type                 *int32                  `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Id                   *int32                  `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	Lv                   *int32                  `protobuf:"varint,3,opt,name=lv" json:"lv,omitempty"`
	Unlock               *bool                   `protobuf:"varint,4,opt,name=unlock" json:"unlock,omitempty"`
	UnLockTime           *int32                  `protobuf:"varint,5,opt,name=unLockTime" json:"unLockTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *BuildingBase) Reset() {
	*x = BuildingBase{}
}

func (x *BuildingBase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildingBase) ProtoMessage() {}

func (x *BuildingBase) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[14].MessageOf(x)
}

func (m *BuildingBase) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[14].Methods()
}

// Deprecated: Use BuildingBase.ProtoReflect.Type instead.
func (*BuildingBase) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{14}
}

func (x *BuildingBase) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *BuildingBase) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *BuildingBase) GetLv() int32 {
	if x != nil && x.Lv != nil {
		return *x.Lv
	}
	return 0
}

func (x *BuildingBase) GetUnlock() bool {
	if x != nil && x.Unlock != nil {
		return *x.Unlock
	}
	return false
}

func (x *BuildingBase) GetUnLockTime() int32 {
	if x != nil && x.UnLockTime != nil {
		return *x.UnLockTime
	}
	return 0
}

//资源建筑
type Mill struct {
	Type                 *int32                  `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Id                   *int32                  `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	Lv                   *int32                  `protobuf:"varint,3,opt,name=lv" json:"lv,omitempty"`
	GainCnt              *int32                  `protobuf:"varint,4,opt,name=gainCnt" json:"gainCnt,omitempty"`
	ResTime              *int32                  `protobuf:"varint,5,opt,name=resTime" json:"resTime,omitempty"`
	Unlock               *bool                   `protobuf:"varint,6,opt,name=unlock" json:"unlock,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *Mill) Reset() {
	*x = Mill{}
}

func (x *Mill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mill) ProtoMessage() {}

func (x *Mill) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[15].MessageOf(x)
}

func (m *Mill) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[15].Methods()
}

// Deprecated: Use Mill.ProtoReflect.Type instead.
func (*Mill) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{15}
}

func (x *Mill) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *Mill) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *Mill) GetLv() int32 {
	if x != nil && x.Lv != nil {
		return *x.Lv
	}
	return 0
}

func (x *Mill) GetGainCnt() int32 {
	if x != nil && x.GainCnt != nil {
		return *x.GainCnt
	}
	return 0
}

func (x *Mill) GetResTime() int32 {
	if x != nil && x.ResTime != nil {
		return *x.ResTime
	}
	return 0
}

func (x *Mill) GetUnlock() bool {
	if x != nil && x.Unlock != nil {
		return *x.Unlock
	}
	return false
}

//官员效果加成
type Gains struct {
	Type                 *int32                  `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Id                   *int32                  `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	EndTime              *int32                  `protobuf:"varint,3,opt,name=endTime" json:"endTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *Gains) Reset() {
	*x = Gains{}
}

func (x *Gains) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Gains) ProtoMessage() {}

func (x *Gains) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[16].MessageOf(x)
}

func (m *Gains) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[16].Methods()
}

// Deprecated: Use Gains.ProtoReflect.Type instead.
func (*Gains) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{16}
}

func (x *Gains) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *Gains) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *Gains) GetEndTime() int32 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

type Award struct {
	Type                 *int32                  `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	Id                   *int32                  `protobuf:"varint,2,req,name=id" json:"id,omitempty"`
	Count                *int32                  `protobuf:"varint,3,req,name=count" json:"count,omitempty"`
	KeyId                *int32                  `protobuf:"varint,4,opt,name=keyId" json:"keyId,omitempty"`
	Param                []int32                 `protobuf:"varint,5,rep,name=param" json:"param,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *Award) Reset() {
	*x = Award{}
}

func (x *Award) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Award) ProtoMessage() {}

func (x *Award) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[17].MessageOf(x)
}

func (m *Award) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[17].Methods()
}

// Deprecated: Use Award.ProtoReflect.Type instead.
func (*Award) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{17}
}

func (x *Award) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *Award) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *Award) GetCount() int32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *Award) GetKeyId() int32 {
	if x != nil && x.KeyId != nil {
		return *x.KeyId
	}
	return 0
}

func (x *Award) GetParam() []int32 {
	if x != nil {
		return x.Param
	}
	return nil
}

// 将领
type Hero struct {
	HeroId               *int32                  `protobuf:"varint,1,req,name=heroId" json:"heroId,omitempty"`
	Level                *int32                  `protobuf:"varint,2,req,name=level" json:"level,omitempty"`
	Exp                  *int32                  `protobuf:"varint,3,req,name=exp" json:"exp,omitempty"`
	Attr                 []*TwoInt               `protobuf:"bytes,4,rep,name=attr" json:"attr,omitempty"`
	Wash                 []*TwoInt               `protobuf:"bytes,5,rep,name=wash" json:"wash,omitempty"`
	Equip                []*TwoInt               `protobuf:"bytes,6,rep,name=equip" json:"equip,omitempty"`
	Status               *int32                  `protobuf:"varint,7,req,name=status" json:"status,omitempty"`
	Count                *int32                  `protobuf:"varint,8,opt,name=count" json:"count,omitempty"`
	Pos                  *int32                  `protobuf:"varint,9,opt,name=pos" json:"pos,omitempty"`
	State                *int32                  `protobuf:"varint,10,opt,name=state" json:"state,omitempty"`
	WallPos              *int32                  `protobuf:"varint,11,opt,name=wallPos" json:"wallPos,omitempty"`
	BreakExp             *int32                  `protobuf:"varint,12,opt,name=breakExp" json:"breakExp,omitempty"`
	WallArmyTime         *int32                  `protobuf:"varint,13,opt,name=wallArmyTime" json:"wallArmyTime,omitempty"`
	Quality              *int32                  `protobuf:"varint,14,opt,name=quality" json:"quality,omitempty"`
	WashTotalFloorCount  *int32                  `protobuf:"varint,15,opt,name=washTotalFloorCount" json:"washTotalFloorCount,omitempty"`
	AcqPos               *int32                  `protobuf:"varint,16,opt,name=acqPos" json:"acqPos,omitempty"`
	DefPos               *int32                  `protobuf:"varint,17,opt,name=defPos" json:"defPos,omitempty"`
	Decorated            *int32                  `protobuf:"varint,18,opt,name=decorated" json:"decorated,omitempty"`
	WarPlane             []*TwoInt               `protobuf:"bytes,19,rep,name=warPlane" json:"warPlane,omitempty"`
	ShowFight            []*TwoInt               `protobuf:"bytes,20,rep,name=showFight" json:"showFight,omitempty"`
	PlanePos             []*TwoInt               `protobuf:"bytes,21,rep,name=planePos" json:"planePos,omitempty"`
	ComandoPos           *int32                  `protobuf:"varint,22,opt,name=comandoPos" json:"comandoPos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *Hero) Reset() {
	*x = Hero{}
}

func (x *Hero) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Hero) ProtoMessage() {}

func (x *Hero) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[18].MessageOf(x)
}

func (m *Hero) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[18].Methods()
}

// Deprecated: Use Hero.ProtoReflect.Type instead.
func (*Hero) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{18}
}

func (x *Hero) GetHeroId() int32 {
	if x != nil && x.HeroId != nil {
		return *x.HeroId
	}
	return 0
}

func (x *Hero) GetLevel() int32 {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return 0
}

func (x *Hero) GetExp() int32 {
	if x != nil && x.Exp != nil {
		return *x.Exp
	}
	return 0
}

func (x *Hero) GetAttr() []*TwoInt {
	if x != nil {
		return x.Attr
	}
	return nil
}

func (x *Hero) GetWash() []*TwoInt {
	if x != nil {
		return x.Wash
	}
	return nil
}

func (x *Hero) GetEquip() []*TwoInt {
	if x != nil {
		return x.Equip
	}
	return nil
}

func (x *Hero) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *Hero) GetCount() int32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *Hero) GetPos() int32 {
	if x != nil && x.Pos != nil {
		return *x.Pos
	}
	return 0
}

func (x *Hero) GetState() int32 {
	if x != nil && x.State != nil {
		return *x.State
	}
	return 0
}

func (x *Hero) GetWallPos() int32 {
	if x != nil && x.WallPos != nil {
		return *x.WallPos
	}
	return 0
}

func (x *Hero) GetBreakExp() int32 {
	if x != nil && x.BreakExp != nil {
		return *x.BreakExp
	}
	return 0
}

func (x *Hero) GetWallArmyTime() int32 {
	if x != nil && x.WallArmyTime != nil {
		return *x.WallArmyTime
	}
	return 0
}

func (x *Hero) GetQuality() int32 {
	if x != nil && x.Quality != nil {
		return *x.Quality
	}
	return 0
}

func (x *Hero) GetWashTotalFloorCount() int32 {
	if x != nil && x.WashTotalFloorCount != nil {
		return *x.WashTotalFloorCount
	}
	return 0
}

func (x *Hero) GetAcqPos() int32 {
	if x != nil && x.AcqPos != nil {
		return *x.AcqPos
	}
	return 0
}

func (x *Hero) GetDefPos() int32 {
	if x != nil && x.DefPos != nil {
		return *x.DefPos
	}
	return 0
}

func (x *Hero) GetDecorated() int32 {
	if x != nil && x.Decorated != nil {
		return *x.Decorated
	}
	return 0
}

func (x *Hero) GetWarPlane() []*TwoInt {
	if x != nil {
		return x.WarPlane
	}
	return nil
}

func (x *Hero) GetShowFight() []*TwoInt {
	if x != nil {
		return x.ShowFight
	}
	return nil
}

func (x *Hero) GetPlanePos() []*TwoInt {
	if x != nil {
		return x.PlanePos
	}
	return nil
}

func (x *Hero) GetComandoPos() int32 {
	if x != nil && x.ComandoPos != nil {
		return *x.ComandoPos
	}
	return 0
}

// 战机
type WarPlane struct {
	PlaneId              *int32                  `protobuf:"varint,1,req,name=planeId" json:"planeId,omitempty"`
	Level                *int32                  `protobuf:"varint,2,req,name=level" json:"level,omitempty"`
	Quality              *int32                  `protobuf:"varint,3,opt,name=quality" json:"quality,omitempty"`
	QualityLv            *int32                  `protobuf:"varint,4,opt,name=qualityLv" json:"qualityLv,omitempty"`
	Exp                  *int32                  `protobuf:"varint,5,req,name=exp" json:"exp,omitempty"`
	Attr                 []*TwoInt               `protobuf:"bytes,6,rep,name=attr" json:"attr,omitempty"`
	Pos                  *int32                  `protobuf:"varint,7,opt,name=pos" json:"pos,omitempty"`
	SkillId              *int32                  `protobuf:"varint,8,opt,name=skillId" json:"skillId,omitempty"`
	BattlePos            *int32                  `protobuf:"varint,9,opt,name=battlePos" json:"battlePos,omitempty"`
	IsActivate           *bool                   `protobuf:"varint,10,opt,name=isActivate" json:"isActivate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *WarPlane) Reset() {
	*x = WarPlane{}
}

func (x *WarPlane) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WarPlane) ProtoMessage() {}

func (x *WarPlane) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[19].MessageOf(x)
}

func (m *WarPlane) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[19].Methods()
}

// Deprecated: Use WarPlane.ProtoReflect.Type instead.
func (*WarPlane) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{19}
}

func (x *WarPlane) GetPlaneId() int32 {
	if x != nil && x.PlaneId != nil {
		return *x.PlaneId
	}
	return 0
}

func (x *WarPlane) GetLevel() int32 {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return 0
}

func (x *WarPlane) GetQuality() int32 {
	if x != nil && x.Quality != nil {
		return *x.Quality
	}
	return 0
}

func (x *WarPlane) GetQualityLv() int32 {
	if x != nil && x.QualityLv != nil {
		return *x.QualityLv
	}
	return 0
}

func (x *WarPlane) GetExp() int32 {
	if x != nil && x.Exp != nil {
		return *x.Exp
	}
	return 0
}

func (x *WarPlane) GetAttr() []*TwoInt {
	if x != nil {
		return x.Attr
	}
	return nil
}

func (x *WarPlane) GetPos() int32 {
	if x != nil && x.Pos != nil {
		return *x.Pos
	}
	return 0
}

func (x *WarPlane) GetSkillId() int32 {
	if x != nil && x.SkillId != nil {
		return *x.SkillId
	}
	return 0
}

func (x *WarPlane) GetBattlePos() int32 {
	if x != nil && x.BattlePos != nil {
		return *x.BattlePos
	}
	return 0
}

func (x *WarPlane) GetIsActivate() bool {
	if x != nil && x.IsActivate != nil {
		return *x.IsActivate
	}
	return false
}

// 守城npc
type WallNpc struct {
	Pos                  *int32                  `protobuf:"varint,1,opt,name=pos" json:"pos,omitempty"`
	HeroId               *int32                  `protobuf:"varint,2,req,name=heroId" json:"heroId,omitempty"`
	Level                *int32                  `protobuf:"varint,3,req,name=level" json:"level,omitempty"`
	Exp                  *int32                  `protobuf:"varint,4,req,name=exp" json:"exp,omitempty"`
	Attr                 []*TwoInt               `protobuf:"bytes,5,rep,name=attr" json:"attr,omitempty"`
	Count                *int32                  `protobuf:"varint,6,opt,name=count" json:"count,omitempty"`
	AutoArmy             *int32                  `protobuf:"varint,7,opt,name=autoArmy" json:"autoArmy,omitempty"`
	AddTime              *int32                  `protobuf:"varint,8,opt,name=addTime" json:"addTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *WallNpc) Reset() {
	*x = WallNpc{}
}

func (x *WallNpc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WallNpc) ProtoMessage() {}

func (x *WallNpc) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[20].MessageOf(x)
}

func (m *WallNpc) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[20].Methods()
}

// Deprecated: Use WallNpc.ProtoReflect.Type instead.
func (*WallNpc) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{20}
}

func (x *WallNpc) GetPos() int32 {
	if x != nil && x.Pos != nil {
		return *x.Pos
	}
	return 0
}

func (x *WallNpc) GetHeroId() int32 {
	if x != nil && x.HeroId != nil {
		return *x.HeroId
	}
	return 0
}

func (x *WallNpc) GetLevel() int32 {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return 0
}

func (x *WallNpc) GetExp() int32 {
	if x != nil && x.Exp != nil {
		return *x.Exp
	}
	return 0
}

func (x *WallNpc) GetAttr() []*TwoInt {
	if x != nil {
		return x.Attr
	}
	return nil
}

func (x *WallNpc) GetCount() int32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *WallNpc) GetAutoArmy() int32 {
	if x != nil && x.AutoArmy != nil {
		return *x.AutoArmy
	}
	return 0
}

func (x *WallNpc) GetAddTime() int32 {
	if x != nil && x.AddTime != nil {
		return *x.AddTime
	}
	return 0
}

// 驻防将领
type WallHero struct {
	HeroId               *int32                  `protobuf:"varint,1,req,name=heroId" json:"heroId,omitempty"`
	Level                *int32                  `protobuf:"varint,2,req,name=level" json:"level,omitempty"`
	Name                 *string                 `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	LordId               *int64                  `protobuf:"varint,4,opt,name=lordId" json:"lordId,omitempty"`
	Count                *int32                  `protobuf:"varint,5,opt,name=count" json:"count,omitempty"`
	KeyId                *int32                  `protobuf:"varint,6,opt,name=keyId" json:"keyId,omitempty"`
	EndTime              *int32                  `protobuf:"varint,7,opt,name=endTime" json:"endTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *WallHero) Reset() {
	*x = WallHero{}
}

func (x *WallHero) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WallHero) ProtoMessage() {}

func (x *WallHero) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[21].MessageOf(x)
}

func (m *WallHero) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[21].Methods()
}

// Deprecated: Use WallHero.ProtoReflect.Type instead.
func (*WallHero) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{21}
}

func (x *WallHero) GetHeroId() int32 {
	if x != nil && x.HeroId != nil {
		return *x.HeroId
	}
	return 0
}

func (x *WallHero) GetLevel() int32 {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return 0
}

func (x *WallHero) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *WallHero) GetLordId() int64 {
	if x != nil && x.LordId != nil {
		return *x.LordId
	}
	return 0
}

func (x *WallHero) GetCount() int32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *WallHero) GetKeyId() int32 {
	if x != nil && x.KeyId != nil {
		return *x.KeyId
	}
	return 0
}

func (x *WallHero) GetEndTime() int32 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

// 装备
type Equip struct {
	KeyId                *int32                  `protobuf:"varint,1,req,name=keyId" json:"keyId,omitempty"`
	EquipId              *int32                  `protobuf:"varint,2,req,name=equipId" json:"equipId,omitempty"`
	Attr                 []*TwoInt               `protobuf:"bytes,3,rep,name=attr" json:"attr,omitempty"`
	Baptize              []*TwoInt               `protobuf:"bytes,4,rep,name=baptize" json:"baptize,omitempty"`
	HeroId               *int32                  `protobuf:"varint,5,opt,name=heroId" json:"heroId,omitempty"`
	NotUpLvCnt           *int32                  `protobuf:"varint,6,opt,name=notUpLvCnt" json:"notUpLvCnt,omitempty"`
	Exta                 *EquipExtr              `protobuf:"bytes,7,opt,name=exta" json:"exta,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *Equip) Reset() {
	*x = Equip{}
}

func (x *Equip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Equip) ProtoMessage() {}

func (x *Equip) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[22].MessageOf(x)
}

func (m *Equip) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[22].Methods()
}

// Deprecated: Use Equip.ProtoReflect.Type instead.
func (*Equip) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{22}
}

func (x *Equip) GetKeyId() int32 {
	if x != nil && x.KeyId != nil {
		return *x.KeyId
	}
	return 0
}

func (x *Equip) GetEquipId() int32 {
	if x != nil && x.EquipId != nil {
		return *x.EquipId
	}
	return 0
}

func (x *Equip) GetAttr() []*TwoInt {
	if x != nil {
		return x.Attr
	}
	return nil
}

func (x *Equip) GetBaptize() []*TwoInt {
	if x != nil {
		return x.Baptize
	}
	return nil
}

func (x *Equip) GetHeroId() int32 {
	if x != nil && x.HeroId != nil {
		return *x.HeroId
	}
	return 0
}

func (x *Equip) GetNotUpLvCnt() int32 {
	if x != nil && x.NotUpLvCnt != nil {
		return *x.NotUpLvCnt
	}
	return 0
}

func (x *Equip) GetExta() *EquipExtr {
	if x != nil {
		return x.Exta
	}
	return nil
}

// 装备扩展(暂时只有戒指类装备拥有)
type EquipExtr struct {
	Lv                   *int32                  `protobuf:"varint,1,opt,name=lv" json:"lv,omitempty"`
	UpCnt                *int32                  `protobuf:"varint,2,opt,name=upCnt" json:"upCnt,omitempty"`
	UpProbability        *int32                  `protobuf:"varint,3,opt,name=upProbability" json:"upProbability,omitempty"`
	Attr                 []*TwoInt               `protobuf:"bytes,4,rep,name=attr" json:"attr,omitempty"`
	RingStone            []int32                 `protobuf:"varint,5,rep,name=ringStone" json:"ringStone,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *EquipExtr) Reset() {
	*x = EquipExtr{}
}

func (x *EquipExtr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EquipExtr) ProtoMessage() {}

func (x *EquipExtr) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[23].MessageOf(x)
}

func (m *EquipExtr) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[23].Methods()
}

// Deprecated: Use EquipExtr.ProtoReflect.Type instead.
func (*EquipExtr) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{23}
}

func (x *EquipExtr) GetLv() int32 {
	if x != nil && x.Lv != nil {
		return *x.Lv
	}
	return 0
}

func (x *EquipExtr) GetUpCnt() int32 {
	if x != nil && x.UpCnt != nil {
		return *x.UpCnt
	}
	return 0
}

func (x *EquipExtr) GetUpProbability() int32 {
	if x != nil && x.UpProbability != nil {
		return *x.UpProbability
	}
	return 0
}

func (x *EquipExtr) GetAttr() []*TwoInt {
	if x != nil {
		return x.Attr
	}
	return nil
}

func (x *EquipExtr) GetRingStone() []int32 {
	if x != nil {
		return x.RingStone
	}
	return nil
}

// 装备宝石
type EquipJewel struct {
	JewelId              *int32                  `protobuf:"varint,1,req,name=jewelId" json:"jewelId,omitempty"`
	Count                *int32                  `protobuf:"varint,2,req,name=count" json:"count,omitempty"`
	Inlaid               *int32                  `protobuf:"varint,3,req,name=inlaid" json:"inlaid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *EquipJewel) Reset() {
	*x = EquipJewel{}
}

func (x *EquipJewel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EquipJewel) ProtoMessage() {}

func (x *EquipJewel) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[24].MessageOf(x)
}

func (m *EquipJewel) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[24].Methods()
}

// Deprecated: Use EquipJewel.ProtoReflect.Type instead.
func (*EquipJewel) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{24}
}

func (x *EquipJewel) GetJewelId() int32 {
	if x != nil && x.JewelId != nil {
		return *x.JewelId
	}
	return 0
}

func (x *EquipJewel) GetCount() int32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *EquipJewel) GetInlaid() int32 {
	if x != nil && x.Inlaid != nil {
		return *x.Inlaid
	}
	return 0
}

// 勋章
type Medal struct {
	KeyId                *int32                  `protobuf:"varint,1,req,name=keyId" json:"keyId,omitempty"`
	MedalId              *int32                  `protobuf:"varint,2,req,name=medalId" json:"medalId,omitempty"`
	Quality              *int32                  `protobuf:"varint,3,req,name=quality" json:"quality,omitempty"`
	Level                *int32                  `protobuf:"varint,4,opt,name=level" json:"level,omitempty"`
	GeneralSkillId       []int32                 `protobuf:"varint,5,rep,name=generalSkillId" json:"generalSkillId,omitempty"`
	SpecialSkillId       *int32                  `protobuf:"varint,6,opt,name=specialSkillId" json:"specialSkillId,omitempty"`
	AuraSkillId          *int32                  `protobuf:"varint,7,opt,name=auraSkillId" json:"auraSkillId,omitempty"`
	HeroId               *int32                  `protobuf:"varint,8,opt,name=heroId" json:"heroId,omitempty"`
	MedalAttr            *TwoInt                 `protobuf:"bytes,9,opt,name=medalAttr" json:"medalAttr,omitempty"`
	IntensifyCnt         *int32                  `protobuf:"varint,10,opt,name=intensifyCnt" json:"intensifyCnt,omitempty"`
	GoldBarCnt           *int32                  `protobuf:"varint,11,opt,name=goldBarCnt" json:"goldBarCnt,omitempty"`
	IsLock               *int32                  `protobuf:"varint,12,opt,name=isLock" json:"isLock,omitempty"`
	InitAuraSkillId      *int32                  `protobuf:"varint,13,opt,name=initAuraSkillId" json:"initAuraSkillId,omitempty"`
	Ext                  *MedalExt               `protobuf:"bytes,14,opt,name=ext" json:"ext,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *Medal) Reset() {
	*x = Medal{}
}

func (x *Medal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Medal) ProtoMessage() {}

func (x *Medal) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[25].MessageOf(x)
}

func (m *Medal) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[25].Methods()
}

// Deprecated: Use Medal.ProtoReflect.Type instead.
func (*Medal) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{25}
}

func (x *Medal) GetKeyId() int32 {
	if x != nil && x.KeyId != nil {
		return *x.KeyId
	}
	return 0
}

func (x *Medal) GetMedalId() int32 {
	if x != nil && x.MedalId != nil {
		return *x.MedalId
	}
	return 0
}

func (x *Medal) GetQuality() int32 {
	if x != nil && x.Quality != nil {
		return *x.Quality
	}
	return 0
}

func (x *Medal) GetLevel() int32 {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return 0
}

func (x *Medal) GetGeneralSkillId() []int32 {
	if x != nil {
		return x.GeneralSkillId
	}
	return nil
}

func (x *Medal) GetSpecialSkillId() int32 {
	if x != nil && x.SpecialSkillId != nil {
		return *x.SpecialSkillId
	}
	return 0
}

func (x *Medal) GetAuraSkillId() int32 {
	if x != nil && x.AuraSkillId != nil {
		return *x.AuraSkillId
	}
	return 0
}

func (x *Medal) GetHeroId() int32 {
	if x != nil && x.HeroId != nil {
		return *x.HeroId
	}
	return 0
}

func (x *Medal) GetMedalAttr() *TwoInt {
	if x != nil {
		return x.MedalAttr
	}
	return nil
}

func (x *Medal) GetIntensifyCnt() int32 {
	if x != nil && x.IntensifyCnt != nil {
		return *x.IntensifyCnt
	}
	return 0
}

func (x *Medal) GetGoldBarCnt() int32 {
	if x != nil && x.GoldBarCnt != nil {
		return *x.GoldBarCnt
	}
	return 0
}

func (x *Medal) GetIsLock() int32 {
	if x != nil && x.IsLock != nil {
		return *x.IsLock
	}
	return 0
}

func (x *Medal) GetInitAuraSkillId() int32 {
	if x != nil && x.InitAuraSkillId != nil {
		return *x.InitAuraSkillId
	}
	return 0
}

func (x *Medal) GetExt() *MedalExt {
	if x != nil {
		return x.Ext
	}
	return nil
}

// 红色勋章扩展信息
type MedalExt struct {
	AuraUnLock           *bool                   `protobuf:"varint,1,req,name=auraUnLock" json:"auraUnLock,omitempty"`
	SpecialSkillUnLock   *bool                   `protobuf:"varint,2,req,name=specialSkillUnLock" json:"specialSkillUnLock,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *MedalExt) Reset() {
	*x = MedalExt{}
}

func (x *MedalExt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MedalExt) ProtoMessage() {}

func (x *MedalExt) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[26].MessageOf(x)
}

func (m *MedalExt) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[26].Methods()
}

// Deprecated: Use MedalExt.ProtoReflect.Type instead.
func (*MedalExt) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{26}
}

func (x *MedalExt) GetAuraUnLock() bool {
	if x != nil && x.AuraUnLock != nil {
		return *x.AuraUnLock
	}
	return false
}

func (x *MedalExt) GetSpecialSkillUnLock() bool {
	if x != nil && x.SpecialSkillUnLock != nil {
		return *x.SpecialSkillUnLock
	}
	return false
}

//勋章商品
type MedalGoods struct {
	MedalGoodsId         *int32                  `protobuf:"varint,1,opt,name=medalGoodsId" json:"medalGoodsId,omitempty"`
	Type                 *int32                  `protobuf:"varint,2,opt,name=type" json:"type,omitempty"`
	MedalId              *int32                  `protobuf:"varint,3,opt,name=medalId" json:"medalId,omitempty"`
	AuraSkillId          *int32                  `protobuf:"varint,4,opt,name=auraSkillId" json:"auraSkillId,omitempty"`
	BuyHonor             *int32                  `protobuf:"varint,5,opt,name=buyHonor" json:"buyHonor,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *MedalGoods) Reset() {
	*x = MedalGoods{}
}

func (x *MedalGoods) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MedalGoods) ProtoMessage() {}

func (x *MedalGoods) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[27].MessageOf(x)
}

func (m *MedalGoods) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[27].Methods()
}

// Deprecated: Use MedalGoods.ProtoReflect.Type instead.
func (*MedalGoods) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{27}
}

func (x *MedalGoods) GetMedalGoodsId() int32 {
	if x != nil && x.MedalGoodsId != nil {
		return *x.MedalGoodsId
	}
	return 0
}

func (x *MedalGoods) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *MedalGoods) GetMedalId() int32 {
	if x != nil && x.MedalId != nil {
		return *x.MedalId
	}
	return 0
}

func (x *MedalGoods) GetAuraSkillId() int32 {
	if x != nil && x.AuraSkillId != nil {
		return *x.AuraSkillId
	}
	return 0
}

func (x *MedalGoods) GetBuyHonor() int32 {
	if x != nil && x.BuyHonor != nil {
		return *x.BuyHonor
	}
	return 0
}

// 装备队列
type EquipQue struct {
	KeyId                *int32                  `protobuf:"varint,1,req,name=keyId" json:"keyId,omitempty"`
	EquipId              *int32                  `protobuf:"varint,2,req,name=equipId" json:"equipId,omitempty"`
	Period               *int32                  `protobuf:"varint,3,opt,name=period" json:"period,omitempty"`
	EndTime              *int32                  `protobuf:"varint,4,opt,name=endTime" json:"endTime,omitempty"`
	FreeTime             *int32                  `protobuf:"varint,5,opt,name=freeTime" json:"freeTime,omitempty"`
	FreeCnt              *int32                  `protobuf:"varint,6,opt,name=freeCnt" json:"freeCnt,omitempty"`
	EmployeId            *int32                  `protobuf:"varint,7,opt,name=employeId" json:"employeId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *EquipQue) Reset() {
	*x = EquipQue{}
}

func (x *EquipQue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EquipQue) ProtoMessage() {}

func (x *EquipQue) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[28].MessageOf(x)
}

func (m *EquipQue) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[28].Methods()
}

// Deprecated: Use EquipQue.ProtoReflect.Type instead.
func (*EquipQue) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{28}
}

func (x *EquipQue) GetKeyId() int32 {
	if x != nil && x.KeyId != nil {
		return *x.KeyId
	}
	return 0
}

func (x *EquipQue) GetEquipId() int32 {
	if x != nil && x.EquipId != nil {
		return *x.EquipId
	}
	return 0
}

func (x *EquipQue) GetPeriod() int32 {
	if x != nil && x.Period != nil {
		return *x.Period
	}
	return 0
}

func (x *EquipQue) GetEndTime() int32 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

func (x *EquipQue) GetFreeTime() int32 {
	if x != nil && x.FreeTime != nil {
		return *x.FreeTime
	}
	return 0
}

func (x *EquipQue) GetFreeCnt() int32 {
	if x != nil && x.FreeCnt != nil {
		return *x.FreeCnt
	}
	return 0
}

func (x *EquipQue) GetEmployeId() int32 {
	if x != nil && x.EmployeId != nil {
		return *x.EmployeId
	}
	return 0
}

// 国器
type SuperEquip struct {
	Type                 *int32                  `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	Lv                   *int32                  `protobuf:"varint,2,req,name=lv" json:"lv,omitempty"`
	Step                 *int32                  `protobuf:"varint,3,req,name=step" json:"step,omitempty"`
	Bomb                 *int32                  `protobuf:"varint,4,req,name=bomb" json:"bomb,omitempty"`
	GrowLv               *int32                  `protobuf:"varint,5,opt,name=growLv" json:"growLv,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SuperEquip) Reset() {
	*x = SuperEquip{}
}

func (x *SuperEquip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuperEquip) ProtoMessage() {}

func (x *SuperEquip) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[29].MessageOf(x)
}

func (m *SuperEquip) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[29].Methods()
}

// Deprecated: Use SuperEquip.ProtoReflect.Type instead.
func (*SuperEquip) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{29}
}

func (x *SuperEquip) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *SuperEquip) GetLv() int32 {
	if x != nil && x.Lv != nil {
		return *x.Lv
	}
	return 0
}

func (x *SuperEquip) GetStep() int32 {
	if x != nil && x.Step != nil {
		return *x.Step
	}
	return 0
}

func (x *SuperEquip) GetBomb() int32 {
	if x != nil && x.Bomb != nil {
		return *x.Bomb
	}
	return 0
}

func (x *SuperEquip) GetGrowLv() int32 {
	if x != nil && x.GrowLv != nil {
		return *x.GrowLv
	}
	return 0
}

// 道具
type Prop struct {
	PropId               *int32                  `protobuf:"varint,1,req,name=propId" json:"propId,omitempty"`
	Count                *int32                  `protobuf:"varint,2,req,name=count" json:"count,omitempty"`
	UseCount             *int32                  `protobuf:"varint,3,opt,name=useCount" json:"useCount,omitempty"`
	UseTime              *int32                  `protobuf:"varint,4,opt,name=useTime" json:"useTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *Prop) Reset() {
	*x = Prop{}
}

func (x *Prop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Prop) ProtoMessage() {}

func (x *Prop) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[30].MessageOf(x)
}

func (m *Prop) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[30].Methods()
}

// Deprecated: Use Prop.ProtoReflect.Type instead.
func (*Prop) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{30}
}

func (x *Prop) GetPropId() int32 {
	if x != nil && x.PropId != nil {
		return *x.PropId
	}
	return 0
}

func (x *Prop) GetCount() int32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *Prop) GetUseCount() int32 {
	if x != nil && x.UseCount != nil {
		return *x.UseCount
	}
	return 0
}

func (x *Prop) GetUseTime() int32 {
	if x != nil && x.UseTime != nil {
		return *x.UseTime
	}
	return 0
}

type Task struct {
	TaskId               *int32                  `protobuf:"varint,1,req,name=taskId" json:"taskId,omitempty"`
	Schedule             *int64                  `protobuf:"varint,2,req,name=schedule" json:"schedule,omitempty"`
	Status               *int32                  `protobuf:"varint,3,opt,name=status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *Task) Reset() {
	*x = Task{}
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[31].MessageOf(x)
}

func (m *Task) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[31].Methods()
}

// Deprecated: Use Task.ProtoReflect.Type instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{31}
}

func (x *Task) GetTaskId() int32 {
	if x != nil && x.TaskId != nil {
		return *x.TaskId
	}
	return 0
}

func (x *Task) GetSchedule() int64 {
	if x != nil && x.Schedule != nil {
		return *x.Schedule
	}
	return 0
}

func (x *Task) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

type Combat struct {
	CombatId             *int32                  `protobuf:"varint,1,req,name=combatId" json:"combatId,omitempty"`
	Star                 *int32                  `protobuf:"varint,2,req,name=star" json:"star,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *Combat) Reset() {
	*x = Combat{}
}

func (x *Combat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Combat) ProtoMessage() {}

func (x *Combat) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[32].MessageOf(x)
}

func (m *Combat) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[32].Methods()
}

// Deprecated: Use Combat.ProtoReflect.Type instead.
func (*Combat) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{32}
}

func (x *Combat) GetCombatId() int32 {
	if x != nil && x.CombatId != nil {
		return *x.CombatId
	}
	return 0
}

func (x *Combat) GetStar() int32 {
	if x != nil && x.Star != nil {
		return *x.Star
	}
	return 0
}

type CombatFB struct {
	CombatId             *int32                  `protobuf:"varint,1,req,name=combatId" json:"combatId,omitempty"`
	Status               *int32                  `protobuf:"varint,2,opt,name=status" json:"status,omitempty"`
	Cnt                  *int32                  `protobuf:"varint,3,opt,name=cnt" json:"cnt,omitempty"`
	EndTime              *int32                  `protobuf:"varint,4,opt,name=endTime" json:"endTime,omitempty"`
	Gain                 *int32                  `protobuf:"varint,5,opt,name=gain" json:"gain,omitempty"`
	BuyCnt               *int32                  `protobuf:"varint,6,opt,name=buyCnt" json:"buyCnt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *CombatFB) Reset() {
	*x = CombatFB{}
}

func (x *CombatFB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CombatFB) ProtoMessage() {}

func (x *CombatFB) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[33].MessageOf(x)
}

func (m *CombatFB) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[33].Methods()
}

// Deprecated: Use CombatFB.ProtoReflect.Type instead.
func (*CombatFB) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{33}
}

func (x *CombatFB) GetCombatId() int32 {
	if x != nil && x.CombatId != nil {
		return *x.CombatId
	}
	return 0
}

func (x *CombatFB) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *CombatFB) GetCnt() int32 {
	if x != nil && x.Cnt != nil {
		return *x.Cnt
	}
	return 0
}

func (x *CombatFB) GetEndTime() int32 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

func (x *CombatFB) GetGain() int32 {
	if x != nil && x.Gain != nil {
		return *x.Gain
	}
	return 0
}

func (x *CombatFB) GetBuyCnt() int32 {
	if x != nil && x.BuyCnt != nil {
		return *x.BuyCnt
	}
	return 0
}

// 宝石副本
type StoneCombat struct {
	CombatId             *int32                  `protobuf:"varint,1,req,name=combatId" json:"combatId,omitempty"`
	PassCnt              *int32                  `protobuf:"varint,2,req,name=passCnt" json:"passCnt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *StoneCombat) Reset() {
	*x = StoneCombat{}
}

func (x *StoneCombat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoneCombat) ProtoMessage() {}

func (x *StoneCombat) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[34].MessageOf(x)
}

func (m *StoneCombat) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[34].Methods()
}

// Deprecated: Use StoneCombat.ProtoReflect.Type instead.
func (*StoneCombat) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{34}
}

func (x *StoneCombat) GetCombatId() int32 {
	if x != nil && x.CombatId != nil {
		return *x.CombatId
	}
	return 0
}

func (x *StoneCombat) GetPassCnt() int32 {
	if x != nil && x.PassCnt != nil {
		return *x.PassCnt
	}
	return 0
}

// 战斗获得
type Grab struct {
	Oil                  *int64                  `protobuf:"varint,1,opt,name=oil" json:"oil,omitempty"`
	Ele                  *int64                  `protobuf:"varint,2,opt,name=ele" json:"ele,omitempty"`
	Food                 *int64                  `protobuf:"varint,3,opt,name=food" json:"food,omitempty"`
	Ore                  *int64                  `protobuf:"varint,4,opt,name=ore" json:"ore,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *Grab) Reset() {
	*x = Grab{}
}

func (x *Grab) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Grab) ProtoMessage() {}

func (x *Grab) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[35].MessageOf(x)
}

func (m *Grab) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[35].Methods()
}

// Deprecated: Use Grab.ProtoReflect.Type instead.
func (*Grab) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{35}
}

func (x *Grab) GetOil() int64 {
	if x != nil && x.Oil != nil {
		return *x.Oil
	}
	return 0
}

func (x *Grab) GetEle() int64 {
	if x != nil && x.Ele != nil {
		return *x.Ele
	}
	return 0
}

func (x *Grab) GetFood() int64 {
	if x != nil && x.Food != nil {
		return *x.Food
	}
	return 0
}

func (x *Grab) GetOre() int64 {
	if x != nil && x.Ore != nil {
		return *x.Ore
	}
	return 0
}

// 兵力阵型
type Form struct {
	Id                   *int32                  `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Count                *int32                  `protobuf:"varint,2,req,name=count" json:"count,omitempty"`
	Line                 *int32                  `protobuf:"varint,3,req,name=line" json:"line,omitempty"`
	Lv                   *int32                  `protobuf:"varint,4,opt,name=lv" json:"lv,omitempty"`
	Camp                 *int32                  `protobuf:"varint,5,opt,name=camp" json:"camp,omitempty"`
	HeroType             *int32                  `protobuf:"varint,6,opt,name=heroType" json:"heroType,omitempty"`
	OwnerId              *string                 `protobuf:"bytes,7,opt,name=ownerId" json:"ownerId,omitempty"`
	CurLine              *int32                  `protobuf:"varint,8,opt,name=curLine" json:"curLine,omitempty"`
	IntensifyLv          *int32                  `protobuf:"varint,9,opt,name=intensifyLv" json:"intensifyLv,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *Form) Reset() {
	*x = Form{}
}

func (x *Form) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Form) ProtoMessage() {}

func (x *Form) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[36].MessageOf(x)
}

func (m *Form) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[36].Methods()
}

// Deprecated: Use Form.ProtoReflect.Type instead.
func (*Form) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{36}
}

func (x *Form) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *Form) GetCount() int32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *Form) GetLine() int32 {
	if x != nil && x.Line != nil {
		return *x.Line
	}
	return 0
}

func (x *Form) GetLv() int32 {
	if x != nil && x.Lv != nil {
		return *x.Lv
	}
	return 0
}

func (x *Form) GetCamp() int32 {
	if x != nil && x.Camp != nil {
		return *x.Camp
	}
	return 0
}

func (x *Form) GetHeroType() int32 {
	if x != nil && x.HeroType != nil {
		return *x.HeroType
	}
	return 0
}

func (x *Form) GetOwnerId() string {
	if x != nil && x.OwnerId != nil {
		return *x.OwnerId
	}
	return ""
}

func (x *Form) GetCurLine() int32 {
	if x != nil && x.CurLine != nil {
		return *x.CurLine
	}
	return 0
}

func (x *Form) GetIntensifyLv() int32 {
	if x != nil && x.IntensifyLv != nil {
		return *x.IntensifyLv
	}
	return 0
}

// 光环
type Aura struct {
	Id                   *int32                  `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	HeroId               *int32                  `protobuf:"varint,2,req,name=heroId" json:"heroId,omitempty"`
	RoleId               *int64                  `protobuf:"varint,3,req,name=roleId" json:"roleId,omitempty"`
	Nick                 *string                 `protobuf:"bytes,4,req,name=nick" json:"nick,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *Aura) Reset() {
	*x = Aura{}
}

func (x *Aura) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Aura) ProtoMessage() {}

func (x *Aura) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[37].MessageOf(x)
}

func (m *Aura) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[37].Methods()
}

// Deprecated: Use Aura.ProtoReflect.Type instead.
func (*Aura) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{37}
}

func (x *Aura) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *Aura) GetHeroId() int32 {
	if x != nil && x.HeroId != nil {
		return *x.HeroId
	}
	return 0
}

func (x *Aura) GetRoleId() int64 {
	if x != nil && x.RoleId != nil {
		return *x.RoleId
	}
	return 0
}

func (x *Aura) GetNick() string {
	if x != nil && x.Nick != nil {
		return *x.Nick
	}
	return ""
}

// 单次攻击详情
type Action struct {
	Target               *int32                  `protobuf:"varint,1,req,name=target" json:"target,omitempty"`
	Hurt                 *int64                  `protobuf:"varint,2,opt,name=hurt" json:"hurt,omitempty"`
	Crit                 *bool                   `protobuf:"varint,3,opt,name=crit" json:"crit,omitempty"`
	Dodge                *bool                   `protobuf:"varint,4,opt,name=dodge" json:"dodge,omitempty"`
	Count                *int32                  `protobuf:"varint,5,opt,name=count" json:"count,omitempty"`
	DeadLine             *int32                  `protobuf:"varint,6,opt,name=deadLine" json:"deadLine,omitempty"`
	SkillId              *int32                  `protobuf:"varint,7,opt,name=skillId" json:"skillId,omitempty"`
	PlaneId              *int32                  `protobuf:"varint,8,opt,name=planeId" json:"planeId,omitempty"`
	TargetRoleId         *int64                  `protobuf:"varint,9,opt,name=targetRoleId" json:"targetRoleId,omitempty"`
	Skill                *FightSkill             `protobuf:"bytes,10,opt,name=skill" json:"skill,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *Action) Reset() {
	*x = Action{}
}

func (x *Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action) ProtoMessage() {}

func (x *Action) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[38].MessageOf(x)
}

func (m *Action) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[38].Methods()
}

// Deprecated: Use Action.ProtoReflect.Type instead.
func (*Action) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{38}
}

func (x *Action) GetTarget() int32 {
	if x != nil && x.Target != nil {
		return *x.Target
	}
	return 0
}

func (x *Action) GetHurt() int64 {
	if x != nil && x.Hurt != nil {
		return *x.Hurt
	}
	return 0
}

func (x *Action) GetCrit() bool {
	if x != nil && x.Crit != nil {
		return *x.Crit
	}
	return false
}

func (x *Action) GetDodge() bool {
	if x != nil && x.Dodge != nil {
		return *x.Dodge
	}
	return false
}

func (x *Action) GetCount() int32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *Action) GetDeadLine() int32 {
	if x != nil && x.DeadLine != nil {
		return *x.DeadLine
	}
	return 0
}

func (x *Action) GetSkillId() int32 {
	if x != nil && x.SkillId != nil {
		return *x.SkillId
	}
	return 0
}

func (x *Action) GetPlaneId() int32 {
	if x != nil && x.PlaneId != nil {
		return *x.PlaneId
	}
	return 0
}

func (x *Action) GetTargetRoleId() int64 {
	if x != nil && x.TargetRoleId != nil {
		return *x.TargetRoleId
	}
	return 0
}

func (x *Action) GetSkill() *FightSkill {
	if x != nil {
		return x.Skill
	}
	return nil
}

// 战斗buff
type FightBuff struct {
	Type                 *int32                  `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	BuffVal              *int32                  `protobuf:"varint,2,opt,name=buffVal" json:"buffVal,omitempty"`
	ContinueNum          *int32                  `protobuf:"varint,3,opt,name=continueNum" json:"continueNum,omitempty"`
	EffectRow            *int32                  `protobuf:"varint,4,opt,name=effectRow" json:"effectRow,omitempty"`
	CurrentLine          *int32                  `protobuf:"varint,5,opt,name=currentLine" json:"currentLine,omitempty"`
	IsAtk                *bool                   `protobuf:"varint,6,opt,name=isAtk" json:"isAtk,omitempty"`
	Param                []*TwoInt               `protobuf:"bytes,7,rep,name=param" json:"param,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *FightBuff) Reset() {
	*x = FightBuff{}
}

func (x *FightBuff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FightBuff) ProtoMessage() {}

func (x *FightBuff) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[39].MessageOf(x)
}

func (m *FightBuff) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[39].Methods()
}

// Deprecated: Use FightBuff.ProtoReflect.Type instead.
func (*FightBuff) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{39}
}

func (x *FightBuff) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *FightBuff) GetBuffVal() int32 {
	if x != nil && x.BuffVal != nil {
		return *x.BuffVal
	}
	return 0
}

func (x *FightBuff) GetContinueNum() int32 {
	if x != nil && x.ContinueNum != nil {
		return *x.ContinueNum
	}
	return 0
}

func (x *FightBuff) GetEffectRow() int32 {
	if x != nil && x.EffectRow != nil {
		return *x.EffectRow
	}
	return 0
}

func (x *FightBuff) GetCurrentLine() int32 {
	if x != nil && x.CurrentLine != nil {
		return *x.CurrentLine
	}
	return 0
}

func (x *FightBuff) GetIsAtk() bool {
	if x != nil && x.IsAtk != nil {
		return *x.IsAtk
	}
	return false
}

func (x *FightBuff) GetParam() []*TwoInt {
	if x != nil {
		return x.Param
	}
	return nil
}

// 战斗技能
type FightSkill struct {
	Type                 *int32                  `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	Count                *int32                  `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	Param                []*TwoInt               `protobuf:"bytes,3,rep,name=param" json:"param,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *FightSkill) Reset() {
	*x = FightSkill{}
}

func (x *FightSkill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FightSkill) ProtoMessage() {}

func (x *FightSkill) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[40].MessageOf(x)
}

func (m *FightSkill) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[40].Methods()
}

// Deprecated: Use FightSkill.ProtoReflect.Type instead.
func (*FightSkill) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{40}
}

func (x *FightSkill) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *FightSkill) GetCount() int32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *FightSkill) GetParam() []*TwoInt {
	if x != nil {
		return x.Param
	}
	return nil
}

// 一轮攻击
type Round struct {
	ActionA              *Action                 `protobuf:"bytes,1,opt,name=actionA" json:"actionA,omitempty"`
	ActionB              *Action                 `protobuf:"bytes,2,opt,name=actionB" json:"actionB,omitempty"`
	Buff                 []*FightBuff            `protobuf:"bytes,3,rep,name=buff" json:"buff,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *Round) Reset() {
	*x = Round{}
}

func (x *Round) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Round) ProtoMessage() {}

func (x *Round) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[41].MessageOf(x)
}

func (m *Round) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[41].Methods()
}

// Deprecated: Use Round.ProtoReflect.Type instead.
func (*Round) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{41}
}

func (x *Round) GetActionA() *Action {
	if x != nil {
		return x.ActionA
	}
	return nil
}

func (x *Round) GetActionB() *Action {
	if x != nil {
		return x.ActionB
	}
	return nil
}

func (x *Round) GetBuff() []*FightBuff {
	if x != nil {
		return x.Buff
	}
	return nil
}

// 战斗记录详情
type Record struct {
	KeyId                *int32                  `protobuf:"varint,1,req,name=keyId" json:"keyId,omitempty"`
	FormA                []*Form                 `protobuf:"bytes,2,rep,name=formA" json:"formA,omitempty"`
	FormB                []*Form                 `protobuf:"bytes,3,rep,name=formB" json:"formB,omitempty"`
	Round                []*Round                `protobuf:"bytes,4,rep,name=round" json:"round,omitempty"`
	Aura                 []*Aura                 `protobuf:"bytes,5,rep,name=aura" json:"aura,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *Record) Reset() {
	*x = Record{}
}

func (x *Record) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Record) ProtoMessage() {}

func (x *Record) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[42].MessageOf(x)
}

func (m *Record) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[42].Methods()
}

// Deprecated: Use Record.ProtoReflect.Type instead.
func (*Record) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{42}
}

func (x *Record) GetKeyId() int32 {
	if x != nil && x.KeyId != nil {
		return *x.KeyId
	}
	return 0
}

func (x *Record) GetFormA() []*Form {
	if x != nil {
		return x.FormA
	}
	return nil
}

func (x *Record) GetFormB() []*Form {
	if x != nil {
		return x.FormB
	}
	return nil
}

func (x *Record) GetRound() []*Round {
	if x != nil {
		return x.Round
	}
	return nil
}

func (x *Record) GetAura() []*Aura {
	if x != nil {
		return x.Aura
	}
	return nil
}

type RptMan struct {
	Pos                  *int32                  `protobuf:"varint,1,opt,name=pos" json:"pos,omitempty"`
	Name                 *string                 `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Vip                  *int32                  `protobuf:"varint,3,opt,name=vip" json:"vip,omitempty"`
	Lv                   *int32                  `protobuf:"varint,4,opt,name=lv" json:"lv,omitempty"`
	RoleId               *int64                  `protobuf:"varint,5,opt,name=roleId" json:"roleId,omitempty"`
	MapId                *int32                  `protobuf:"varint,6,opt,name=mapId" json:"mapId,omitempty"`
	MapX                 *int32                  `protobuf:"varint,7,opt,name=mapX" json:"mapX,omitempty"`
	MapY                 *int32                  `protobuf:"varint,8,opt,name=mapY" json:"mapY,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *RptMan) Reset() {
	*x = RptMan{}
}

func (x *RptMan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RptMan) ProtoMessage() {}

func (x *RptMan) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[43].MessageOf(x)
}

func (m *RptMan) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[43].Methods()
}

// Deprecated: Use RptMan.ProtoReflect.Type instead.
func (*RptMan) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{43}
}

func (x *RptMan) GetPos() int32 {
	if x != nil && x.Pos != nil {
		return *x.Pos
	}
	return 0
}

func (x *RptMan) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *RptMan) GetVip() int32 {
	if x != nil && x.Vip != nil {
		return *x.Vip
	}
	return 0
}

func (x *RptMan) GetLv() int32 {
	if x != nil && x.Lv != nil {
		return *x.Lv
	}
	return 0
}

func (x *RptMan) GetRoleId() int64 {
	if x != nil && x.RoleId != nil {
		return *x.RoleId
	}
	return 0
}

func (x *RptMan) GetMapId() int32 {
	if x != nil && x.MapId != nil {
		return *x.MapId
	}
	return 0
}

func (x *RptMan) GetMapX() int32 {
	if x != nil && x.MapX != nil {
		return *x.MapX
	}
	return 0
}

func (x *RptMan) GetMapY() int32 {
	if x != nil && x.MapY != nil {
		return *x.MapY
	}
	return 0
}

type RptBandit struct {
	BanditId             *int32                  `protobuf:"varint,1,req,name=banditId" json:"banditId,omitempty"`
	Pos                  *int32                  `protobuf:"varint,2,opt,name=pos" json:"pos,omitempty"`
	MapId                *int32                  `protobuf:"varint,3,opt,name=mapId" json:"mapId,omitempty"`
	MapX                 *int32                  `protobuf:"varint,4,opt,name=mapX" json:"mapX,omitempty"`
	MapY                 *int32                  `protobuf:"varint,5,opt,name=mapY" json:"mapY,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *RptBandit) Reset() {
	*x = RptBandit{}
}

func (x *RptBandit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RptBandit) ProtoMessage() {}

func (x *RptBandit) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[44].MessageOf(x)
}

func (m *RptBandit) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[44].Methods()
}

// Deprecated: Use RptBandit.ProtoReflect.Type instead.
func (*RptBandit) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{44}
}

func (x *RptBandit) GetBanditId() int32 {
	if x != nil && x.BanditId != nil {
		return *x.BanditId
	}
	return 0
}

func (x *RptBandit) GetPos() int32 {
	if x != nil && x.Pos != nil {
		return *x.Pos
	}
	return 0
}

func (x *RptBandit) GetMapId() int32 {
	if x != nil && x.MapId != nil {
		return *x.MapId
	}
	return 0
}

func (x *RptBandit) GetMapX() int32 {
	if x != nil && x.MapX != nil {
		return *x.MapX
	}
	return 0
}

func (x *RptBandit) GetMapY() int32 {
	if x != nil && x.MapY != nil {
		return *x.MapY
	}
	return 0
}

type RptCity struct {
	CityId               *int32                  `protobuf:"varint,1,req,name=cityId" json:"cityId,omitempty"`
	Pos                  *int32                  `protobuf:"varint,2,opt,name=pos" json:"pos,omitempty"`
	MapId                *int32                  `protobuf:"varint,3,opt,name=mapId" json:"mapId,omitempty"`
	MapX                 *int32                  `protobuf:"varint,4,opt,name=mapX" json:"mapX,omitempty"`
	MapY                 *int32                  `protobuf:"varint,5,opt,name=mapY" json:"mapY,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *RptCity) Reset() {
	*x = RptCity{}
}

func (x *RptCity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RptCity) ProtoMessage() {}

func (x *RptCity) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[45].MessageOf(x)
}

func (m *RptCity) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[45].Methods()
}

// Deprecated: Use RptCity.ProtoReflect.Type instead.
func (*RptCity) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{45}
}

func (x *RptCity) GetCityId() int32 {
	if x != nil && x.CityId != nil {
		return *x.CityId
	}
	return 0
}

func (x *RptCity) GetPos() int32 {
	if x != nil && x.Pos != nil {
		return *x.Pos
	}
	return 0
}

func (x *RptCity) GetMapId() int32 {
	if x != nil && x.MapId != nil {
		return *x.MapId
	}
	return 0
}

func (x *RptCity) GetMapX() int32 {
	if x != nil && x.MapX != nil {
		return *x.MapX
	}
	return 0
}

func (x *RptCity) GetMapY() int32 {
	if x != nil && x.MapY != nil {
		return *x.MapY
	}
	return 0
}

// 战报扩展类型
type RptOther struct {
	Type                 *int32                  `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	Id                   *int32                  `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	Pos                  *int32                  `protobuf:"varint,3,opt,name=pos" json:"pos,omitempty"`
	Camp                 *int32                  `protobuf:"varint,4,opt,name=camp" json:"camp,omitempty"`
	ExtParam             *string                 `protobuf:"bytes,5,opt,name=extParam" json:"extParam,omitempty"`
	MapId                *int32                  `protobuf:"varint,6,opt,name=mapId" json:"mapId,omitempty"`
	MapX                 *int32                  `protobuf:"varint,7,opt,name=mapX" json:"mapX,omitempty"`
	MapY                 *int32                  `protobuf:"varint,8,opt,name=mapY" json:"mapY,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *RptOther) Reset() {
	*x = RptOther{}
}

func (x *RptOther) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RptOther) ProtoMessage() {}

func (x *RptOther) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[46].MessageOf(x)
}

func (m *RptOther) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[46].Methods()
}

// Deprecated: Use RptOther.ProtoReflect.Type instead.
func (*RptOther) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{46}
}

func (x *RptOther) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *RptOther) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *RptOther) GetPos() int32 {
	if x != nil && x.Pos != nil {
		return *x.Pos
	}
	return 0
}

func (x *RptOther) GetCamp() int32 {
	if x != nil && x.Camp != nil {
		return *x.Camp
	}
	return 0
}

func (x *RptOther) GetExtParam() string {
	if x != nil && x.ExtParam != nil {
		return *x.ExtParam
	}
	return ""
}

func (x *RptOther) GetMapId() int32 {
	if x != nil && x.MapId != nil {
		return *x.MapId
	}
	return 0
}

func (x *RptOther) GetMapX() int32 {
	if x != nil && x.MapX != nil {
		return *x.MapX
	}
	return 0
}

func (x *RptOther) GetMapY() int32 {
	if x != nil && x.MapY != nil {
		return *x.MapY
	}
	return 0
}

// 战报汇总
type RptSummary struct {
	Total                *int32                  `protobuf:"varint,1,req,name=total" json:"total,omitempty"`
	Lost                 *int32                  `protobuf:"varint,2,req,name=lost" json:"lost,omitempty"`
	Camp                 *int32                  `protobuf:"varint,3,opt,name=camp" json:"camp,omitempty"`
	Name                 *string                 `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	Portrait             *int32                  `protobuf:"varint,5,opt,name=portrait" json:"portrait,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *RptSummary) Reset() {
	*x = RptSummary{}
}

func (x *RptSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RptSummary) ProtoMessage() {}

func (x *RptSummary) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[47].MessageOf(x)
}

func (m *RptSummary) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[47].Methods()
}

// Deprecated: Use RptSummary.ProtoReflect.Type instead.
func (*RptSummary) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{47}
}

func (x *RptSummary) GetTotal() int32 {
	if x != nil && x.Total != nil {
		return *x.Total
	}
	return 0
}

func (x *RptSummary) GetLost() int32 {
	if x != nil && x.Lost != nil {
		return *x.Lost
	}
	return 0
}

func (x *RptSummary) GetCamp() int32 {
	if x != nil && x.Camp != nil {
		return *x.Camp
	}
	return 0
}

func (x *RptSummary) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *RptSummary) GetPortrait() int32 {
	if x != nil && x.Portrait != nil {
		return *x.Portrait
	}
	return 0
}

// 战报将领信息
type RptHero struct {
	Type                 *int32                  `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	Kill                 *int32                  `protobuf:"varint,2,req,name=kill" json:"kill,omitempty"`
	Award                *int32                  `protobuf:"varint,3,req,name=award" json:"award,omitempty"`
	HeroId               *int32                  `protobuf:"varint,4,opt,name=heroId" json:"heroId,omitempty"`
	Owner                *string                 `protobuf:"bytes,5,opt,name=owner" json:"owner,omitempty"`
	Lv                   *int32                  `protobuf:"varint,6,opt,name=lv" json:"lv,omitempty"`
	Exp                  *int32                  `protobuf:"varint,7,opt,name=exp" json:"exp,omitempty"`
	Lost                 *int32                  `protobuf:"varint,8,opt,name=lost" json:"lost,omitempty"`
	HeroDecorated        *int32                  `protobuf:"varint,9,opt,name=heroDecorated" json:"heroDecorated,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *RptHero) Reset() {
	*x = RptHero{}
}

func (x *RptHero) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RptHero) ProtoMessage() {}

func (x *RptHero) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[48].MessageOf(x)
}

func (m *RptHero) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[48].Methods()
}

// Deprecated: Use RptHero.ProtoReflect.Type instead.
func (*RptHero) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{48}
}

func (x *RptHero) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *RptHero) GetKill() int32 {
	if x != nil && x.Kill != nil {
		return *x.Kill
	}
	return 0
}

func (x *RptHero) GetAward() int32 {
	if x != nil && x.Award != nil {
		return *x.Award
	}
	return 0
}

func (x *RptHero) GetHeroId() int32 {
	if x != nil && x.HeroId != nil {
		return *x.HeroId
	}
	return 0
}

func (x *RptHero) GetOwner() string {
	if x != nil && x.Owner != nil {
		return *x.Owner
	}
	return ""
}

func (x *RptHero) GetLv() int32 {
	if x != nil && x.Lv != nil {
		return *x.Lv
	}
	return 0
}

func (x *RptHero) GetExp() int32 {
	if x != nil && x.Exp != nil {
		return *x.Exp
	}
	return 0
}

func (x *RptHero) GetLost() int32 {
	if x != nil && x.Lost != nil {
		return *x.Lost
	}
	return 0
}

func (x *RptHero) GetHeroDecorated() int32 {
	if x != nil && x.HeroDecorated != nil {
		return *x.HeroDecorated
	}
	return 0
}

// 攻击流寇战报
type RptAtkBandit struct {
	Result               *bool                   `protobuf:"varint,1,req,name=result" json:"result,omitempty"`
	Attack               *RptMan                 `protobuf:"bytes,2,req,name=attack" json:"attack,omitempty"`
	Defend               *RptBandit              `protobuf:"bytes,3,req,name=defend" json:"defend,omitempty"`
	AtkSum               *RptSummary             `protobuf:"bytes,4,req,name=atkSum" json:"atkSum,omitempty"`
	DefSum               *RptSummary             `protobuf:"bytes,5,req,name=defSum" json:"defSum,omitempty"`
	AtkHero              []*RptHero              `protobuf:"bytes,6,rep,name=atkHero" json:"atkHero,omitempty"`
	DefHero              []*RptHero              `protobuf:"bytes,7,rep,name=defHero" json:"defHero,omitempty"`
	Grab                 *Grab                   `protobuf:"bytes,8,opt,name=grab" json:"grab,omitempty"`
	Record               *Record                 `protobuf:"bytes,9,opt,name=record" json:"record,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *RptAtkBandit) Reset() {
	*x = RptAtkBandit{}
}

func (x *RptAtkBandit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RptAtkBandit) ProtoMessage() {}

func (x *RptAtkBandit) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[49].MessageOf(x)
}

func (m *RptAtkBandit) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[49].Methods()
}

// Deprecated: Use RptAtkBandit.ProtoReflect.Type instead.
func (*RptAtkBandit) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{49}
}

func (x *RptAtkBandit) GetResult() bool {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return false
}

func (x *RptAtkBandit) GetAttack() *RptMan {
	if x != nil {
		return x.Attack
	}
	return nil
}

func (x *RptAtkBandit) GetDefend() *RptBandit {
	if x != nil {
		return x.Defend
	}
	return nil
}

func (x *RptAtkBandit) GetAtkSum() *RptSummary {
	if x != nil {
		return x.AtkSum
	}
	return nil
}

func (x *RptAtkBandit) GetDefSum() *RptSummary {
	if x != nil {
		return x.DefSum
	}
	return nil
}

func (x *RptAtkBandit) GetAtkHero() []*RptHero {
	if x != nil {
		return x.AtkHero
	}
	return nil
}

func (x *RptAtkBandit) GetDefHero() []*RptHero {
	if x != nil {
		return x.DefHero
	}
	return nil
}

func (x *RptAtkBandit) GetGrab() *Grab {
	if x != nil {
		return x.Grab
	}
	return nil
}

func (x *RptAtkBandit) GetRecord() *Record {
	if x != nil {
		return x.Record
	}
	return nil
}

// 玩家之间战斗的战报
type RptAtkPlayer struct {
	Result               *bool                   `protobuf:"varint,1,req,name=result" json:"result,omitempty"`
	Attack               *RptMan                 `protobuf:"bytes,2,opt,name=attack" json:"attack,omitempty"`
	DefMan               *RptMan                 `protobuf:"bytes,3,opt,name=defMan" json:"defMan,omitempty"`
	DefCity              *RptCity                `protobuf:"bytes,4,opt,name=defCity" json:"defCity,omitempty"`
	AtkSum               *RptSummary             `protobuf:"bytes,5,req,name=atkSum" json:"atkSum,omitempty"`
	DefSum               *RptSummary             `protobuf:"bytes,6,req,name=defSum" json:"defSum,omitempty"`
	AtkHero              []*RptHero              `protobuf:"bytes,7,rep,name=atkHero" json:"atkHero,omitempty"`
	DefHero              []*RptHero              `protobuf:"bytes,8,rep,name=defHero" json:"defHero,omitempty"`
	Grab                 *Grab                   `protobuf:"bytes,9,opt,name=grab" json:"grab,omitempty"`
	Record               *Record                 `protobuf:"bytes,10,opt,name=record" json:"record,omitempty"`
	NightEffect          *bool                   `protobuf:"varint,11,opt,name=nightEffect" json:"nightEffect,omitempty"`
	DefRptOther          *RptOther               `protobuf:"bytes,12,opt,name=defRptOther" json:"defRptOther,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *RptAtkPlayer) Reset() {
	*x = RptAtkPlayer{}
}

func (x *RptAtkPlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RptAtkPlayer) ProtoMessage() {}

func (x *RptAtkPlayer) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[50].MessageOf(x)
}

func (m *RptAtkPlayer) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[50].Methods()
}

// Deprecated: Use RptAtkPlayer.ProtoReflect.Type instead.
func (*RptAtkPlayer) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{50}
}

func (x *RptAtkPlayer) GetResult() bool {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return false
}

func (x *RptAtkPlayer) GetAttack() *RptMan {
	if x != nil {
		return x.Attack
	}
	return nil
}

func (x *RptAtkPlayer) GetDefMan() *RptMan {
	if x != nil {
		return x.DefMan
	}
	return nil
}

func (x *RptAtkPlayer) GetDefCity() *RptCity {
	if x != nil {
		return x.DefCity
	}
	return nil
}

func (x *RptAtkPlayer) GetAtkSum() *RptSummary {
	if x != nil {
		return x.AtkSum
	}
	return nil
}

func (x *RptAtkPlayer) GetDefSum() *RptSummary {
	if x != nil {
		return x.DefSum
	}
	return nil
}

func (x *RptAtkPlayer) GetAtkHero() []*RptHero {
	if x != nil {
		return x.AtkHero
	}
	return nil
}

func (x *RptAtkPlayer) GetDefHero() []*RptHero {
	if x != nil {
		return x.DefHero
	}
	return nil
}

func (x *RptAtkPlayer) GetGrab() *Grab {
	if x != nil {
		return x.Grab
	}
	return nil
}

func (x *RptAtkPlayer) GetRecord() *Record {
	if x != nil {
		return x.Record
	}
	return nil
}

func (x *RptAtkPlayer) GetNightEffect() bool {
	if x != nil && x.NightEffect != nil {
		return *x.NightEffect
	}
	return false
}

func (x *RptAtkPlayer) GetDefRptOther() *RptOther {
	if x != nil {
		return x.DefRptOther
	}
	return nil
}

// 报告内容
type Report struct {
	Time                 *int32                  `protobuf:"varint,1,req,name=time" json:"time,omitempty"`
	RptBandit            *RptAtkBandit           `protobuf:"bytes,2,opt,name=rptBandit" json:"rptBandit,omitempty"`
	RptPlayer            *RptAtkPlayer           `protobuf:"bytes,3,opt,name=rptPlayer" json:"rptPlayer,omitempty"`
	KeyId                *int32                  `protobuf:"varint,4,opt,name=keyId" json:"keyId,omitempty"`
	Iscross              *bool                   `protobuf:"varint,5,opt,name=iscross" json:"iscross,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *Report) Reset() {
	*x = Report{}
}

func (x *Report) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Report) ProtoMessage() {}

func (x *Report) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[51].MessageOf(x)
}

func (m *Report) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[51].Methods()
}

// Deprecated: Use Report.ProtoReflect.Type instead.
func (*Report) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{51}
}

func (x *Report) GetTime() int32 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return 0
}

func (x *Report) GetRptBandit() *RptAtkBandit {
	if x != nil {
		return x.RptBandit
	}
	return nil
}

func (x *Report) GetRptPlayer() *RptAtkPlayer {
	if x != nil {
		return x.RptPlayer
	}
	return nil
}

func (x *Report) GetKeyId() int32 {
	if x != nil && x.KeyId != nil {
		return *x.KeyId
	}
	return 0
}

func (x *Report) GetIscross() bool {
	if x != nil && x.Iscross != nil {
		return *x.Iscross
	}
	return false
}

type MailCollect struct {
	Time                 *int32                  `protobuf:"varint,1,req,name=time" json:"time,omitempty"`
	HeroId               *int32                  `protobuf:"varint,2,req,name=heroId" json:"heroId,omitempty"`
	HeroLv               *int32                  `protobuf:"varint,3,req,name=heroLv" json:"heroLv,omitempty"`
	Exp                  *int32                  `protobuf:"varint,4,req,name=exp" json:"exp,omitempty"`
	Grab                 []*Award                `protobuf:"bytes,5,rep,name=grab" json:"grab,omitempty"`
	Effect               *bool                   `protobuf:"varint,6,opt,name=effect" json:"effect,omitempty"`
	HeroDecorated        *int32                  `protobuf:"varint,7,opt,name=heroDecorated" json:"heroDecorated,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *MailCollect) Reset() {
	*x = MailCollect{}
}

func (x *MailCollect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MailCollect) ProtoMessage() {}

func (x *MailCollect) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[52].MessageOf(x)
}

func (m *MailCollect) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[52].Methods()
}

// Deprecated: Use MailCollect.ProtoReflect.Type instead.
func (*MailCollect) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{52}
}

func (x *MailCollect) GetTime() int32 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return 0
}

func (x *MailCollect) GetHeroId() int32 {
	if x != nil && x.HeroId != nil {
		return *x.HeroId
	}
	return 0
}

func (x *MailCollect) GetHeroLv() int32 {
	if x != nil && x.HeroLv != nil {
		return *x.HeroLv
	}
	return 0
}

func (x *MailCollect) GetExp() int32 {
	if x != nil && x.Exp != nil {
		return *x.Exp
	}
	return 0
}

func (x *MailCollect) GetGrab() []*Award {
	if x != nil {
		return x.Grab
	}
	return nil
}

func (x *MailCollect) GetEffect() bool {
	if x != nil && x.Effect != nil {
		return *x.Effect
	}
	return false
}

func (x *MailCollect) GetHeroDecorated() int32 {
	if x != nil && x.HeroDecorated != nil {
		return *x.HeroDecorated
	}
	return 0
}

// 侦查到的玩家资源信息
type ScoutRes struct {
	Oil                  *int64                  `protobuf:"varint,1,req,name=oil" json:"oil,omitempty"`
	Ele                  *int64                  `protobuf:"varint,2,req,name=ele" json:"ele,omitempty"`
	Food                 *int64                  `protobuf:"varint,3,req,name=food" json:"food,omitempty"`
	Ore                  *int64                  `protobuf:"varint,4,req,name=ore" json:"ore,omitempty"`
	Human                *int64                  `protobuf:"varint,5,req,name=human" json:"human,omitempty"`
	CanPlunder           []*TwoInt               `protobuf:"bytes,6,rep,name=canPlunder" json:"canPlunder,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *ScoutRes) Reset() {
	*x = ScoutRes{}
}

func (x *ScoutRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScoutRes) ProtoMessage() {}

func (x *ScoutRes) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[53].MessageOf(x)
}

func (m *ScoutRes) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[53].Methods()
}

// Deprecated: Use ScoutRes.ProtoReflect.Type instead.
func (*ScoutRes) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{53}
}

func (x *ScoutRes) GetOil() int64 {
	if x != nil && x.Oil != nil {
		return *x.Oil
	}
	return 0
}

func (x *ScoutRes) GetEle() int64 {
	if x != nil && x.Ele != nil {
		return *x.Ele
	}
	return 0
}

func (x *ScoutRes) GetFood() int64 {
	if x != nil && x.Food != nil {
		return *x.Food
	}
	return 0
}

func (x *ScoutRes) GetOre() int64 {
	if x != nil && x.Ore != nil {
		return *x.Ore
	}
	return 0
}

func (x *ScoutRes) GetHuman() int64 {
	if x != nil && x.Human != nil {
		return *x.Human
	}
	return 0
}

func (x *ScoutRes) GetCanPlunder() []*TwoInt {
	if x != nil {
		return x.CanPlunder
	}
	return nil
}

// 侦查到的玩家城池信息
type ScoutCity struct {
	Wall                 *int32                  `protobuf:"varint,1,req,name=wall" json:"wall,omitempty"`
	Fight                *int64                  `protobuf:"varint,2,req,name=fight" json:"fight,omitempty"`
	Arm1                 *int32                  `protobuf:"varint,3,req,name=arm1" json:"arm1,omitempty"`
	Arm2                 *int32                  `protobuf:"varint,4,req,name=arm2" json:"arm2,omitempty"`
	Arm3                 *int32                  `protobuf:"varint,5,req,name=arm3" json:"arm3,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *ScoutCity) Reset() {
	*x = ScoutCity{}
}

func (x *ScoutCity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScoutCity) ProtoMessage() {}

func (x *ScoutCity) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[54].MessageOf(x)
}

func (m *ScoutCity) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[54].Methods()
}

// Deprecated: Use ScoutCity.ProtoReflect.Type instead.
func (*ScoutCity) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{54}
}

func (x *ScoutCity) GetWall() int32 {
	if x != nil && x.Wall != nil {
		return *x.Wall
	}
	return 0
}

func (x *ScoutCity) GetFight() int64 {
	if x != nil && x.Fight != nil {
		return *x.Fight
	}
	return 0
}

func (x *ScoutCity) GetArm1() int32 {
	if x != nil && x.Arm1 != nil {
		return *x.Arm1
	}
	return 0
}

func (x *ScoutCity) GetArm2() int32 {
	if x != nil && x.Arm2 != nil {
		return *x.Arm2
	}
	return 0
}

func (x *ScoutCity) GetArm3() int32 {
	if x != nil && x.Arm3 != nil {
		return *x.Arm3
	}
	return 0
}

// 侦查到的玩家将领信息
type ScoutHero struct {
	HeroId               *int32                  `protobuf:"varint,1,req,name=heroId" json:"heroId,omitempty"`
	Level                *int32                  `protobuf:"varint,2,req,name=level" json:"level,omitempty"`
	Count                *int32                  `protobuf:"varint,3,req,name=count" json:"count,omitempty"`
	Source               *int32                  `protobuf:"varint,4,req,name=source" json:"source,omitempty"`
	State                *int32                  `protobuf:"varint,5,req,name=state" json:"state,omitempty"`
	HeroDecorated        *int32                  `protobuf:"varint,6,opt,name=heroDecorated" json:"heroDecorated,omitempty"`
	Planes               []*TwoInt               `protobuf:"bytes,7,rep,name=planes" json:"planes,omitempty"`
	PlanePos             []*TwoInt               `protobuf:"bytes,8,rep,name=planePos" json:"planePos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *ScoutHero) Reset() {
	*x = ScoutHero{}
}

func (x *ScoutHero) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScoutHero) ProtoMessage() {}

func (x *ScoutHero) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[55].MessageOf(x)
}

func (m *ScoutHero) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[55].Methods()
}

// Deprecated: Use ScoutHero.ProtoReflect.Type instead.
func (*ScoutHero) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{55}
}

func (x *ScoutHero) GetHeroId() int32 {
	if x != nil && x.HeroId != nil {
		return *x.HeroId
	}
	return 0
}

func (x *ScoutHero) GetLevel() int32 {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return 0
}

func (x *ScoutHero) GetCount() int32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *ScoutHero) GetSource() int32 {
	if x != nil && x.Source != nil {
		return *x.Source
	}
	return 0
}

func (x *ScoutHero) GetState() int32 {
	if x != nil && x.State != nil {
		return *x.State
	}
	return 0
}

func (x *ScoutHero) GetHeroDecorated() int32 {
	if x != nil && x.HeroDecorated != nil {
		return *x.HeroDecorated
	}
	return 0
}

func (x *ScoutHero) GetPlanes() []*TwoInt {
	if x != nil {
		return x.Planes
	}
	return nil
}

func (x *ScoutHero) GetPlanePos() []*TwoInt {
	if x != nil {
		return x.PlanePos
	}
	return nil
}

type MailScout struct {
	Res                  *ScoutRes               `protobuf:"bytes,1,opt,name=res" json:"res,omitempty"`
	City                 *ScoutCity              `protobuf:"bytes,2,opt,name=city" json:"city,omitempty"`
	Hero                 []*ScoutHero            `protobuf:"bytes,3,rep,name=hero" json:"hero,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *MailScout) Reset() {
	*x = MailScout{}
}

func (x *MailScout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MailScout) ProtoMessage() {}

func (x *MailScout) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[56].MessageOf(x)
}

func (m *MailScout) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[56].Methods()
}

// Deprecated: Use MailScout.ProtoReflect.Type instead.
func (*MailScout) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{56}
}

func (x *MailScout) GetRes() *ScoutRes {
	if x != nil {
		return x.Res
	}
	return nil
}

func (x *MailScout) GetCity() *ScoutCity {
	if x != nil {
		return x.City
	}
	return nil
}

func (x *MailScout) GetHero() []*ScoutHero {
	if x != nil {
		return x.Hero
	}
	return nil
}

type MailShow struct {
	KeyId                *int32                  `protobuf:"varint,1,req,name=keyId" json:"keyId,omitempty"`
	Type                 *int32                  `protobuf:"varint,2,req,name=type" json:"type,omitempty"`
	MoldId               *int32                  `protobuf:"varint,3,opt,name=moldId" json:"moldId,omitempty"`
	Title                *string                 `protobuf:"bytes,4,opt,name=title" json:"title,omitempty"`
	SendName             *string                 `protobuf:"bytes,5,opt,name=sendName" json:"sendName,omitempty"`
	State                *int32                  `protobuf:"varint,6,opt,name=state" json:"state,omitempty"`
	Time                 *int32                  `protobuf:"varint,7,opt,name=time" json:"time,omitempty"`
	Param                []string                `protobuf:"bytes,8,rep,name=param" json:"param,omitempty"`
	Lock                 *int32                  `protobuf:"varint,9,opt,name=lock" json:"lock,omitempty"`
	Drop                 []*Award                `protobuf:"bytes,10,rep,name=drop" json:"drop,omitempty"`
	Recover              []*Award                `protobuf:"bytes,11,rep,name=recover" json:"recover,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *MailShow) Reset() {
	*x = MailShow{}
}

func (x *MailShow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MailShow) ProtoMessage() {}

func (x *MailShow) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[57].MessageOf(x)
}

func (m *MailShow) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[57].Methods()
}

// Deprecated: Use MailShow.ProtoReflect.Type instead.
func (*MailShow) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{57}
}

func (x *MailShow) GetKeyId() int32 {
	if x != nil && x.KeyId != nil {
		return *x.KeyId
	}
	return 0
}

func (x *MailShow) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *MailShow) GetMoldId() int32 {
	if x != nil && x.MoldId != nil {
		return *x.MoldId
	}
	return 0
}

func (x *MailShow) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *MailShow) GetSendName() string {
	if x != nil && x.SendName != nil {
		return *x.SendName
	}
	return ""
}

func (x *MailShow) GetState() int32 {
	if x != nil && x.State != nil {
		return *x.State
	}
	return 0
}

func (x *MailShow) GetTime() int32 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return 0
}

func (x *MailShow) GetParam() []string {
	if x != nil {
		return x.Param
	}
	return nil
}

func (x *MailShow) GetLock() int32 {
	if x != nil && x.Lock != nil {
		return *x.Lock
	}
	return 0
}

func (x *MailShow) GetDrop() []*Award {
	if x != nil {
		return x.Drop
	}
	return nil
}

func (x *MailShow) GetRecover() []*Award {
	if x != nil {
		return x.Recover
	}
	return nil
}

type Mail struct {
	KeyId                *int32                  `protobuf:"varint,1,req,name=keyId" json:"keyId,omitempty"`
	Type                 *int32                  `protobuf:"varint,2,req,name=type" json:"type,omitempty"`
	Title                *string                 `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	SendName             *string                 `protobuf:"bytes,4,opt,name=sendName" json:"sendName,omitempty"`
	ToName               []string                `protobuf:"bytes,5,rep,name=toName" json:"toName,omitempty"`
	State                *int32                  `protobuf:"varint,6,req,name=state" json:"state,omitempty"`
	Content              *string                 `protobuf:"bytes,7,opt,name=content" json:"content,omitempty"`
	Time                 *int32                  `protobuf:"varint,8,req,name=time" json:"time,omitempty"`
	Award                []*Award                `protobuf:"bytes,9,rep,name=award" json:"award,omitempty"`
	MoldId               *int32                  `protobuf:"varint,10,opt,name=moldId" json:"moldId,omitempty"`
	TParam               []string                `protobuf:"bytes,11,rep,name=tParam" json:"tParam,omitempty"`
	Lv                   *int32                  `protobuf:"varint,12,opt,name=lv" json:"lv,omitempty"`
	VipLv                *int32                  `protobuf:"varint,13,opt,name=vipLv" json:"vipLv,omitempty"`
	Report               *Report                 `protobuf:"bytes,14,opt,name=report" json:"report,omitempty"`
	Drop                 []*Award                `protobuf:"bytes,15,rep,name=drop" json:"drop,omitempty"`
	CParam               []string                `protobuf:"bytes,16,rep,name=cParam" json:"cParam,omitempty"`
	Collect              *MailCollect            `protobuf:"bytes,17,opt,name=collect" json:"collect,omitempty"`
	Scout                *MailScout              `protobuf:"bytes,18,opt,name=scout" json:"scout,omitempty"`
	Lock                 *int32                  `protobuf:"varint,19,opt,name=lock" json:"lock,omitempty"`
	Recover              []*Award                `protobuf:"bytes,20,rep,name=recover" json:"recover,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *Mail) Reset() {
	*x = Mail{}
}

func (x *Mail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mail) ProtoMessage() {}

func (x *Mail) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[58].MessageOf(x)
}

func (m *Mail) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[58].Methods()
}

// Deprecated: Use Mail.ProtoReflect.Type instead.
func (*Mail) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{58}
}

func (x *Mail) GetKeyId() int32 {
	if x != nil && x.KeyId != nil {
		return *x.KeyId
	}
	return 0
}

func (x *Mail) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *Mail) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *Mail) GetSendName() string {
	if x != nil && x.SendName != nil {
		return *x.SendName
	}
	return ""
}

func (x *Mail) GetToName() []string {
	if x != nil {
		return x.ToName
	}
	return nil
}

func (x *Mail) GetState() int32 {
	if x != nil && x.State != nil {
		return *x.State
	}
	return 0
}

func (x *Mail) GetContent() string {
	if x != nil && x.Content != nil {
		return *x.Content
	}
	return ""
}

func (x *Mail) GetTime() int32 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return 0
}

func (x *Mail) GetAward() []*Award {
	if x != nil {
		return x.Award
	}
	return nil
}

func (x *Mail) GetMoldId() int32 {
	if x != nil && x.MoldId != nil {
		return *x.MoldId
	}
	return 0
}

func (x *Mail) GetTParam() []string {
	if x != nil {
		return x.TParam
	}
	return nil
}

func (x *Mail) GetLv() int32 {
	if x != nil && x.Lv != nil {
		return *x.Lv
	}
	return 0
}

func (x *Mail) GetVipLv() int32 {
	if x != nil && x.VipLv != nil {
		return *x.VipLv
	}
	return 0
}

func (x *Mail) GetReport() *Report {
	if x != nil {
		return x.Report
	}
	return nil
}

func (x *Mail) GetDrop() []*Award {
	if x != nil {
		return x.Drop
	}
	return nil
}

func (x *Mail) GetCParam() []string {
	if x != nil {
		return x.CParam
	}
	return nil
}

func (x *Mail) GetCollect() *MailCollect {
	if x != nil {
		return x.Collect
	}
	return nil
}

func (x *Mail) GetScout() *MailScout {
	if x != nil {
		return x.Scout
	}
	return nil
}

func (x *Mail) GetLock() int32 {
	if x != nil && x.Lock != nil {
		return *x.Lock
	}
	return 0
}

func (x *Mail) GetRecover() []*Award {
	if x != nil {
		return x.Recover
	}
	return nil
}

// 世界地图（右上角小地图）上势力信息
type AreaForce struct {
	Pos                  *int32                  `protobuf:"varint,1,req,name=pos" json:"pos,omitempty"`
	Camp                 *int32                  `protobuf:"varint,2,req,name=camp" json:"camp,omitempty"`
	Level                *int32                  `protobuf:"varint,3,req,name=level" json:"level,omitempty"`
	Command              *int32                  `protobuf:"varint,4,opt,name=command" json:"command,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *AreaForce) Reset() {
	*x = AreaForce{}
}

func (x *AreaForce) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AreaForce) ProtoMessage() {}

func (x *AreaForce) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[59].MessageOf(x)
}

func (m *AreaForce) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[59].Methods()
}

// Deprecated: Use AreaForce.ProtoReflect.Type instead.
func (*AreaForce) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{59}
}

func (x *AreaForce) GetPos() int32 {
	if x != nil && x.Pos != nil {
		return *x.Pos
	}
	return 0
}

func (x *AreaForce) GetCamp() int32 {
	if x != nil && x.Camp != nil {
		return *x.Camp
	}
	return 0
}

func (x *AreaForce) GetLevel() int32 {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return 0
}

func (x *AreaForce) GetCommand() int32 {
	if x != nil && x.Command != nil {
		return *x.Command
	}
	return 0
}

// 世界地图（右上角小地图）上的盖世太保
type AreaGestapo struct {
	Pos                  *int32                  `protobuf:"varint,1,req,name=pos" json:"pos,omitempty"`
	Summoner             *int64                  `protobuf:"varint,2,opt,name=summoner" json:"summoner,omitempty"`
	EndTime              *int32                  `protobuf:"varint,3,opt,name=endTime" json:"endTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *AreaGestapo) Reset() {
	*x = AreaGestapo{}
}

func (x *AreaGestapo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AreaGestapo) ProtoMessage() {}

func (x *AreaGestapo) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[60].MessageOf(x)
}

func (m *AreaGestapo) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[60].Methods()
}

// Deprecated: Use AreaGestapo.ProtoReflect.Type instead.
func (*AreaGestapo) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{60}
}

func (x *AreaGestapo) GetPos() int32 {
	if x != nil && x.Pos != nil {
		return *x.Pos
	}
	return 0
}

func (x *AreaGestapo) GetSummoner() int64 {
	if x != nil && x.Summoner != nil {
		return *x.Summoner
	}
	return 0
}

func (x *AreaGestapo) GetEndTime() int32 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

// 世界地图城池状态
type AreaCity struct {
	CityId               *int32                  `protobuf:"varint,1,req,name=cityId" json:"cityId,omitempty"`
	Camp                 *int32                  `protobuf:"varint,2,req,name=camp" json:"camp,omitempty"`
	Free                 *bool                   `protobuf:"varint,3,opt,name=free" json:"free,omitempty"`
	AttackCamp           *int32                  `protobuf:"varint,4,opt,name=attackCamp" json:"attackCamp,omitempty"`
	ProtectTime          *int32                  `protobuf:"varint,5,opt,name=protectTime" json:"protectTime,omitempty"`
	Produced             *int32                  `protobuf:"varint,6,opt,name=produced" json:"produced,omitempty"`
	FinishTime           *int32                  `protobuf:"varint,7,opt,name=finishTime" json:"finishTime,omitempty"`
	HasFirstKillReward   *bool                   `protobuf:"varint,8,opt,name=hasFirstKillReward" json:"hasFirstKillReward,omitempty"`
	OwnerId              *int64                  `protobuf:"varint,9,opt,name=ownerId" json:"ownerId,omitempty"`
	Owner                *string                 `protobuf:"bytes,10,opt,name=owner" json:"owner,omitempty"`
	Portrait             *int32                  `protobuf:"varint,11,opt,name=portrait" json:"portrait,omitempty"`
	CityName             *string                 `protobuf:"bytes,12,opt,name=cityName" json:"cityName,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *AreaCity) Reset() {
	*x = AreaCity{}
}

func (x *AreaCity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AreaCity) ProtoMessage() {}

func (x *AreaCity) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[61].MessageOf(x)
}

func (m *AreaCity) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[61].Methods()
}

// Deprecated: Use AreaCity.ProtoReflect.Type instead.
func (*AreaCity) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{61}
}

func (x *AreaCity) GetCityId() int32 {
	if x != nil && x.CityId != nil {
		return *x.CityId
	}
	return 0
}

func (x *AreaCity) GetCamp() int32 {
	if x != nil && x.Camp != nil {
		return *x.Camp
	}
	return 0
}

func (x *AreaCity) GetFree() bool {
	if x != nil && x.Free != nil {
		return *x.Free
	}
	return false
}

func (x *AreaCity) GetAttackCamp() int32 {
	if x != nil && x.AttackCamp != nil {
		return *x.AttackCamp
	}
	return 0
}

func (x *AreaCity) GetProtectTime() int32 {
	if x != nil && x.ProtectTime != nil {
		return *x.ProtectTime
	}
	return 0
}

func (x *AreaCity) GetProduced() int32 {
	if x != nil && x.Produced != nil {
		return *x.Produced
	}
	return 0
}

func (x *AreaCity) GetFinishTime() int32 {
	if x != nil && x.FinishTime != nil {
		return *x.FinishTime
	}
	return 0
}

func (x *AreaCity) GetHasFirstKillReward() bool {
	if x != nil && x.HasFirstKillReward != nil {
		return *x.HasFirstKillReward
	}
	return false
}

func (x *AreaCity) GetOwnerId() int64 {
	if x != nil && x.OwnerId != nil {
		return *x.OwnerId
	}
	return 0
}

func (x *AreaCity) GetOwner() string {
	if x != nil && x.Owner != nil {
		return *x.Owner
	}
	return ""
}

func (x *AreaCity) GetPortrait() int32 {
	if x != nil && x.Portrait != nil {
		return *x.Portrait
	}
	return 0
}

func (x *AreaCity) GetCityName() string {
	if x != nil && x.CityName != nil {
		return *x.CityName
	}
	return ""
}

// 玩家采集信息
type Collect struct {
	Camp                 *int32                  `protobuf:"varint,1,req,name=camp" json:"camp,omitempty"`
	Lv                   *int32                  `protobuf:"varint,2,req,name=lv" json:"lv,omitempty"`
	RoleId               *int64                  `protobuf:"varint,3,req,name=roleId" json:"roleId,omitempty"`
	Name                 *string                 `protobuf:"bytes,4,req,name=name" json:"name,omitempty"`
	HeroLv               *int32                  `protobuf:"varint,5,req,name=heroLv" json:"heroLv,omitempty"`
	HeroId               *int32                  `protobuf:"varint,6,req,name=heroId" json:"heroId,omitempty"`
	Count                *int32                  `protobuf:"varint,7,req,name=count" json:"count,omitempty"`
	CollectedTime        *int32                  `protobuf:"varint,8,opt,name=collectedTime" json:"collectedTime,omitempty"`
	CanMaxCollectTime    *int32                  `protobuf:"varint,9,opt,name=canMaxCollectTime" json:"canMaxCollectTime,omitempty"`
	HeroTotalCnt         *int32                  `protobuf:"varint,10,opt,name=heroTotalCnt" json:"heroTotalCnt,omitempty"`
	HeroDecorated        *int32                  `protobuf:"varint,11,opt,name=heroDecorated" json:"heroDecorated,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *Collect) Reset() {
	*x = Collect{}
}

func (x *Collect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Collect) ProtoMessage() {}

func (x *Collect) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[62].MessageOf(x)
}

func (m *Collect) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[62].Methods()
}

// Deprecated: Use Collect.ProtoReflect.Type instead.
func (*Collect) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{62}
}

func (x *Collect) GetCamp() int32 {
	if x != nil && x.Camp != nil {
		return *x.Camp
	}
	return 0
}

func (x *Collect) GetLv() int32 {
	if x != nil && x.Lv != nil {
		return *x.Lv
	}
	return 0
}

func (x *Collect) GetRoleId() int64 {
	if x != nil && x.RoleId != nil {
		return *x.RoleId
	}
	return 0
}

func (x *Collect) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Collect) GetHeroLv() int32 {
	if x != nil && x.HeroLv != nil {
		return *x.HeroLv
	}
	return 0
}

func (x *Collect) GetHeroId() int32 {
	if x != nil && x.HeroId != nil {
		return *x.HeroId
	}
	return 0
}

func (x *Collect) GetCount() int32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *Collect) GetCollectedTime() int32 {
	if x != nil && x.CollectedTime != nil {
		return *x.CollectedTime
	}
	return 0
}

func (x *Collect) GetCanMaxCollectTime() int32 {
	if x != nil && x.CanMaxCollectTime != nil {
		return *x.CanMaxCollectTime
	}
	return 0
}

func (x *Collect) GetHeroTotalCnt() int32 {
	if x != nil && x.HeroTotalCnt != nil {
		return *x.HeroTotalCnt
	}
	return 0
}

func (x *Collect) GetHeroDecorated() int32 {
	if x != nil && x.HeroDecorated != nil {
		return *x.HeroDecorated
	}
	return 0
}

// 大地图上的势力信息
type MapForce struct {
	Pos                  *int32                  `protobuf:"varint,1,req,name=pos" json:"pos,omitempty"`
	Type                 *int32                  `protobuf:"varint,2,req,name=type" json:"type,omitempty"`
	Param                *int32                  `protobuf:"varint,3,req,name=param" json:"param,omitempty"`
	Name                 *string                 `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	Camp                 *int32                  `protobuf:"varint,5,opt,name=camp" json:"camp,omitempty"`
	Collect              *Collect                `protobuf:"bytes,6,opt,name=collect" json:"collect,omitempty"`
	Resource             *int32                  `protobuf:"varint,7,opt,name=resource" json:"resource,omitempty"`
	Battle               *bool                   `protobuf:"varint,8,opt,name=battle" json:"battle,omitempty"`
	Prot                 *int32                  `protobuf:"varint,9,opt,name=prot" json:"prot,omitempty"`
	SummonCnt            *int32                  `protobuf:"varint,10,opt,name=summonCnt" json:"summonCnt,omitempty"`
	SummonSum            *int32                  `protobuf:"varint,11,opt,name=summonSum" json:"summonSum,omitempty"`
	SummonTime           *int32                  `protobuf:"varint,12,opt,name=summonTime" json:"summonTime,omitempty"`
	LordId               *int64                  `protobuf:"varint,13,opt,name=lordId" json:"lordId,omitempty"`
	ProtectTime          *int32                  `protobuf:"varint,14,opt,name=protectTime" json:"protectTime,omitempty"`
	BattleTime           *int32                  `protobuf:"varint,15,opt,name=battleTime" json:"battleTime,omitempty"`
	SeqId                *int32                  `protobuf:"varint,16,opt,name=seqId" json:"seqId,omitempty"`
	RebelRoundId         *int32                  `protobuf:"varint,17,opt,name=rebelRoundId" json:"rebelRoundId,omitempty"`
	EcisiveBattle        *bool                   `protobuf:"varint,18,opt,name=ecisiveBattle" json:"ecisiveBattle,omitempty"`
	WhiteFlagTime        *int32                  `protobuf:"varint,19,opt,name=whiteFlagTime" json:"whiteFlagTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *MapForce) Reset() {
	*x = MapForce{}
}

func (x *MapForce) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapForce) ProtoMessage() {}

func (x *MapForce) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[63].MessageOf(x)
}

func (m *MapForce) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[63].Methods()
}

// Deprecated: Use MapForce.ProtoReflect.Type instead.
func (*MapForce) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{63}
}

func (x *MapForce) GetPos() int32 {
	if x != nil && x.Pos != nil {
		return *x.Pos
	}
	return 0
}

func (x *MapForce) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *MapForce) GetParam() int32 {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return 0
}

func (x *MapForce) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *MapForce) GetCamp() int32 {
	if x != nil && x.Camp != nil {
		return *x.Camp
	}
	return 0
}

func (x *MapForce) GetCollect() *Collect {
	if x != nil {
		return x.Collect
	}
	return nil
}

func (x *MapForce) GetResource() int32 {
	if x != nil && x.Resource != nil {
		return *x.Resource
	}
	return 0
}

func (x *MapForce) GetBattle() bool {
	if x != nil && x.Battle != nil {
		return *x.Battle
	}
	return false
}

func (x *MapForce) GetProt() int32 {
	if x != nil && x.Prot != nil {
		return *x.Prot
	}
	return 0
}

func (x *MapForce) GetSummonCnt() int32 {
	if x != nil && x.SummonCnt != nil {
		return *x.SummonCnt
	}
	return 0
}

func (x *MapForce) GetSummonSum() int32 {
	if x != nil && x.SummonSum != nil {
		return *x.SummonSum
	}
	return 0
}

func (x *MapForce) GetSummonTime() int32 {
	if x != nil && x.SummonTime != nil {
		return *x.SummonTime
	}
	return 0
}

func (x *MapForce) GetLordId() int64 {
	if x != nil && x.LordId != nil {
		return *x.LordId
	}
	return 0
}

func (x *MapForce) GetProtectTime() int32 {
	if x != nil && x.ProtectTime != nil {
		return *x.ProtectTime
	}
	return 0
}

func (x *MapForce) GetBattleTime() int32 {
	if x != nil && x.BattleTime != nil {
		return *x.BattleTime
	}
	return 0
}

func (x *MapForce) GetSeqId() int32 {
	if x != nil && x.SeqId != nil {
		return *x.SeqId
	}
	return 0
}

func (x *MapForce) GetRebelRoundId() int32 {
	if x != nil && x.RebelRoundId != nil {
		return *x.RebelRoundId
	}
	return 0
}

func (x *MapForce) GetEcisiveBattle() bool {
	if x != nil && x.EcisiveBattle != nil {
		return *x.EcisiveBattle
	}
	return false
}

func (x *MapForce) GetWhiteFlagTime() int32 {
	if x != nil && x.WhiteFlagTime != nil {
		return *x.WhiteFlagTime
	}
	return 0
}

// 城池竞选玩家信息
type CamppaignRole struct {
	Nick                 *string                 `protobuf:"bytes,1,req,name=nick" json:"nick,omitempty"`
	Ranks                *int32                  `protobuf:"varint,2,req,name=ranks" json:"ranks,omitempty"`
	RoleId               *int64                  `protobuf:"varint,3,opt,name=roleId" json:"roleId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *CamppaignRole) Reset() {
	*x = CamppaignRole{}
}

func (x *CamppaignRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CamppaignRole) ProtoMessage() {}

func (x *CamppaignRole) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[64].MessageOf(x)
}

func (m *CamppaignRole) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[64].Methods()
}

// Deprecated: Use CamppaignRole.ProtoReflect.Type instead.
func (*CamppaignRole) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{64}
}

func (x *CamppaignRole) GetNick() string {
	if x != nil && x.Nick != nil {
		return *x.Nick
	}
	return ""
}

func (x *CamppaignRole) GetRanks() int32 {
	if x != nil && x.Ranks != nil {
		return *x.Ranks
	}
	return 0
}

func (x *CamppaignRole) GetRoleId() int64 {
	if x != nil && x.RoleId != nil {
		return *x.RoleId
	}
	return 0
}

// 大地图上的城池信息
type MapCity struct {
	Pos                  *int32                  `protobuf:"varint,1,req,name=pos" json:"pos,omitempty"`
	CityId               *int32                  `protobuf:"varint,2,req,name=cityId" json:"cityId,omitempty"`
	Camp                 *int32                  `protobuf:"varint,3,req,name=camp" json:"camp,omitempty"`
	Free                 *bool                   `protobuf:"varint,4,opt,name=free" json:"free,omitempty"`
	Produced             *int32                  `protobuf:"varint,5,opt,name=produced" json:"produced,omitempty"`
	FinishTime           *int32                  `protobuf:"varint,6,opt,name=finishTime" json:"finishTime,omitempty"`
	OwnerId              *int64                  `protobuf:"varint,7,opt,name=ownerId" json:"ownerId,omitempty"`
	Owner                *string                 `protobuf:"bytes,8,opt,name=owner" json:"owner,omitempty"`
	CampaignTime         *int32                  `protobuf:"varint,9,opt,name=campaignTime" json:"campaignTime,omitempty"`
	Role                 []*CamppaignRole        `protobuf:"bytes,10,rep,name=role" json:"role,omitempty"`
	ProtectTime          *int32                  `protobuf:"varint,11,opt,name=protectTime" json:"protectTime,omitempty"`
	Battle               *bool                   `protobuf:"varint,12,opt,name=battle" json:"battle,omitempty"`
	HasFirstKillReward   *bool                   `protobuf:"varint,13,opt,name=hasFirstKillReward" json:"hasFirstKillReward,omitempty"`
	CurArm               *int32                  `protobuf:"varint,14,opt,name=curArm" json:"curArm,omitempty"`
	MaxArm               *int32                  `protobuf:"varint,15,opt,name=maxArm" json:"maxArm,omitempty"`
	CityName             *string                 `protobuf:"bytes,16,opt,name=cityName" json:"cityName,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *MapCity) Reset() {
	*x = MapCity{}
}

func (x *MapCity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapCity) ProtoMessage() {}

func (x *MapCity) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[65].MessageOf(x)
}

func (m *MapCity) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[65].Methods()
}

// Deprecated: Use MapCity.ProtoReflect.Type instead.
func (*MapCity) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{65}
}

func (x *MapCity) GetPos() int32 {
	if x != nil && x.Pos != nil {
		return *x.Pos
	}
	return 0
}

func (x *MapCity) GetCityId() int32 {
	if x != nil && x.CityId != nil {
		return *x.CityId
	}
	return 0
}

func (x *MapCity) GetCamp() int32 {
	if x != nil && x.Camp != nil {
		return *x.Camp
	}
	return 0
}

func (x *MapCity) GetFree() bool {
	if x != nil && x.Free != nil {
		return *x.Free
	}
	return false
}

func (x *MapCity) GetProduced() int32 {
	if x != nil && x.Produced != nil {
		return *x.Produced
	}
	return 0
}

func (x *MapCity) GetFinishTime() int32 {
	if x != nil && x.FinishTime != nil {
		return *x.FinishTime
	}
	return 0
}

func (x *MapCity) GetOwnerId() int64 {
	if x != nil && x.OwnerId != nil {
		return *x.OwnerId
	}
	return 0
}

func (x *MapCity) GetOwner() string {
	if x != nil && x.Owner != nil {
		return *x.Owner
	}
	return ""
}

func (x *MapCity) GetCampaignTime() int32 {
	if x != nil && x.CampaignTime != nil {
		return *x.CampaignTime
	}
	return 0
}

func (x *MapCity) GetRole() []*CamppaignRole {
	if x != nil {
		return x.Role
	}
	return nil
}

func (x *MapCity) GetProtectTime() int32 {
	if x != nil && x.ProtectTime != nil {
		return *x.ProtectTime
	}
	return 0
}

func (x *MapCity) GetBattle() bool {
	if x != nil && x.Battle != nil {
		return *x.Battle
	}
	return false
}

func (x *MapCity) GetHasFirstKillReward() bool {
	if x != nil && x.HasFirstKillReward != nil {
		return *x.HasFirstKillReward
	}
	return false
}

func (x *MapCity) GetCurArm() int32 {
	if x != nil && x.CurArm != nil {
		return *x.CurArm
	}
	return 0
}

func (x *MapCity) GetMaxArm() int32 {
	if x != nil && x.MaxArm != nil {
		return *x.MaxArm
	}
	return 0
}

func (x *MapCity) GetCityName() string {
	if x != nil && x.CityName != nil {
		return *x.CityName
	}
	return ""
}

// 大地图上的行军线
type MapLine struct {
	StartPos  *int32  `protobuf:"varint,1,req,name=startPos" json:"startPos,omitempty"`
	EndPos    *int32  `protobuf:"varint,2,req,name=endPos" json:"endPos,omitempty"`
	Nick      *string `protobuf:"bytes,3,req,name=nick" json:"nick,omitempty"`
	StartTime *int32  `protobuf:"varint,4,req,name=startTime" json:"startTime,omitempty"`
	EndTime   *int32  `protobuf:"varint,5,req,name=endTime" json:"endTime,omitempty"`
	Camp      *int32  `protobuf:"varint,6,req,name=camp" json:"camp,omitempty"`
	KeyId     *int32  `protobuf:"varint,7,req,name=keyId" json:"keyId,omitempty"`
	ArmyState *int32  `protobuf:"varint,8,opt,name=armyState" json:"armyState,omitempty"`
	// 行军类型 1 攻击流寇, 2 攻击玩家、城战, 3 矿点采集, 4 阵营战, 5 城墙驻防,
	// 6 攻击点兵统领, 7 攻击流寇任务, 8 盖世太保, 9 闪电战, 10 超级矿点采集,
	// 11 超级矿点攻击, 12 超级矿点驻防, 13 柏林皇城战, 14 柏林据点战, 15 匪军叛乱帮助,
	// 16 反攻德意志BOSS防守战，17 反攻德意志BOSS进攻战 18 决战
	ArmyType             *int32                  `protobuf:"varint,9,opt,name=armyType" json:"armyType,omitempty"`
	HeroId               []int32                 `protobuf:"varint,10,rep,name=heroId" json:"heroId,omitempty"`
	BattleType           *int32                  `protobuf:"varint,11,opt,name=battleType" json:"battleType,omitempty"`
	LordId               *int64                  `protobuf:"varint,12,opt,name=lordId" json:"lordId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *MapLine) Reset() {
	*x = MapLine{}
}

func (x *MapLine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapLine) ProtoMessage() {}

func (x *MapLine) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[66].MessageOf(x)
}

func (m *MapLine) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[66].Methods()
}

// Deprecated: Use MapLine.ProtoReflect.Type instead.
func (*MapLine) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{66}
}

func (x *MapLine) GetStartPos() int32 {
	if x != nil && x.StartPos != nil {
		return *x.StartPos
	}
	return 0
}

func (x *MapLine) GetEndPos() int32 {
	if x != nil && x.EndPos != nil {
		return *x.EndPos
	}
	return 0
}

func (x *MapLine) GetNick() string {
	if x != nil && x.Nick != nil {
		return *x.Nick
	}
	return ""
}

func (x *MapLine) GetStartTime() int32 {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return 0
}

func (x *MapLine) GetEndTime() int32 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

func (x *MapLine) GetCamp() int32 {
	if x != nil && x.Camp != nil {
		return *x.Camp
	}
	return 0
}

func (x *MapLine) GetKeyId() int32 {
	if x != nil && x.KeyId != nil {
		return *x.KeyId
	}
	return 0
}

func (x *MapLine) GetArmyState() int32 {
	if x != nil && x.ArmyState != nil {
		return *x.ArmyState
	}
	return 0
}

func (x *MapLine) GetArmyType() int32 {
	if x != nil && x.ArmyType != nil {
		return *x.ArmyType
	}
	return 0
}

func (x *MapLine) GetHeroId() []int32 {
	if x != nil {
		return x.HeroId
	}
	return nil
}

func (x *MapLine) GetBattleType() int32 {
	if x != nil && x.BattleType != nil {
		return *x.BattleType
	}
	return 0
}

func (x *MapLine) GetLordId() int64 {
	if x != nil && x.LordId != nil {
		return *x.LordId
	}
	return 0
}

// 世界分区信息
type Area struct {
	Area                 *int32                  `protobuf:"varint,1,req,name=area" json:"area,omitempty"`
	Status               *int32                  `protobuf:"varint,2,req,name=status" json:"status,omitempty"`
	FirstKill            []*CityFirstKill        `protobuf:"bytes,3,rep,name=firstKill" json:"firstKill,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *Area) Reset() {
	*x = Area{}
}

func (x *Area) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Area) ProtoMessage() {}

func (x *Area) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[67].MessageOf(x)
}

func (m *Area) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[67].Methods()
}

// Deprecated: Use Area.ProtoReflect.Type instead.
func (*Area) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{67}
}

func (x *Area) GetArea() int32 {
	if x != nil && x.Area != nil {
		return *x.Area
	}
	return 0
}

func (x *Area) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *Area) GetFirstKill() []*CityFirstKill {
	if x != nil {
		return x.FirstKill
	}
	return nil
}

type CityFirstKill struct {
	CityInfo             *string                 `protobuf:"bytes,1,opt,name=cityInfo" json:"cityInfo,omitempty"`
	Sponsor              *FirstKillInfo          `protobuf:"bytes,2,opt,name=sponsor" json:"sponsor,omitempty"`
	Atklist              *FirstKillInfo          `protobuf:"bytes,3,opt,name=atklist" json:"atklist,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *CityFirstKill) Reset() {
	*x = CityFirstKill{}
}

func (x *CityFirstKill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CityFirstKill) ProtoMessage() {}

func (x *CityFirstKill) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[68].MessageOf(x)
}

func (m *CityFirstKill) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[68].Methods()
}

// Deprecated: Use CityFirstKill.ProtoReflect.Type instead.
func (*CityFirstKill) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{68}
}

func (x *CityFirstKill) GetCityInfo() string {
	if x != nil && x.CityInfo != nil {
		return *x.CityInfo
	}
	return ""
}

func (x *CityFirstKill) GetSponsor() *FirstKillInfo {
	if x != nil {
		return x.Sponsor
	}
	return nil
}

func (x *CityFirstKill) GetAtklist() *FirstKillInfo {
	if x != nil {
		return x.Atklist
	}
	return nil
}

type FirstKillInfo struct {
	Role                 *string                 `protobuf:"bytes,1,opt,name=role" json:"role,omitempty"`
	RolesId              []int64                 `protobuf:"varint,2,rep,name=rolesId" json:"rolesId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *FirstKillInfo) Reset() {
	*x = FirstKillInfo{}
}

func (x *FirstKillInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FirstKillInfo) ProtoMessage() {}

func (x *FirstKillInfo) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[69].MessageOf(x)
}

func (m *FirstKillInfo) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[69].Methods()
}

// Deprecated: Use FirstKillInfo.ProtoReflect.Type instead.
func (*FirstKillInfo) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{69}
}

func (x *FirstKillInfo) GetRole() string {
	if x != nil && x.Role != nil {
		return *x.Role
	}
	return ""
}

func (x *FirstKillInfo) GetRolesId() []int64 {
	if x != nil {
		return x.RolesId
	}
	return nil
}

// 城市首杀玩家信息
type AtkFirstKillInfo struct {
	LordId               *int64                  `protobuf:"varint,1,opt,name=lordId" json:"lordId,omitempty"`
	Portrait             *int32                  `protobuf:"varint,2,opt,name=portrait" json:"portrait,omitempty"`
	Nick                 *string                 `protobuf:"bytes,3,opt,name=nick" json:"nick,omitempty"`
	Param                *string                 `protobuf:"bytes,4,opt,name=param" json:"param,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *AtkFirstKillInfo) Reset() {
	*x = AtkFirstKillInfo{}
}

func (x *AtkFirstKillInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AtkFirstKillInfo) ProtoMessage() {}

func (x *AtkFirstKillInfo) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[70].MessageOf(x)
}

func (m *AtkFirstKillInfo) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[70].Methods()
}

// Deprecated: Use AtkFirstKillInfo.ProtoReflect.Type instead.
func (*AtkFirstKillInfo) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{70}
}

func (x *AtkFirstKillInfo) GetLordId() int64 {
	if x != nil && x.LordId != nil {
		return *x.LordId
	}
	return 0
}

func (x *AtkFirstKillInfo) GetPortrait() int32 {
	if x != nil && x.Portrait != nil {
		return *x.Portrait
	}
	return 0
}

func (x *AtkFirstKillInfo) GetNick() string {
	if x != nil && x.Nick != nil {
		return *x.Nick
	}
	return ""
}

func (x *AtkFirstKillInfo) GetParam() string {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return ""
}

type CityAtkFirstKill struct {
	Area                 *int32                  `protobuf:"varint,1,opt,name=area" json:"area,omitempty"`
	Type                 *int32                  `protobuf:"varint,2,opt,name=type" json:"type,omitempty"`
	CityId               *int32                  `protobuf:"varint,3,opt,name=cityId" json:"cityId,omitempty"`
	Camp                 *int32                  `protobuf:"varint,4,opt,name=camp" json:"camp,omitempty"`
	Sponsor              *AtkFirstKillInfo       `protobuf:"bytes,5,opt,name=sponsor" json:"sponsor,omitempty"`
	Atklist              []*AtkFirstKillInfo     `protobuf:"bytes,6,rep,name=atklist" json:"atklist,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *CityAtkFirstKill) Reset() {
	*x = CityAtkFirstKill{}
}

func (x *CityAtkFirstKill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CityAtkFirstKill) ProtoMessage() {}

func (x *CityAtkFirstKill) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[71].MessageOf(x)
}

func (m *CityAtkFirstKill) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[71].Methods()
}

// Deprecated: Use CityAtkFirstKill.ProtoReflect.Type instead.
func (*CityAtkFirstKill) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{71}
}

func (x *CityAtkFirstKill) GetArea() int32 {
	if x != nil && x.Area != nil {
		return *x.Area
	}
	return 0
}

func (x *CityAtkFirstKill) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *CityAtkFirstKill) GetCityId() int32 {
	if x != nil && x.CityId != nil {
		return *x.CityId
	}
	return 0
}

func (x *CityAtkFirstKill) GetCamp() int32 {
	if x != nil && x.Camp != nil {
		return *x.Camp
	}
	return 0
}

func (x *CityAtkFirstKill) GetSponsor() *AtkFirstKillInfo {
	if x != nil {
		return x.Sponsor
	}
	return nil
}

func (x *CityAtkFirstKill) GetAtklist() []*AtkFirstKillInfo {
	if x != nil {
		return x.Atklist
	}
	return nil
}

// 城池信息
type City struct {
	CityId               *int32                  `protobuf:"varint,1,req,name=cityId" json:"cityId,omitempty"`
	Camp                 *int32                  `protobuf:"varint,2,req,name=camp" json:"camp,omitempty"`
	Status               *int32                  `protobuf:"varint,3,req,name=status" json:"status,omitempty"`
	CloseTime            *int32                  `protobuf:"varint,4,req,name=closeTime" json:"closeTime,omitempty"`
	AttackCamp           *int32                  `protobuf:"varint,5,opt,name=attackCamp" json:"attackCamp,omitempty"`
	OwnerId              *int64                  `protobuf:"varint,6,opt,name=ownerId" json:"ownerId,omitempty"`
	BeginTime            *int32                  `protobuf:"varint,7,opt,name=beginTime" json:"beginTime,omitempty"`
	EndTime              *int32                  `protobuf:"varint,8,opt,name=endTime" json:"endTime,omitempty"`
	Produced             *int32                  `protobuf:"varint,9,opt,name=produced" json:"produced,omitempty"`
	FinishTime           *int32                  `protobuf:"varint,10,opt,name=finishTime" json:"finishTime,omitempty"`
	CampaignTime         *int32                  `protobuf:"varint,11,opt,name=campaignTime" json:"campaignTime,omitempty"`
	Role                 []*CamppaignRole        `protobuf:"bytes,12,rep,name=role" json:"role,omitempty"`
	ExtraReward          *int32                  `protobuf:"varint,13,opt,name=extraReward" json:"extraReward,omitempty"`
	Form                 []*TwoInt               `protobuf:"bytes,14,rep,name=form" json:"form,omitempty"`
	CityLv               *int32                  `protobuf:"varint,15,opt,name=cityLv" json:"cityLv,omitempty"`
	Name                 *string                 `protobuf:"bytes,16,opt,name=name" json:"name,omitempty"`
	CityExp              *int32                  `protobuf:"varint,17,opt,name=cityExp" json:"cityExp,omitempty"`
	AtkBeginTime         *int32                  `protobuf:"varint,18,opt,name=atkBeginTime" json:"atkBeginTime,omitempty"`
	DevTime              *int32                  `protobuf:"varint,19,opt,name=devTime" json:"devTime,omitempty"`
	ProtectTime          *int32                  `protobuf:"varint,20,opt,name=protectTime" json:"protectTime,omitempty"`
	AttackRoleId         []int64                 `protobuf:"varint,21,rep,name=attackRoleId" json:"attackRoleId,omitempty"`
	FirstKillReward      []*IntLong              `protobuf:"bytes,22,rep,name=firstKillReward" json:"firstKillReward,omitempty"`
	BuildingExp          *int32                  `protobuf:"varint,23,opt,name=buildingExp" json:"buildingExp,omitempty"`
	CurrentScheduleId    *int32                  `protobuf:"varint,24,opt,name=currentScheduleId" json:"currentScheduleId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *City) Reset() {
	*x = City{}
}

func (x *City) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*City) ProtoMessage() {}

func (x *City) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[72].MessageOf(x)
}

func (m *City) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[72].Methods()
}

// Deprecated: Use City.ProtoReflect.Type instead.
func (*City) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{72}
}

func (x *City) GetCityId() int32 {
	if x != nil && x.CityId != nil {
		return *x.CityId
	}
	return 0
}

func (x *City) GetCamp() int32 {
	if x != nil && x.Camp != nil {
		return *x.Camp
	}
	return 0
}

func (x *City) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *City) GetCloseTime() int32 {
	if x != nil && x.CloseTime != nil {
		return *x.CloseTime
	}
	return 0
}

func (x *City) GetAttackCamp() int32 {
	if x != nil && x.AttackCamp != nil {
		return *x.AttackCamp
	}
	return 0
}

func (x *City) GetOwnerId() int64 {
	if x != nil && x.OwnerId != nil {
		return *x.OwnerId
	}
	return 0
}

func (x *City) GetBeginTime() int32 {
	if x != nil && x.BeginTime != nil {
		return *x.BeginTime
	}
	return 0
}

func (x *City) GetEndTime() int32 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

func (x *City) GetProduced() int32 {
	if x != nil && x.Produced != nil {
		return *x.Produced
	}
	return 0
}

func (x *City) GetFinishTime() int32 {
	if x != nil && x.FinishTime != nil {
		return *x.FinishTime
	}
	return 0
}

func (x *City) GetCampaignTime() int32 {
	if x != nil && x.CampaignTime != nil {
		return *x.CampaignTime
	}
	return 0
}

func (x *City) GetRole() []*CamppaignRole {
	if x != nil {
		return x.Role
	}
	return nil
}

func (x *City) GetExtraReward() int32 {
	if x != nil && x.ExtraReward != nil {
		return *x.ExtraReward
	}
	return 0
}

func (x *City) GetForm() []*TwoInt {
	if x != nil {
		return x.Form
	}
	return nil
}

func (x *City) GetCityLv() int32 {
	if x != nil && x.CityLv != nil {
		return *x.CityLv
	}
	return 0
}

func (x *City) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *City) GetCityExp() int32 {
	if x != nil && x.CityExp != nil {
		return *x.CityExp
	}
	return 0
}

func (x *City) GetAtkBeginTime() int32 {
	if x != nil && x.AtkBeginTime != nil {
		return *x.AtkBeginTime
	}
	return 0
}

func (x *City) GetDevTime() int32 {
	if x != nil && x.DevTime != nil {
		return *x.DevTime
	}
	return 0
}

func (x *City) GetProtectTime() int32 {
	if x != nil && x.ProtectTime != nil {
		return *x.ProtectTime
	}
	return 0
}

func (x *City) GetAttackRoleId() []int64 {
	if x != nil {
		return x.AttackRoleId
	}
	return nil
}

func (x *City) GetFirstKillReward() []*IntLong {
	if x != nil {
		return x.FirstKillReward
	}
	return nil
}

func (x *City) GetBuildingExp() int32 {
	if x != nil && x.BuildingExp != nil {
		return *x.BuildingExp
	}
	return 0
}

func (x *City) GetCurrentScheduleId() int32 {
	if x != nil && x.CurrentScheduleId != nil {
		return *x.CurrentScheduleId
	}
	return 0
}

// 执行任务的部队
type Army struct {
	KeyId *int32 `protobuf:"varint,1,req,name=keyId" json:"keyId,omitempty"`
	// 类型，1 攻击流寇，2 攻击玩家，3 采集, 4 阵营战, 5 城墙驻防 6.攻击点兵统领 7.攻击流寇任务
	// 8.攻击盖世太保 9.闪电战 10.超级矿点采集 11.超级矿点攻击 12.超级矿点驻防 13. 柏林皇城战
	// 14.柏林据点战 15.匪军叛乱帮助 16.反攻德意志BOSS防守战 17.反攻德意志BOSS进攻战, 驻防
	// 18.决战 19.攻打飞艇
	Type   *int32 `protobuf:"varint,2,req,name=type" json:"type,omitempty"`
	Target *int32 `protobuf:"varint,3,req,name=target" json:"target,omitempty"`
	// 任务状态  1.行军 2.返回 3.采集 4.驻军 5.城战或阵营战 6.盖世太保战 7.闪电战 8. 柏林会战 9. 匪军叛乱帮助 10.反攻德意志BOSS防守战
	// 11.反攻德意志BOSS进攻战, 驻防 12.反攻德意志BOSS进攻战, 驻防 13.攻打飞艇等待中
	State                *int32                  `protobuf:"varint,4,req,name=state" json:"state,omitempty"`
	Duration             *int32                  `protobuf:"varint,5,req,name=duration" json:"duration,omitempty"`
	EndTime              *int32                  `protobuf:"varint,6,req,name=endTime" json:"endTime,omitempty"`
	Hero                 []*TwoInt               `protobuf:"bytes,7,rep,name=hero" json:"hero,omitempty"`
	Grab                 []*Award                `protobuf:"bytes,8,rep,name=grab" json:"grab,omitempty"`
	BattleId             *int32                  `protobuf:"varint,9,opt,name=battleId" json:"battleId,omitempty"`
	Id                   *int32                  `protobuf:"varint,10,opt,name=id" json:"id,omitempty"`
	BattleTime           *int32                  `protobuf:"varint,11,opt,name=battleTime" json:"battleTime,omitempty"`
	LordId               *int64                  `protobuf:"varint,12,opt,name=lordId" json:"lordId,omitempty"`
	TarLordId            *int64                  `protobuf:"varint,13,opt,name=tarLordId" json:"tarLordId,omitempty"`
	OriginPos            *int32                  `protobuf:"varint,14,opt,name=originPos" json:"originPos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *Army) Reset() {
	*x = Army{}
}

func (x *Army) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Army) ProtoMessage() {}

func (x *Army) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[73].MessageOf(x)
}

func (m *Army) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[73].Methods()
}

// Deprecated: Use Army.ProtoReflect.Type instead.
func (*Army) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{73}
}

func (x *Army) GetKeyId() int32 {
	if x != nil && x.KeyId != nil {
		return *x.KeyId
	}
	return 0
}

func (x *Army) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *Army) GetTarget() int32 {
	if x != nil && x.Target != nil {
		return *x.Target
	}
	return 0
}

func (x *Army) GetState() int32 {
	if x != nil && x.State != nil {
		return *x.State
	}
	return 0
}

func (x *Army) GetDuration() int32 {
	if x != nil && x.Duration != nil {
		return *x.Duration
	}
	return 0
}

func (x *Army) GetEndTime() int32 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

func (x *Army) GetHero() []*TwoInt {
	if x != nil {
		return x.Hero
	}
	return nil
}

func (x *Army) GetGrab() []*Award {
	if x != nil {
		return x.Grab
	}
	return nil
}

func (x *Army) GetBattleId() int32 {
	if x != nil && x.BattleId != nil {
		return *x.BattleId
	}
	return 0
}

func (x *Army) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *Army) GetBattleTime() int32 {
	if x != nil && x.BattleTime != nil {
		return *x.BattleTime
	}
	return 0
}

func (x *Army) GetLordId() int64 {
	if x != nil && x.LordId != nil {
		return *x.LordId
	}
	return 0
}

func (x *Army) GetTarLordId() int64 {
	if x != nil && x.TarLordId != nil {
		return *x.TarLordId
	}
	return 0
}

func (x *Army) GetOriginPos() int32 {
	if x != nil && x.OriginPos != nil {
		return *x.OriginPos
	}
	return 0
}

// 聊天信息
type Chat struct {
	Time                 *int32                  `protobuf:"varint,1,req,name=time" json:"time,omitempty"`
	Channel              *int32                  `protobuf:"varint,2,req,name=channel" json:"channel,omitempty"`
	Name                 *string                 `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Portrait             *int32                  `protobuf:"varint,4,opt,name=portrait" json:"portrait,omitempty"`
	Vip                  *int32                  `protobuf:"varint,5,opt,name=vip" json:"vip,omitempty"`
	Msg                  *string                 `protobuf:"bytes,6,opt,name=msg" json:"msg,omitempty"`
	MoldId               *int32                  `protobuf:"varint,7,opt,name=moldId" json:"moldId,omitempty"`
	ChatId               *int32                  `protobuf:"varint,8,opt,name=chatId" json:"chatId,omitempty"`
	Param                []string                `protobuf:"bytes,9,rep,name=param" json:"param,omitempty"`
	Report               *int32                  `protobuf:"varint,10,opt,name=report" json:"report,omitempty"`
	Style                *int32                  `protobuf:"varint,11,opt,name=style" json:"style,omitempty"`
	IsGm                 *bool                   `protobuf:"varint,12,opt,name=isGm" json:"isGm,omitempty"`
	IsGuider             *bool                   `protobuf:"varint,13,opt,name=isGuider" json:"isGuider,omitempty"`
	Lv                   *int32                  `protobuf:"varint,14,opt,name=lv" json:"lv,omitempty"`
	Job                  *int32                  `protobuf:"varint,15,opt,name=job" json:"job,omitempty"`
	Area                 *int32                  `protobuf:"varint,16,opt,name=area" json:"area,omitempty"`
	MyParam              []string                `protobuf:"bytes,17,rep,name=myParam" json:"myParam,omitempty"`
	LordId               *int64                  `protobuf:"varint,18,opt,name=lordId" json:"lordId,omitempty"`
	Camp                 *int32                  `protobuf:"varint,19,opt,name=camp" json:"camp,omitempty"`
	Ranks                *int32                  `protobuf:"varint,20,opt,name=ranks" json:"ranks,omitempty"`
	IsCampChat           *int32                  `protobuf:"varint,21,opt,name=isCampChat" json:"isCampChat,omitempty"`
	BubbleId             *int32                  `protobuf:"varint,22,opt,name=bubbleId" json:"bubbleId,omitempty"`
	RedType              *int32                  `protobuf:"varint,23,opt,name=redType" json:"redType,omitempty"`
	MainServerId         *int32                  `protobuf:"varint,24,opt,name=mainServerId" json:"mainServerId,omitempty"`
	MyServerId           *int32                  `protobuf:"varint,25,opt,name=myServerId" json:"myServerId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *Chat) Reset() {
	*x = Chat{}
}

func (x *Chat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chat) ProtoMessage() {}

func (x *Chat) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[74].MessageOf(x)
}

func (m *Chat) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[74].Methods()
}

// Deprecated: Use Chat.ProtoReflect.Type instead.
func (*Chat) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{74}
}

func (x *Chat) GetTime() int32 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return 0
}

func (x *Chat) GetChannel() int32 {
	if x != nil && x.Channel != nil {
		return *x.Channel
	}
	return 0
}

func (x *Chat) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Chat) GetPortrait() int32 {
	if x != nil && x.Portrait != nil {
		return *x.Portrait
	}
	return 0
}

func (x *Chat) GetVip() int32 {
	if x != nil && x.Vip != nil {
		return *x.Vip
	}
	return 0
}

func (x *Chat) GetMsg() string {
	if x != nil && x.Msg != nil {
		return *x.Msg
	}
	return ""
}

func (x *Chat) GetMoldId() int32 {
	if x != nil && x.MoldId != nil {
		return *x.MoldId
	}
	return 0
}

func (x *Chat) GetChatId() int32 {
	if x != nil && x.ChatId != nil {
		return *x.ChatId
	}
	return 0
}

func (x *Chat) GetParam() []string {
	if x != nil {
		return x.Param
	}
	return nil
}

func (x *Chat) GetReport() int32 {
	if x != nil && x.Report != nil {
		return *x.Report
	}
	return 0
}

func (x *Chat) GetStyle() int32 {
	if x != nil && x.Style != nil {
		return *x.Style
	}
	return 0
}

func (x *Chat) GetIsGm() bool {
	if x != nil && x.IsGm != nil {
		return *x.IsGm
	}
	return false
}

func (x *Chat) GetIsGuider() bool {
	if x != nil && x.IsGuider != nil {
		return *x.IsGuider
	}
	return false
}

func (x *Chat) GetLv() int32 {
	if x != nil && x.Lv != nil {
		return *x.Lv
	}
	return 0
}

func (x *Chat) GetJob() int32 {
	if x != nil && x.Job != nil {
		return *x.Job
	}
	return 0
}

func (x *Chat) GetArea() int32 {
	if x != nil && x.Area != nil {
		return *x.Area
	}
	return 0
}

func (x *Chat) GetMyParam() []string {
	if x != nil {
		return x.MyParam
	}
	return nil
}

func (x *Chat) GetLordId() int64 {
	if x != nil && x.LordId != nil {
		return *x.LordId
	}
	return 0
}

func (x *Chat) GetCamp() int32 {
	if x != nil && x.Camp != nil {
		return *x.Camp
	}
	return 0
}

func (x *Chat) GetRanks() int32 {
	if x != nil && x.Ranks != nil {
		return *x.Ranks
	}
	return 0
}

func (x *Chat) GetIsCampChat() int32 {
	if x != nil && x.IsCampChat != nil {
		return *x.IsCampChat
	}
	return 0
}

func (x *Chat) GetBubbleId() int32 {
	if x != nil && x.BubbleId != nil {
		return *x.BubbleId
	}
	return 0
}

func (x *Chat) GetRedType() int32 {
	if x != nil && x.RedType != nil {
		return *x.RedType
	}
	return 0
}

func (x *Chat) GetMainServerId() int32 {
	if x != nil && x.MainServerId != nil {
		return *x.MainServerId
	}
	return 0
}

func (x *Chat) GetMyServerId() int32 {
	if x != nil && x.MyServerId != nil {
		return *x.MyServerId
	}
	return 0
}

// 聊天会话
type ChatDialog struct {
	TargetId             *int64                  `protobuf:"varint,1,opt,name=targetId" json:"targetId,omitempty"`
	Portrait             *int32                  `protobuf:"varint,2,opt,name=portrait" json:"portrait,omitempty"`
	Lv                   *int32                  `protobuf:"varint,3,opt,name=lv" json:"lv,omitempty"`
	Job                  *int32                  `protobuf:"varint,4,opt,name=job" json:"job,omitempty"`
	Area                 *int32                  `protobuf:"varint,5,opt,name=area" json:"area,omitempty"`
	Vip                  *int32                  `protobuf:"varint,6,opt,name=vip" json:"vip,omitempty"`
	Nick                 *string                 `protobuf:"bytes,7,opt,name=nick" json:"nick,omitempty"`
	Camp                 *int32                  `protobuf:"varint,8,opt,name=camp" json:"camp,omitempty"`
	Msg                  *string                 `protobuf:"bytes,9,opt,name=msg" json:"msg,omitempty"`
	Time                 *int32                  `protobuf:"varint,10,opt,name=time" json:"time,omitempty"`
	IsSelf               *bool                   `protobuf:"varint,11,opt,name=isSelf" json:"isSelf,omitempty"`
	State                *int32                  `protobuf:"varint,12,opt,name=state" json:"state,omitempty"`
	SenderId             *int64                  `protobuf:"varint,13,opt,name=senderId" json:"senderId,omitempty"`
	IsCampChatDia        *int32                  `protobuf:"varint,14,opt,name=isCampChatDia" json:"isCampChatDia,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *ChatDialog) Reset() {
	*x = ChatDialog{}
}

func (x *ChatDialog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatDialog) ProtoMessage() {}

func (x *ChatDialog) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[75].MessageOf(x)
}

func (m *ChatDialog) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[75].Methods()
}

// Deprecated: Use ChatDialog.ProtoReflect.Type instead.
func (*ChatDialog) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{75}
}

func (x *ChatDialog) GetTargetId() int64 {
	if x != nil && x.TargetId != nil {
		return *x.TargetId
	}
	return 0
}

func (x *ChatDialog) GetPortrait() int32 {
	if x != nil && x.Portrait != nil {
		return *x.Portrait
	}
	return 0
}

func (x *ChatDialog) GetLv() int32 {
	if x != nil && x.Lv != nil {
		return *x.Lv
	}
	return 0
}

func (x *ChatDialog) GetJob() int32 {
	if x != nil && x.Job != nil {
		return *x.Job
	}
	return 0
}

func (x *ChatDialog) GetArea() int32 {
	if x != nil && x.Area != nil {
		return *x.Area
	}
	return 0
}

func (x *ChatDialog) GetVip() int32 {
	if x != nil && x.Vip != nil {
		return *x.Vip
	}
	return 0
}

func (x *ChatDialog) GetNick() string {
	if x != nil && x.Nick != nil {
		return *x.Nick
	}
	return ""
}

func (x *ChatDialog) GetCamp() int32 {
	if x != nil && x.Camp != nil {
		return *x.Camp
	}
	return 0
}

func (x *ChatDialog) GetMsg() string {
	if x != nil && x.Msg != nil {
		return *x.Msg
	}
	return ""
}

func (x *ChatDialog) GetTime() int32 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return 0
}

func (x *ChatDialog) GetIsSelf() bool {
	if x != nil && x.IsSelf != nil {
		return *x.IsSelf
	}
	return false
}

func (x *ChatDialog) GetState() int32 {
	if x != nil && x.State != nil {
		return *x.State
	}
	return 0
}

func (x *ChatDialog) GetSenderId() int64 {
	if x != nil && x.SenderId != nil {
		return *x.SenderId
	}
	return 0
}

func (x *ChatDialog) GetIsCampChatDia() int32 {
	if x != nil && x.IsCampChatDia != nil {
		return *x.IsCampChatDia
	}
	return 0
}

//私聊历史记录,服务器序列化使用
type DbChatHistory struct {
	RoleKey              *string                 `protobuf:"bytes,1,req,name=roleKey" json:"roleKey,omitempty"`
	Chats                []*Chat                 `protobuf:"bytes,2,rep,name=chats" json:"chats,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *DbChatHistory) Reset() {
	*x = DbChatHistory{}
}

func (x *DbChatHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbChatHistory) ProtoMessage() {}

func (x *DbChatHistory) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[76].MessageOf(x)
}

func (m *DbChatHistory) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[76].Methods()
}

// Deprecated: Use DbChatHistory.ProtoReflect.Type instead.
func (*DbChatHistory) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{76}
}

func (x *DbChatHistory) GetRoleKey() string {
	if x != nil && x.RoleKey != nil {
		return *x.RoleKey
	}
	return ""
}

func (x *DbChatHistory) GetChats() []*Chat {
	if x != nil {
		return x.Chats
	}
	return nil
}

// 用于服务器序列化使用
type DbChatDialog struct {
	TargetId             *int64                  `protobuf:"varint,1,opt,name=targetId" json:"targetId,omitempty"`
	State                *int32                  `protobuf:"varint,2,opt,name=state" json:"state,omitempty"`
	Chat                 *Chat                   `protobuf:"bytes,3,opt,name=chat" json:"chat,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *DbChatDialog) Reset() {
	*x = DbChatDialog{}
}

func (x *DbChatDialog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbChatDialog) ProtoMessage() {}

func (x *DbChatDialog) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[77].MessageOf(x)
}

func (m *DbChatDialog) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[77].Methods()
}

// Deprecated: Use DbChatDialog.ProtoReflect.Type instead.
func (*DbChatDialog) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{77}
}

func (x *DbChatDialog) GetTargetId() int64 {
	if x != nil && x.TargetId != nil {
		return *x.TargetId
	}
	return 0
}

func (x *DbChatDialog) GetState() int32 {
	if x != nil && x.State != nil {
		return *x.State
	}
	return 0
}

func (x *DbChatDialog) GetChat() *Chat {
	if x != nil {
		return x.Chat
	}
	return nil
}

// 存储会话
type DbChatDialogByLord struct {
	RoleId               *int64                  `protobuf:"varint,1,req,name=roleId" json:"roleId,omitempty"`
	Dialog               []*DbChatDialog         `protobuf:"bytes,2,rep,name=dialog" json:"dialog,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *DbChatDialogByLord) Reset() {
	*x = DbChatDialogByLord{}
}

func (x *DbChatDialogByLord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbChatDialogByLord) ProtoMessage() {}

func (x *DbChatDialogByLord) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[78].MessageOf(x)
}

func (m *DbChatDialogByLord) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[78].Methods()
}

// Deprecated: Use DbChatDialogByLord.ProtoReflect.Type instead.
func (*DbChatDialogByLord) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{78}
}

func (x *DbChatDialogByLord) GetRoleId() int64 {
	if x != nil && x.RoleId != nil {
		return *x.RoleId
	}
	return 0
}

func (x *DbChatDialogByLord) GetDialog() []*DbChatDialog {
	if x != nil {
		return x.Dialog
	}
	return nil
}

//特殊加成
type Effect struct {
	Id                   *int32                  `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	EndTime              *int32                  `protobuf:"varint,2,opt,name=endTime" json:"endTime,omitempty"`
	Val                  *int32                  `protobuf:"varint,3,opt,name=val" json:"val,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *Effect) Reset() {
	*x = Effect{}
}

func (x *Effect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Effect) ProtoMessage() {}

func (x *Effect) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[79].MessageOf(x)
}

func (m *Effect) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[79].Methods()
}

// Deprecated: Use Effect.ProtoReflect.Type instead.
func (*Effect) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{79}
}

func (x *Effect) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *Effect) GetEndTime() int32 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

func (x *Effect) GetVal() int32 {
	if x != nil && x.Val != nil {
		return *x.Val
	}
	return 0
}

//科技信息
type Tech struct {
	Id                   *int32                  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Lv                   *int32                  `protobuf:"varint,2,opt,name=lv" json:"lv,omitempty"`
	Exp                  *int32                  `protobuf:"varint,3,opt,name=exp" json:"exp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *Tech) Reset() {
	*x = Tech{}
}

func (x *Tech) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tech) ProtoMessage() {}

func (x *Tech) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[80].MessageOf(x)
}

func (m *Tech) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[80].Methods()
}

// Deprecated: Use Tech.ProtoReflect.Type instead.
func (*Tech) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{80}
}

func (x *Tech) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *Tech) GetLv() int32 {
	if x != nil && x.Lv != nil {
		return *x.Lv
	}
	return 0
}

func (x *Tech) GetExp() int32 {
	if x != nil && x.Exp != nil {
		return *x.Exp
	}
	return 0
}

type TechQue struct {
	TechId               *int32                  `protobuf:"varint,1,opt,name=techId" json:"techId,omitempty"`
	TechEndTime          *int32                  `protobuf:"varint,2,opt,name=techEndTime" json:"techEndTime,omitempty"`
	FreeSpeedCnt         *int32                  `protobuf:"varint,3,opt,name=freeSpeedCnt" json:"freeSpeedCnt,omitempty"`
	FreeTime             *int32                  `protobuf:"varint,4,opt,name=freeTime" json:"freeTime,omitempty"`
	FreeOtherCnt         *int32                  `protobuf:"varint,5,opt,name=freeOtherCnt" json:"freeOtherCnt,omitempty"`
	Param                *int32                  `protobuf:"varint,6,opt,name=param" json:"param,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *TechQue) Reset() {
	*x = TechQue{}
}

func (x *TechQue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TechQue) ProtoMessage() {}

func (x *TechQue) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[81].MessageOf(x)
}

func (m *TechQue) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[81].Methods()
}

// Deprecated: Use TechQue.ProtoReflect.Type instead.
func (*TechQue) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{81}
}

func (x *TechQue) GetTechId() int32 {
	if x != nil && x.TechId != nil {
		return *x.TechId
	}
	return 0
}

func (x *TechQue) GetTechEndTime() int32 {
	if x != nil && x.TechEndTime != nil {
		return *x.TechEndTime
	}
	return 0
}

func (x *TechQue) GetFreeSpeedCnt() int32 {
	if x != nil && x.FreeSpeedCnt != nil {
		return *x.FreeSpeedCnt
	}
	return 0
}

func (x *TechQue) GetFreeTime() int32 {
	if x != nil && x.FreeTime != nil {
		return *x.FreeTime
	}
	return 0
}

func (x *TechQue) GetFreeOtherCnt() int32 {
	if x != nil && x.FreeOtherCnt != nil {
		return *x.FreeOtherCnt
	}
	return 0
}

func (x *TechQue) GetParam() int32 {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return 0
}

//科技信息
type History struct {
	Type                 *int32                  `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	Id                   *int32                  `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	Praram               *int32                  `protobuf:"varint,3,opt,name=praram" json:"praram,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *History) Reset() {
	*x = History{}
}

func (x *History) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*History) ProtoMessage() {}

func (x *History) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[82].MessageOf(x)
}

func (m *History) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[82].Methods()
}

// Deprecated: Use History.ProtoReflect.Type instead.
func (*History) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{82}
}

func (x *History) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *History) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *History) GetPraram() int32 {
	if x != nil && x.Praram != nil {
		return *x.Praram
	}
	return 0
}

// 发到客户端的城战、阵营战信息
type Battle struct {
	BattleId             *int32                  `protobuf:"varint,1,req,name=battleId" json:"battleId,omitempty"`
	Attack               *int32                  `protobuf:"varint,2,opt,name=attack" json:"attack,omitempty"`
	Defend               *int32                  `protobuf:"varint,3,opt,name=defend" json:"defend,omitempty"`
	BattleTime           *int32                  `protobuf:"varint,4,opt,name=battleTime" json:"battleTime,omitempty"`
	AtkCamp              *int32                  `protobuf:"varint,5,opt,name=atkCamp" json:"atkCamp,omitempty"`
	DefCamp              *int32                  `protobuf:"varint,6,opt,name=defCamp" json:"defCamp,omitempty"`
	AtkPos               *int32                  `protobuf:"varint,7,opt,name=atkPos" json:"atkPos,omitempty"`
	DefPos               *int32                  `protobuf:"varint,8,opt,name=defPos" json:"defPos,omitempty"`
	AtkName              *string                 `protobuf:"bytes,9,opt,name=atkName" json:"atkName,omitempty"`
	DefName              *string                 `protobuf:"bytes,10,opt,name=defName" json:"defName,omitempty"`
	BattleType           *int32                  `protobuf:"varint,11,opt,name=battleType" json:"battleType,omitempty"`
	AtkHelpChatCnt       *int32                  `protobuf:"varint,12,opt,name=atkHelpChatCnt" json:"atkHelpChatCnt,omitempty"`
	DefHelpChatCnt       *int32                  `protobuf:"varint,13,opt,name=defHelpChatCnt" json:"defHelpChatCnt,omitempty"`
	AtkCityLv            *int32                  `protobuf:"varint,14,opt,name=atkCityLv" json:"atkCityLv,omitempty"`
	DefCityLv            *int32                  `protobuf:"varint,15,opt,name=defCityLv" json:"defCityLv,omitempty"`
	AtkLordId            *int64                  `protobuf:"varint,16,opt,name=atkLordId" json:"atkLordId,omitempty"`
	DefLordId            *int64                  `protobuf:"varint,17,opt,name=defLordId" json:"defLordId,omitempty"`
	Type                 *int32                  `protobuf:"varint,18,opt,name=type" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *Battle) Reset() {
	*x = Battle{}
}

func (x *Battle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Battle) ProtoMessage() {}

func (x *Battle) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[83].MessageOf(x)
}

func (m *Battle) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[83].Methods()
}

// Deprecated: Use Battle.ProtoReflect.Type instead.
func (*Battle) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{83}
}

func (x *Battle) GetBattleId() int32 {
	if x != nil && x.BattleId != nil {
		return *x.BattleId
	}
	return 0
}

func (x *Battle) GetAttack() int32 {
	if x != nil && x.Attack != nil {
		return *x.Attack
	}
	return 0
}

func (x *Battle) GetDefend() int32 {
	if x != nil && x.Defend != nil {
		return *x.Defend
	}
	return 0
}

func (x *Battle) GetBattleTime() int32 {
	if x != nil && x.BattleTime != nil {
		return *x.BattleTime
	}
	return 0
}

func (x *Battle) GetAtkCamp() int32 {
	if x != nil && x.AtkCamp != nil {
		return *x.AtkCamp
	}
	return 0
}

func (x *Battle) GetDefCamp() int32 {
	if x != nil && x.DefCamp != nil {
		return *x.DefCamp
	}
	return 0
}

func (x *Battle) GetAtkPos() int32 {
	if x != nil && x.AtkPos != nil {
		return *x.AtkPos
	}
	return 0
}

func (x *Battle) GetDefPos() int32 {
	if x != nil && x.DefPos != nil {
		return *x.DefPos
	}
	return 0
}

func (x *Battle) GetAtkName() string {
	if x != nil && x.AtkName != nil {
		return *x.AtkName
	}
	return ""
}

func (x *Battle) GetDefName() string {
	if x != nil && x.DefName != nil {
		return *x.DefName
	}
	return ""
}

func (x *Battle) GetBattleType() int32 {
	if x != nil && x.BattleType != nil {
		return *x.BattleType
	}
	return 0
}

func (x *Battle) GetAtkHelpChatCnt() int32 {
	if x != nil && x.AtkHelpChatCnt != nil {
		return *x.AtkHelpChatCnt
	}
	return 0
}

func (x *Battle) GetDefHelpChatCnt() int32 {
	if x != nil && x.DefHelpChatCnt != nil {
		return *x.DefHelpChatCnt
	}
	return 0
}

func (x *Battle) GetAtkCityLv() int32 {
	if x != nil && x.AtkCityLv != nil {
		return *x.AtkCityLv
	}
	return 0
}

func (x *Battle) GetDefCityLv() int32 {
	if x != nil && x.DefCityLv != nil {
		return *x.DefCityLv
	}
	return 0
}

func (x *Battle) GetAtkLordId() int64 {
	if x != nil && x.AtkLordId != nil {
		return *x.AtkLordId
	}
	return 0
}

func (x *Battle) GetDefLordId() int64 {
	if x != nil && x.DefLordId != nil {
		return *x.DefLordId
	}
	return 0
}

func (x *Battle) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

// 城战、阵营战参与玩家和带的将领
type BattleRole struct {
	RoleId               *int64                  `protobuf:"varint,1,req,name=roleId" json:"roleId,omitempty"`
	HeroId               []int32                 `protobuf:"varint,2,rep,name=heroId" json:"heroId,omitempty"`
	KeyId                *int32                  `protobuf:"varint,3,opt,name=keyId" json:"keyId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *BattleRole) Reset() {
	*x = BattleRole{}
}

func (x *BattleRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattleRole) ProtoMessage() {}

func (x *BattleRole) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[84].MessageOf(x)
}

func (m *BattleRole) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[84].Methods()
}

// Deprecated: Use BattleRole.ProtoReflect.Type instead.
func (*BattleRole) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{84}
}

func (x *BattleRole) GetRoleId() int64 {
	if x != nil && x.RoleId != nil {
		return *x.RoleId
	}
	return 0
}

func (x *BattleRole) GetHeroId() []int32 {
	if x != nil {
		return x.HeroId
	}
	return nil
}

func (x *BattleRole) GetKeyId() int32 {
	if x != nil && x.KeyId != nil {
		return *x.KeyId
	}
	return 0
}

// 城战、阵营战数据库保存信息
type BattlePO struct {
	BattleId             *int32                  `protobuf:"varint,1,req,name=battleId" json:"battleId,omitempty"`
	Pos                  *int32                  `protobuf:"varint,2,req,name=pos" json:"pos,omitempty"`
	Type                 *int32                  `protobuf:"varint,3,req,name=type" json:"type,omitempty"`
	BattleTime           *int32                  `protobuf:"varint,4,req,name=battleTime" json:"battleTime,omitempty"`
	SponsorId            *int64                  `protobuf:"varint,5,req,name=sponsorId" json:"sponsorId,omitempty"`
	DefencerId           *int64                  `protobuf:"varint,6,opt,name=defencerId" json:"defencerId,omitempty"`
	AtkRole              []*BattleRole           `protobuf:"bytes,7,rep,name=atkRole" json:"atkRole,omitempty"`
	DefRole              []*BattleRole           `protobuf:"bytes,8,rep,name=defRole" json:"defRole,omitempty"`
	AtkCity              *int32                  `protobuf:"varint,9,opt,name=atkCity" json:"atkCity,omitempty"`
	AtkCamp              *int32                  `protobuf:"varint,10,opt,name=atkCamp" json:"atkCamp,omitempty"`
	AtkRoles             []int64                 `protobuf:"varint,11,rep,name=atkRoles" json:"atkRoles,omitempty"`
	DefRoles             []int64                 `protobuf:"varint,12,rep,name=defRoles" json:"defRoles,omitempty"`
	AtkPos               *int32                  `protobuf:"varint,13,opt,name=atkPos" json:"atkPos,omitempty"`
	BattleType           *int32                  `protobuf:"varint,14,opt,name=battleType" json:"battleType,omitempty"`
	AtkArm               *int32                  `protobuf:"varint,15,opt,name=atkArm" json:"atkArm,omitempty"`
	DefArm               *int32                  `protobuf:"varint,16,opt,name=defArm" json:"defArm,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *BattlePO) Reset() {
	*x = BattlePO{}
}

func (x *BattlePO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattlePO) ProtoMessage() {}

func (x *BattlePO) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[85].MessageOf(x)
}

func (m *BattlePO) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[85].Methods()
}

// Deprecated: Use BattlePO.ProtoReflect.Type instead.
func (*BattlePO) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{85}
}

func (x *BattlePO) GetBattleId() int32 {
	if x != nil && x.BattleId != nil {
		return *x.BattleId
	}
	return 0
}

func (x *BattlePO) GetPos() int32 {
	if x != nil && x.Pos != nil {
		return *x.Pos
	}
	return 0
}

func (x *BattlePO) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *BattlePO) GetBattleTime() int32 {
	if x != nil && x.BattleTime != nil {
		return *x.BattleTime
	}
	return 0
}

func (x *BattlePO) GetSponsorId() int64 {
	if x != nil && x.SponsorId != nil {
		return *x.SponsorId
	}
	return 0
}

func (x *BattlePO) GetDefencerId() int64 {
	if x != nil && x.DefencerId != nil {
		return *x.DefencerId
	}
	return 0
}

func (x *BattlePO) GetAtkRole() []*BattleRole {
	if x != nil {
		return x.AtkRole
	}
	return nil
}

func (x *BattlePO) GetDefRole() []*BattleRole {
	if x != nil {
		return x.DefRole
	}
	return nil
}

func (x *BattlePO) GetAtkCity() int32 {
	if x != nil && x.AtkCity != nil {
		return *x.AtkCity
	}
	return 0
}

func (x *BattlePO) GetAtkCamp() int32 {
	if x != nil && x.AtkCamp != nil {
		return *x.AtkCamp
	}
	return 0
}

func (x *BattlePO) GetAtkRoles() []int64 {
	if x != nil {
		return x.AtkRoles
	}
	return nil
}

func (x *BattlePO) GetDefRoles() []int64 {
	if x != nil {
		return x.DefRoles
	}
	return nil
}

func (x *BattlePO) GetAtkPos() int32 {
	if x != nil && x.AtkPos != nil {
		return *x.AtkPos
	}
	return 0
}

func (x *BattlePO) GetBattleType() int32 {
	if x != nil && x.BattleType != nil {
		return *x.BattleType
	}
	return 0
}

func (x *BattlePO) GetAtkArm() int32 {
	if x != nil && x.AtkArm != nil {
		return *x.AtkArm
	}
	return 0
}

func (x *BattlePO) GetDefArm() int32 {
	if x != nil && x.DefArm != nil {
		return *x.DefArm
	}
	return 0
}

//化工厂队列
type ChemicalQue struct {
	Id                   *int32                  `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	EndTime              *int32                  `protobuf:"varint,2,opt,name=endTime" json:"endTime,omitempty"`
	Period               *int32                  `protobuf:"varint,3,opt,name=period" json:"period,omitempty"`
	People               *int32                  `protobuf:"varint,4,opt,name=people" json:"people,omitempty"`
	Pos                  *int32                  `protobuf:"varint,5,opt,name=pos" json:"pos,omitempty"`
	ClonePos             *bool                   `protobuf:"varint,6,opt,name=clonePos" json:"clonePos,omitempty"`
	Sid                  *int32                  `protobuf:"varint,7,opt,name=sid" json:"sid,omitempty"`
	Count                *int32                  `protobuf:"varint,8,opt,name=count" json:"count,omitempty"`
	StartTime            *int32                  `protobuf:"varint,9,opt,name=startTime" json:"startTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *ChemicalQue) Reset() {
	*x = ChemicalQue{}
}

func (x *ChemicalQue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChemicalQue) ProtoMessage() {}

func (x *ChemicalQue) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[86].MessageOf(x)
}

func (m *ChemicalQue) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[86].Methods()
}

// Deprecated: Use ChemicalQue.ProtoReflect.Type instead.
func (*ChemicalQue) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{86}
}

func (x *ChemicalQue) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *ChemicalQue) GetEndTime() int32 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

func (x *ChemicalQue) GetPeriod() int32 {
	if x != nil && x.Period != nil {
		return *x.Period
	}
	return 0
}

func (x *ChemicalQue) GetPeople() int32 {
	if x != nil && x.People != nil {
		return *x.People
	}
	return 0
}

func (x *ChemicalQue) GetPos() int32 {
	if x != nil && x.Pos != nil {
		return *x.Pos
	}
	return 0
}

func (x *ChemicalQue) GetClonePos() bool {
	if x != nil && x.ClonePos != nil {
		return *x.ClonePos
	}
	return false
}

func (x *ChemicalQue) GetSid() int32 {
	if x != nil && x.Sid != nil {
		return *x.Sid
	}
	return 0
}

func (x *ChemicalQue) GetCount() int32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *ChemicalQue) GetStartTime() int32 {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return 0
}

// 阵营战简略信息
type CampBattle struct {
	CityId               *int32                  `protobuf:"varint,1,req,name=cityId" json:"cityId,omitempty"`
	AtkCamp              *int32                  `protobuf:"varint,2,req,name=atkCamp" json:"atkCamp,omitempty"`
	DefCamp              *int32                  `protobuf:"varint,3,req,name=defCamp" json:"defCamp,omitempty"`
	BattleTime           *int32                  `protobuf:"varint,4,req,name=battleTime" json:"battleTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *CampBattle) Reset() {
	*x = CampBattle{}
}

func (x *CampBattle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CampBattle) ProtoMessage() {}

func (x *CampBattle) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[87].MessageOf(x)
}

func (m *CampBattle) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[87].Methods()
}

// Deprecated: Use CampBattle.ProtoReflect.Type instead.
func (*CampBattle) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{87}
}

func (x *CampBattle) GetCityId() int32 {
	if x != nil && x.CityId != nil {
		return *x.CityId
	}
	return 0
}

func (x *CampBattle) GetAtkCamp() int32 {
	if x != nil && x.AtkCamp != nil {
		return *x.AtkCamp
	}
	return 0
}

func (x *CampBattle) GetDefCamp() int32 {
	if x != nil && x.DefCamp != nil {
		return *x.DefCamp
	}
	return 0
}

func (x *CampBattle) GetBattleTime() int32 {
	if x != nil && x.BattleTime != nil {
		return *x.BattleTime
	}
	return 0
}

// 玩家资源改变
type ChangeInfo struct {
	Type                 *int32                  `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	Id                   *int32                  `protobuf:"varint,2,req,name=id" json:"id,omitempty"`
	Count                *int64                  `protobuf:"varint,3,req,name=count" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *ChangeInfo) Reset() {
	*x = ChangeInfo{}
}

func (x *ChangeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeInfo) ProtoMessage() {}

func (x *ChangeInfo) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[88].MessageOf(x)
}

func (m *ChangeInfo) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[88].Methods()
}

// Deprecated: Use ChangeInfo.ProtoReflect.Type instead.
func (*ChangeInfo) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{88}
}

func (x *ChangeInfo) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *ChangeInfo) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *ChangeInfo) GetCount() int64 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

// 军团城池信息
type PartyCity struct {
	Pos                  *int32                  `protobuf:"varint,1,req,name=pos" json:"pos,omitempty"`
	CityId               *int32                  `protobuf:"varint,2,req,name=cityId" json:"cityId,omitempty"`
	CityLv               *int32                  `protobuf:"varint,3,req,name=cityLv" json:"cityLv,omitempty"`
	CurArm               *int32                  `protobuf:"varint,4,req,name=curArm" json:"curArm,omitempty"`
	MaxArm               *int32                  `protobuf:"varint,5,req,name=maxArm" json:"maxArm,omitempty"`
	Owner                *string                 `protobuf:"bytes,6,opt,name=owner" json:"owner,omitempty"`
	EndTime              *int32                  `protobuf:"varint,7,opt,name=endTime" json:"endTime,omitempty"`
	Role                 []*CamppaignRole        `protobuf:"bytes,8,rep,name=role" json:"role,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *PartyCity) Reset() {
	*x = PartyCity{}
}

func (x *PartyCity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyCity) ProtoMessage() {}

func (x *PartyCity) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[89].MessageOf(x)
}

func (m *PartyCity) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[89].Methods()
}

// Deprecated: Use PartyCity.ProtoReflect.Type instead.
func (*PartyCity) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{89}
}

func (x *PartyCity) GetPos() int32 {
	if x != nil && x.Pos != nil {
		return *x.Pos
	}
	return 0
}

func (x *PartyCity) GetCityId() int32 {
	if x != nil && x.CityId != nil {
		return *x.CityId
	}
	return 0
}

func (x *PartyCity) GetCityLv() int32 {
	if x != nil && x.CityLv != nil {
		return *x.CityLv
	}
	return 0
}

func (x *PartyCity) GetCurArm() int32 {
	if x != nil && x.CurArm != nil {
		return *x.CurArm
	}
	return 0
}

func (x *PartyCity) GetMaxArm() int32 {
	if x != nil && x.MaxArm != nil {
		return *x.MaxArm
	}
	return 0
}

func (x *PartyCity) GetOwner() string {
	if x != nil && x.Owner != nil {
		return *x.Owner
	}
	return ""
}

func (x *PartyCity) GetEndTime() int32 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

func (x *PartyCity) GetRole() []*CamppaignRole {
	if x != nil {
		return x.Role
	}
	return nil
}

// 军团荣誉排行信息
type PartyHonorRank struct {
	Rank                 *int32                  `protobuf:"varint,1,req,name=rank" json:"rank,omitempty"`
	Name                 *string                 `protobuf:"bytes,2,req,name=name" json:"name,omitempty"`
	Count                *int32                  `protobuf:"varint,3,req,name=count" json:"count,omitempty"`
	RoleId               *int64                  `protobuf:"varint,4,opt,name=roleId" json:"roleId,omitempty"`
	RankTime             *int32                  `protobuf:"varint,5,opt,name=rankTime" json:"rankTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *PartyHonorRank) Reset() {
	*x = PartyHonorRank{}
}

func (x *PartyHonorRank) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyHonorRank) ProtoMessage() {}

func (x *PartyHonorRank) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[90].MessageOf(x)
}

func (m *PartyHonorRank) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[90].Methods()
}

// Deprecated: Use PartyHonorRank.ProtoReflect.Type instead.
func (*PartyHonorRank) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{90}
}

func (x *PartyHonorRank) GetRank() int32 {
	if x != nil && x.Rank != nil {
		return *x.Rank
	}
	return 0
}

func (x *PartyHonorRank) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *PartyHonorRank) GetCount() int32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *PartyHonorRank) GetRoleId() int64 {
	if x != nil && x.RoleId != nil {
		return *x.RoleId
	}
	return 0
}

func (x *PartyHonorRank) GetRankTime() int32 {
	if x != nil && x.RankTime != nil {
		return *x.RankTime
	}
	return 0
}

// 军团日志
type PartyLog struct {
	LogId                *int32                  `protobuf:"varint,1,req,name=logId" json:"logId,omitempty"`
	Time                 *int32                  `protobuf:"varint,2,req,name=time" json:"time,omitempty"`
	Param                []string                `protobuf:"bytes,3,rep,name=param" json:"param,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *PartyLog) Reset() {
	*x = PartyLog{}
}

func (x *PartyLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyLog) ProtoMessage() {}

func (x *PartyLog) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[91].MessageOf(x)
}

func (m *PartyLog) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[91].Methods()
}

// Deprecated: Use PartyLog.ProtoReflect.Type instead.
func (*PartyLog) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{91}
}

func (x *PartyLog) GetLogId() int32 {
	if x != nil && x.LogId != nil {
		return *x.LogId
	}
	return 0
}

func (x *PartyLog) GetTime() int32 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return 0
}

func (x *PartyLog) GetParam() []string {
	if x != nil {
		return x.Param
	}
	return nil
}

// 军团官员信息
type PartyJob struct {
	RoleId               *int64                  `protobuf:"varint,1,req,name=roleId" json:"roleId,omitempty"`
	Name                 *string                 `protobuf:"bytes,2,req,name=name" json:"name,omitempty"`
	Job                  *int32                  `protobuf:"varint,3,req,name=job" json:"job,omitempty"`
	Lv                   *int32                  `protobuf:"varint,4,opt,name=lv" json:"lv,omitempty"`
	Fight                *int64                  `protobuf:"varint,5,opt,name=fight" json:"fight,omitempty"`
	Area                 *int32                  `protobuf:"varint,6,opt,name=area" json:"area,omitempty"`
	Portrait             *int32                  `protobuf:"varint,7,opt,name=portrait" json:"portrait,omitempty"`
	Ranks                *int32                  `protobuf:"varint,8,opt,name=ranks" json:"ranks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *PartyJob) Reset() {
	*x = PartyJob{}
}

func (x *PartyJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyJob) ProtoMessage() {}

func (x *PartyJob) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[92].MessageOf(x)
}

func (m *PartyJob) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[92].Methods()
}

// Deprecated: Use PartyJob.ProtoReflect.Type instead.
func (*PartyJob) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{92}
}

func (x *PartyJob) GetRoleId() int64 {
	if x != nil && x.RoleId != nil {
		return *x.RoleId
	}
	return 0
}

func (x *PartyJob) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *PartyJob) GetJob() int32 {
	if x != nil && x.Job != nil {
		return *x.Job
	}
	return 0
}

func (x *PartyJob) GetLv() int32 {
	if x != nil && x.Lv != nil {
		return *x.Lv
	}
	return 0
}

func (x *PartyJob) GetFight() int64 {
	if x != nil && x.Fight != nil {
		return *x.Fight
	}
	return 0
}

func (x *PartyJob) GetArea() int32 {
	if x != nil && x.Area != nil {
		return *x.Area
	}
	return 0
}

func (x *PartyJob) GetPortrait() int32 {
	if x != nil && x.Portrait != nil {
		return *x.Portrait
	}
	return 0
}

func (x *PartyJob) GetRanks() int32 {
	if x != nil && x.Ranks != nil {
		return *x.Ranks
	}
	return 0
}

// 军团官员选举信息
type PartyElection struct {
	RoleId               *int64                  `protobuf:"varint,1,req,name=roleId" json:"roleId,omitempty"`
	Name                 *string                 `protobuf:"bytes,2,req,name=name" json:"name,omitempty"`
	Votes                *int32                  `protobuf:"varint,3,req,name=votes" json:"votes,omitempty"`
	Lv                   *int32                  `protobuf:"varint,4,req,name=lv" json:"lv,omitempty"`
	Fight                *int64                  `protobuf:"varint,5,req,name=fight" json:"fight,omitempty"`
	Ranks                *int32                  `protobuf:"varint,6,opt,name=ranks" json:"ranks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *PartyElection) Reset() {
	*x = PartyElection{}
}

func (x *PartyElection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyElection) ProtoMessage() {}

func (x *PartyElection) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[93].MessageOf(x)
}

func (m *PartyElection) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[93].Methods()
}

// Deprecated: Use PartyElection.ProtoReflect.Type instead.
func (*PartyElection) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{93}
}

func (x *PartyElection) GetRoleId() int64 {
	if x != nil && x.RoleId != nil {
		return *x.RoleId
	}
	return 0
}

func (x *PartyElection) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *PartyElection) GetVotes() int32 {
	if x != nil && x.Votes != nil {
		return *x.Votes
	}
	return 0
}

func (x *PartyElection) GetLv() int32 {
	if x != nil && x.Lv != nil {
		return *x.Lv
	}
	return 0
}

func (x *PartyElection) GetFight() int64 {
	if x != nil && x.Fight != nil {
		return *x.Fight
	}
	return 0
}

func (x *PartyElection) GetRanks() int32 {
	if x != nil && x.Ranks != nil {
		return *x.Ranks
	}
	return 0
}

// 排行榜数据
type RankData struct {
	Name                 *string                 `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Lv                   *int32                  `protobuf:"varint,2,opt,name=lv" json:"lv,omitempty"`
	Value                *int64                  `protobuf:"varint,3,opt,name=value" json:"value,omitempty"`
	Area                 *int32                  `protobuf:"varint,4,opt,name=area" json:"area,omitempty"`
	Camp                 *int32                  `protobuf:"varint,5,opt,name=camp" json:"camp,omitempty"`
	Icon                 *int32                  `protobuf:"varint,6,opt,name=icon" json:"icon,omitempty"`
	Param                []string                `protobuf:"bytes,7,rep,name=param" json:"param,omitempty"`
	Rank                 *int32                  `protobuf:"varint,8,opt,name=rank" json:"rank,omitempty"`
	RoleId               *int64                  `protobuf:"varint,9,opt,name=roleId" json:"roleId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *RankData) Reset() {
	*x = RankData{}
}

func (x *RankData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RankData) ProtoMessage() {}

func (x *RankData) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[94].MessageOf(x)
}

func (m *RankData) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[94].Methods()
}

// Deprecated: Use RankData.ProtoReflect.Type instead.
func (*RankData) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{94}
}

func (x *RankData) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *RankData) GetLv() int32 {
	if x != nil && x.Lv != nil {
		return *x.Lv
	}
	return 0
}

func (x *RankData) GetValue() int64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

func (x *RankData) GetArea() int32 {
	if x != nil && x.Area != nil {
		return *x.Area
	}
	return 0
}

func (x *RankData) GetCamp() int32 {
	if x != nil && x.Camp != nil {
		return *x.Camp
	}
	return 0
}

func (x *RankData) GetIcon() int32 {
	if x != nil && x.Icon != nil {
		return *x.Icon
	}
	return 0
}

func (x *RankData) GetParam() []string {
	if x != nil {
		return x.Param
	}
	return nil
}

func (x *RankData) GetRank() int32 {
	if x != nil && x.Rank != nil {
		return *x.Rank
	}
	return 0
}

func (x *RankData) GetRoleId() int64 {
	if x != nil && x.RoleId != nil {
		return *x.RoleId
	}
	return 0
}

// 奖励(类型,奖励) 重建家园
type TypeAwards struct {
	Type                 *int32                  `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Reward               []*Award                `protobuf:"bytes,2,rep,name=reward" json:"reward,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *TypeAwards) Reset() {
	*x = TypeAwards{}
}

func (x *TypeAwards) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeAwards) ProtoMessage() {}

func (x *TypeAwards) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[95].MessageOf(x)
}

func (m *TypeAwards) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[95].Methods()
}

// Deprecated: Use TypeAwards.ProtoReflect.Type instead.
func (*TypeAwards) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{95}
}

func (x *TypeAwards) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *TypeAwards) GetReward() []*Award {
	if x != nil {
		return x.Reward
	}
	return nil
}

//搜索玩家
type Man struct {
	LordId               *int64                  `protobuf:"varint,1,req,name=lordId" json:"lordId,omitempty"`
	Icon                 *int32                  `protobuf:"varint,2,opt,name=icon" json:"icon,omitempty"`
	Sex                  *int32                  `protobuf:"varint,3,opt,name=sex" json:"sex,omitempty"`
	Nick                 *string                 `protobuf:"bytes,4,opt,name=nick" json:"nick,omitempty"`
	Level                *int32                  `protobuf:"varint,5,opt,name=level" json:"level,omitempty"`
	Fight                *int64                  `protobuf:"varint,6,opt,name=fight" json:"fight,omitempty"`
	Ranks                *int32                  `protobuf:"varint,7,opt,name=ranks" json:"ranks,omitempty"`
	Exp                  *int32                  `protobuf:"varint,8,opt,name=exp" json:"exp,omitempty"`
	Pos                  *int32                  `protobuf:"varint,9,opt,name=pos" json:"pos,omitempty"`
	Vip                  *int32                  `protobuf:"varint,10,opt,name=vip" json:"vip,omitempty"`
	Area                 *int32                  `protobuf:"varint,11,opt,name=area" json:"area,omitempty"`
	Camp                 *int32                  `protobuf:"varint,12,opt,name=camp" json:"camp,omitempty"`
	JobId                *int32                  `protobuf:"varint,13,opt,name=jobId" json:"jobId,omitempty"`
	Signature            *string                 `protobuf:"bytes,14,opt,name=signature" json:"signature,omitempty"`
	Job                  *int32                  `protobuf:"varint,15,opt,name=job" json:"job,omitempty"`
	FightNum             *int32                  `protobuf:"varint,16,opt,name=fightNum" json:"fightNum,omitempty"`
	ShowFight            []*TwoInt               `protobuf:"bytes,17,rep,name=ShowFight" json:"ShowFight,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *Man) Reset() {
	*x = Man{}
}

func (x *Man) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Man) ProtoMessage() {}

func (x *Man) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[96].MessageOf(x)
}

func (m *Man) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[96].Methods()
}

// Deprecated: Use Man.ProtoReflect.Type instead.
func (*Man) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{96}
}

func (x *Man) GetLordId() int64 {
	if x != nil && x.LordId != nil {
		return *x.LordId
	}
	return 0
}

func (x *Man) GetIcon() int32 {
	if x != nil && x.Icon != nil {
		return *x.Icon
	}
	return 0
}

func (x *Man) GetSex() int32 {
	if x != nil && x.Sex != nil {
		return *x.Sex
	}
	return 0
}

func (x *Man) GetNick() string {
	if x != nil && x.Nick != nil {
		return *x.Nick
	}
	return ""
}

func (x *Man) GetLevel() int32 {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return 0
}

func (x *Man) GetFight() int64 {
	if x != nil && x.Fight != nil {
		return *x.Fight
	}
	return 0
}

func (x *Man) GetRanks() int32 {
	if x != nil && x.Ranks != nil {
		return *x.Ranks
	}
	return 0
}

func (x *Man) GetExp() int32 {
	if x != nil && x.Exp != nil {
		return *x.Exp
	}
	return 0
}

func (x *Man) GetPos() int32 {
	if x != nil && x.Pos != nil {
		return *x.Pos
	}
	return 0
}

func (x *Man) GetVip() int32 {
	if x != nil && x.Vip != nil {
		return *x.Vip
	}
	return 0
}

func (x *Man) GetArea() int32 {
	if x != nil && x.Area != nil {
		return *x.Area
	}
	return 0
}

func (x *Man) GetCamp() int32 {
	if x != nil && x.Camp != nil {
		return *x.Camp
	}
	return 0
}

func (x *Man) GetJobId() int32 {
	if x != nil && x.JobId != nil {
		return *x.JobId
	}
	return 0
}

func (x *Man) GetSignature() string {
	if x != nil && x.Signature != nil {
		return *x.Signature
	}
	return ""
}

func (x *Man) GetJob() int32 {
	if x != nil && x.Job != nil {
		return *x.Job
	}
	return 0
}

func (x *Man) GetFightNum() int32 {
	if x != nil && x.FightNum != nil {
		return *x.FightNum
	}
	return 0
}

func (x *Man) GetShowFight() []*TwoInt {
	if x != nil {
		return x.ShowFight
	}
	return nil
}

//活动列表
type Activity struct {
	ActivityId           *int32                  `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	Name                 *string                 `protobuf:"bytes,2,req,name=name" json:"name,omitempty"`
	BeginTime            *int32                  `protobuf:"varint,3,req,name=beginTime" json:"beginTime,omitempty"`
	EndTime              *int32                  `protobuf:"varint,4,req,name=endTime" json:"endTime,omitempty"`
	DisplayTime          *int32                  `protobuf:"varint,5,opt,name=displayTime" json:"displayTime,omitempty"`
	Open                 *bool                   `protobuf:"varint,6,opt,name=open" json:"open,omitempty"`
	Tips                 *int32                  `protobuf:"varint,7,opt,name=tips" json:"tips,omitempty"`
	Type                 *int32                  `protobuf:"varint,8,opt,name=type" json:"type,omitempty"`
	AwardTime            *int32                  `protobuf:"varint,9,opt,name=awardTime" json:"awardTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *Activity) Reset() {
	*x = Activity{}
}

func (x *Activity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Activity) ProtoMessage() {}

func (x *Activity) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[97].MessageOf(x)
}

func (m *Activity) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[97].Methods()
}

// Deprecated: Use Activity.ProtoReflect.Type instead.
func (*Activity) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{97}
}

func (x *Activity) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *Activity) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Activity) GetBeginTime() int32 {
	if x != nil && x.BeginTime != nil {
		return *x.BeginTime
	}
	return 0
}

func (x *Activity) GetEndTime() int32 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

func (x *Activity) GetDisplayTime() int32 {
	if x != nil && x.DisplayTime != nil {
		return *x.DisplayTime
	}
	return 0
}

func (x *Activity) GetOpen() bool {
	if x != nil && x.Open != nil {
		return *x.Open
	}
	return false
}

func (x *Activity) GetTips() int32 {
	if x != nil && x.Tips != nil {
		return *x.Tips
	}
	return 0
}

func (x *Activity) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *Activity) GetAwardTime() int32 {
	if x != nil && x.AwardTime != nil {
		return *x.AwardTime
	}
	return 0
}

//活动完成值
type ActivityCond struct {
	KeyId                *int32                  `protobuf:"varint,1,req,name=keyId" json:"keyId,omitempty"`
	Type                 *int32                  `protobuf:"varint,2,opt,name=type" json:"type,omitempty"`
	Status               *int32                  `protobuf:"varint,3,opt,name=status" json:"status,omitempty"`
	Award                []*Award                `protobuf:"bytes,4,rep,name=award" json:"award,omitempty"`
	Param                *string                 `protobuf:"bytes,5,opt,name=param" json:"param,omitempty"`
	Cond                 *int32                  `protobuf:"varint,6,opt,name=cond" json:"cond,omitempty"`
	State                *int32                  `protobuf:"varint,7,opt,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *ActivityCond) Reset() {
	*x = ActivityCond{}
}

func (x *ActivityCond) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityCond) ProtoMessage() {}

func (x *ActivityCond) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[98].MessageOf(x)
}

func (m *ActivityCond) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[98].Methods()
}

// Deprecated: Use ActivityCond.ProtoReflect.Type instead.
func (*ActivityCond) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{98}
}

func (x *ActivityCond) GetKeyId() int32 {
	if x != nil && x.KeyId != nil {
		return *x.KeyId
	}
	return 0
}

func (x *ActivityCond) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *ActivityCond) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *ActivityCond) GetAward() []*Award {
	if x != nil {
		return x.Award
	}
	return nil
}

func (x *ActivityCond) GetParam() string {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return ""
}

func (x *ActivityCond) GetCond() int32 {
	if x != nil && x.Cond != nil {
		return *x.Cond
	}
	return 0
}

func (x *ActivityCond) GetState() int32 {
	if x != nil && x.State != nil {
		return *x.State
	}
	return 0
}

//七天活动
type Day7Act struct {
	KeyId                *int32                  `protobuf:"varint,1,req,name=keyId" json:"keyId,omitempty"`
	Status               *int32                  `protobuf:"varint,2,req,name=status" json:"status,omitempty"`
	Recved               *int32                  `protobuf:"varint,3,req,name=recved" json:"recved,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *Day7Act) Reset() {
	*x = Day7Act{}
}

func (x *Day7Act) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Day7Act) ProtoMessage() {}

func (x *Day7Act) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[99].MessageOf(x)
}

func (m *Day7Act) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[99].Methods()
}

// Deprecated: Use Day7Act.ProtoReflect.Type instead.
func (*Day7Act) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{99}
}

func (x *Day7Act) GetKeyId() int32 {
	if x != nil && x.KeyId != nil {
		return *x.KeyId
	}
	return 0
}

func (x *Day7Act) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *Day7Act) GetRecved() int32 {
	if x != nil && x.Recved != nil {
		return *x.Recved
	}
	return 0
}

// 攻城掠地(活跃度进度)
type AtkCityActActive struct {
	KeyId                *int32                  `protobuf:"varint,1,req,name=keyId" json:"keyId,omitempty"`
	Recved               *int32                  `protobuf:"varint,2,req,name=recved" json:"recved,omitempty"`
	Award                []*Award                `protobuf:"bytes,3,rep,name=award" json:"award,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *AtkCityActActive) Reset() {
	*x = AtkCityActActive{}
}

func (x *AtkCityActActive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AtkCityActActive) ProtoMessage() {}

func (x *AtkCityActActive) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[100].MessageOf(x)
}

func (m *AtkCityActActive) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[100].Methods()
}

// Deprecated: Use AtkCityActActive.ProtoReflect.Type instead.
func (*AtkCityActActive) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{100}
}

func (x *AtkCityActActive) GetKeyId() int32 {
	if x != nil && x.KeyId != nil {
		return *x.KeyId
	}
	return 0
}

func (x *AtkCityActActive) GetRecved() int32 {
	if x != nil && x.Recved != nil {
		return *x.Recved
	}
	return 0
}

func (x *AtkCityActActive) GetAward() []*Award {
	if x != nil {
		return x.Award
	}
	return nil
}

// 攻城掠地(目标进度)
type AtkCityActTask struct {
	KeyId                *int32                  `protobuf:"varint,1,req,name=keyId" json:"keyId,omitempty"`
	Day                  *int32                  `protobuf:"varint,2,req,name=day" json:"day,omitempty"`
	Cond                 *int32                  `protobuf:"varint,3,req,name=cond" json:"cond,omitempty"`
	State                *int32                  `protobuf:"varint,4,req,name=state" json:"state,omitempty"`
	Actice               *int32                  `protobuf:"varint,5,req,name=actice" json:"actice,omitempty"`
	Param                *string                 `protobuf:"bytes,6,opt,name=param" json:"param,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *AtkCityActTask) Reset() {
	*x = AtkCityActTask{}
}

func (x *AtkCityActTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AtkCityActTask) ProtoMessage() {}

func (x *AtkCityActTask) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[101].MessageOf(x)
}

func (m *AtkCityActTask) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[101].Methods()
}

// Deprecated: Use AtkCityActTask.ProtoReflect.Type instead.
func (*AtkCityActTask) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{101}
}

func (x *AtkCityActTask) GetKeyId() int32 {
	if x != nil && x.KeyId != nil {
		return *x.KeyId
	}
	return 0
}

func (x *AtkCityActTask) GetDay() int32 {
	if x != nil && x.Day != nil {
		return *x.Day
	}
	return 0
}

func (x *AtkCityActTask) GetCond() int32 {
	if x != nil && x.Cond != nil {
		return *x.Cond
	}
	return 0
}

func (x *AtkCityActTask) GetState() int32 {
	if x != nil && x.State != nil {
		return *x.State
	}
	return 0
}

func (x *AtkCityActTask) GetActice() int32 {
	if x != nil && x.Actice != nil {
		return *x.Actice
	}
	return 0
}

func (x *AtkCityActTask) GetParam() string {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return ""
}

// 良将寻访结果
type SearchHero struct {
	SearchId             *int32                  `protobuf:"varint,1,req,name=searchId" json:"searchId,omitempty"`
	Hero                 *Hero                   `protobuf:"bytes,2,opt,name=hero" json:"hero,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SearchHero) Reset() {
	*x = SearchHero{}
}

func (x *SearchHero) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchHero) ProtoMessage() {}

func (x *SearchHero) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[102].MessageOf(x)
}

func (m *SearchHero) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[102].Methods()
}

// Deprecated: Use SearchHero.ProtoReflect.Type instead.
func (*SearchHero) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{102}
}

func (x *SearchHero) GetSearchId() int32 {
	if x != nil && x.SearchId != nil {
		return *x.SearchId
	}
	return 0
}

func (x *SearchHero) GetHero() *Hero {
	if x != nil {
		return x.Hero
	}
	return nil
}

// 世界任务
type WorldTask struct {
	TaskId               *int32                  `protobuf:"varint,1,req,name=taskId" json:"taskId,omitempty"`
	TaskCnt              *int32                  `protobuf:"varint,2,opt,name=taskCnt" json:"taskCnt,omitempty"`
	Camp                 *int32                  `protobuf:"varint,3,opt,name=camp" json:"camp,omitempty"`
	Hp                   *int32                  `protobuf:"varint,4,opt,name=hp" json:"hp,omitempty"`
	RoleId               *int32                  `protobuf:"varint,5,opt,name=roleId" json:"roleId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *WorldTask) Reset() {
	*x = WorldTask{}
}

func (x *WorldTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldTask) ProtoMessage() {}

func (x *WorldTask) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[103].MessageOf(x)
}

func (m *WorldTask) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[103].Methods()
}

// Deprecated: Use WorldTask.ProtoReflect.Type instead.
func (*WorldTask) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{103}
}

func (x *WorldTask) GetTaskId() int32 {
	if x != nil && x.TaskId != nil {
		return *x.TaskId
	}
	return 0
}

func (x *WorldTask) GetTaskCnt() int32 {
	if x != nil && x.TaskCnt != nil {
		return *x.TaskCnt
	}
	return 0
}

func (x *WorldTask) GetCamp() int32 {
	if x != nil && x.Camp != nil {
		return *x.Camp
	}
	return 0
}

func (x *WorldTask) GetHp() int32 {
	if x != nil && x.Hp != nil {
		return *x.Hp
	}
	return 0
}

func (x *WorldTask) GetRoleId() int32 {
	if x != nil && x.RoleId != nil {
		return *x.RoleId
	}
	return 0
}

// npc的战斗信息
type Force struct {
	NpcId                *int32                  `protobuf:"varint,1,opt,name=npcId" json:"npcId,omitempty"`
	Hp                   *int32                  `protobuf:"varint,2,opt,name=hp" json:"hp,omitempty"`
	CurLine              *int32                  `protobuf:"varint,3,opt,name=curLine" json:"curLine,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *Force) Reset() {
	*x = Force{}
}

func (x *Force) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Force) ProtoMessage() {}

func (x *Force) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[104].MessageOf(x)
}

func (m *Force) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[104].Methods()
}

// Deprecated: Use Force.ProtoReflect.Type instead.
func (*Force) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{104}
}

func (x *Force) GetNpcId() int32 {
	if x != nil && x.NpcId != nil {
		return *x.NpcId
	}
	return 0
}

func (x *Force) GetHp() int32 {
	if x != nil && x.Hp != nil {
		return *x.Hp
	}
	return 0
}

func (x *Force) GetCurLine() int32 {
	if x != nil && x.CurLine != nil {
		return *x.CurLine
	}
	return 0
}

// 好友(用于存储数据库)
type DbFriend struct {
	LordId               *int64                  `protobuf:"varint,1,req,name=lordId" json:"lordId,omitempty"`
	AddTime              *int32                  `protobuf:"varint,2,req,name=addTime" json:"addTime,omitempty"`
	State                *int32                  `protobuf:"varint,3,req,name=state" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *DbFriend) Reset() {
	*x = DbFriend{}
}

func (x *DbFriend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbFriend) ProtoMessage() {}

func (x *DbFriend) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[105].MessageOf(x)
}

func (m *DbFriend) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[105].Methods()
}

// Deprecated: Use DbFriend.ProtoReflect.Type instead.
func (*DbFriend) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{105}
}

func (x *DbFriend) GetLordId() int64 {
	if x != nil && x.LordId != nil {
		return *x.LordId
	}
	return 0
}

func (x *DbFriend) GetAddTime() int32 {
	if x != nil && x.AddTime != nil {
		return *x.AddTime
	}
	return 0
}

func (x *DbFriend) GetState() int32 {
	if x != nil && x.State != nil {
		return *x.State
	}
	return 0
}

// 好友也可以查看玩家信息(与客户端传输使用)
type Friend struct {
	Man                  *Man                    `protobuf:"bytes,1,req,name=man" json:"man,omitempty"`
	AddTime              *int32                  `protobuf:"varint,2,opt,name=addTime" json:"addTime,omitempty"`
	State                *int32                  `protobuf:"varint,3,opt,name=state" json:"state,omitempty"`
	Hero                 []*FriendHero           `protobuf:"bytes,4,rep,name=hero" json:"hero,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *Friend) Reset() {
	*x = Friend{}
}

func (x *Friend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Friend) ProtoMessage() {}

func (x *Friend) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[106].MessageOf(x)
}

func (m *Friend) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[106].Methods()
}

// Deprecated: Use Friend.ProtoReflect.Type instead.
func (*Friend) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{106}
}

func (x *Friend) GetMan() *Man {
	if x != nil {
		return x.Man
	}
	return nil
}

func (x *Friend) GetAddTime() int32 {
	if x != nil && x.AddTime != nil {
		return *x.AddTime
	}
	return 0
}

func (x *Friend) GetState() int32 {
	if x != nil && x.State != nil {
		return *x.State
	}
	return 0
}

func (x *Friend) GetHero() []*FriendHero {
	if x != nil {
		return x.Hero
	}
	return nil
}

// 用于查看好友显示将领
type FriendHero struct {
	HeroId               *int32                  `protobuf:"varint,1,req,name=heroId" json:"heroId,omitempty"`
	Level                *int32                  `protobuf:"varint,2,req,name=level" json:"level,omitempty"`
	Exp                  *int32                  `protobuf:"varint,3,req,name=exp" json:"exp,omitempty"`
	Count                *int32                  `protobuf:"varint,4,opt,name=count" json:"count,omitempty"`
	Pos                  *int32                  `protobuf:"varint,5,opt,name=pos" json:"pos,omitempty"`
	Decorated            *int32                  `protobuf:"varint,6,opt,name=decorated" json:"decorated,omitempty"`
	Planes               []*TwoInt               `protobuf:"bytes,7,rep,name=planes" json:"planes,omitempty"`
	PlanePos             []*TwoInt               `protobuf:"bytes,8,rep,name=planePos" json:"planePos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *FriendHero) Reset() {
	*x = FriendHero{}
}

func (x *FriendHero) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendHero) ProtoMessage() {}

func (x *FriendHero) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[107].MessageOf(x)
}

func (m *FriendHero) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[107].Methods()
}

// Deprecated: Use FriendHero.ProtoReflect.Type instead.
func (*FriendHero) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{107}
}

func (x *FriendHero) GetHeroId() int32 {
	if x != nil && x.HeroId != nil {
		return *x.HeroId
	}
	return 0
}

func (x *FriendHero) GetLevel() int32 {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return 0
}

func (x *FriendHero) GetExp() int32 {
	if x != nil && x.Exp != nil {
		return *x.Exp
	}
	return 0
}

func (x *FriendHero) GetCount() int32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *FriendHero) GetPos() int32 {
	if x != nil && x.Pos != nil {
		return *x.Pos
	}
	return 0
}

func (x *FriendHero) GetDecorated() int32 {
	if x != nil && x.Decorated != nil {
		return *x.Decorated
	}
	return 0
}

func (x *FriendHero) GetPlanes() []*TwoInt {
	if x != nil {
		return x.Planes
	}
	return nil
}

func (x *FriendHero) GetPlanePos() []*TwoInt {
	if x != nil {
		return x.PlanePos
	}
	return nil
}

// 师徒(用于存储数据库)
type DbMasterApprentice struct {
	LordId               *int64                  `protobuf:"varint,1,req,name=lordId" json:"lordId,omitempty"`
	CreateTime           *int32                  `protobuf:"varint,2,req,name=createTime" json:"createTime,omitempty"`
	Relation             *int32                  `protobuf:"varint,3,req,name=relation" json:"relation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *DbMasterApprentice) Reset() {
	*x = DbMasterApprentice{}
}

func (x *DbMasterApprentice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbMasterApprentice) ProtoMessage() {}

func (x *DbMasterApprentice) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[108].MessageOf(x)
}

func (m *DbMasterApprentice) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[108].Methods()
}

// Deprecated: Use DbMasterApprentice.ProtoReflect.Type instead.
func (*DbMasterApprentice) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{108}
}

func (x *DbMasterApprentice) GetLordId() int64 {
	if x != nil && x.LordId != nil {
		return *x.LordId
	}
	return 0
}

func (x *DbMasterApprentice) GetCreateTime() int32 {
	if x != nil && x.CreateTime != nil {
		return *x.CreateTime
	}
	return 0
}

func (x *DbMasterApprentice) GetRelation() int32 {
	if x != nil && x.Relation != nil {
		return *x.Relation
	}
	return 0
}

// 师徒(与客户端传输使用)
type MasterApprentice struct {
	Man                  *Man                    `protobuf:"bytes,1,req,name=man" json:"man,omitempty"`
	CreateTime           *int32                  `protobuf:"varint,2,req,name=createTime" json:"createTime,omitempty"`
	Relation             *int32                  `protobuf:"varint,3,req,name=relation" json:"relation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *MasterApprentice) Reset() {
	*x = MasterApprentice{}
}

func (x *MasterApprentice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MasterApprentice) ProtoMessage() {}

func (x *MasterApprentice) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[109].MessageOf(x)
}

func (m *MasterApprentice) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[109].Methods()
}

// Deprecated: Use MasterApprentice.ProtoReflect.Type instead.
func (*MasterApprentice) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{109}
}

func (x *MasterApprentice) GetMan() *Man {
	if x != nil {
		return x.Man
	}
	return nil
}

func (x *MasterApprentice) GetCreateTime() int32 {
	if x != nil && x.CreateTime != nil {
		return *x.CreateTime
	}
	return 0
}

func (x *MasterApprentice) GetRelation() int32 {
	if x != nil && x.Relation != nil {
		return *x.Relation
	}
	return 0
}

// 黑鹰计划单个格子中的数据
type BlackhawkItem struct {
	KeyId                *int32                  `protobuf:"varint,1,req,name=keyId" json:"keyId,omitempty"`
	Cond                 *int32                  `protobuf:"varint,2,req,name=cond" json:"cond,omitempty"`
	Award                []int32                 `protobuf:"varint,3,rep,name=award" json:"award,omitempty"`
	IsPurchased          *bool                   `protobuf:"varint,4,req,name=isPurchased" json:"isPurchased,omitempty"`
	Price                *int32                  `protobuf:"varint,5,req,name=price" json:"price,omitempty"`
	Discount             *int32                  `protobuf:"varint,6,opt,name=discount" json:"discount,omitempty"`
	DiscountPrice        *int32                  `protobuf:"varint,7,opt,name=discountPrice" json:"discountPrice,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *BlackhawkItem) Reset() {
	*x = BlackhawkItem{}
}

func (x *BlackhawkItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlackhawkItem) ProtoMessage() {}

func (x *BlackhawkItem) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[110].MessageOf(x)
}

func (m *BlackhawkItem) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[110].Methods()
}

// Deprecated: Use BlackhawkItem.ProtoReflect.Type instead.
func (*BlackhawkItem) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{110}
}

func (x *BlackhawkItem) GetKeyId() int32 {
	if x != nil && x.KeyId != nil {
		return *x.KeyId
	}
	return 0
}

func (x *BlackhawkItem) GetCond() int32 {
	if x != nil && x.Cond != nil {
		return *x.Cond
	}
	return 0
}

func (x *BlackhawkItem) GetAward() []int32 {
	if x != nil {
		return x.Award
	}
	return nil
}

func (x *BlackhawkItem) GetIsPurchased() bool {
	if x != nil && x.IsPurchased != nil {
		return *x.IsPurchased
	}
	return false
}

func (x *BlackhawkItem) GetPrice() int32 {
	if x != nil && x.Price != nil {
		return *x.Price
	}
	return 0
}

func (x *BlackhawkItem) GetDiscount() int32 {
	if x != nil && x.Discount != nil {
		return *x.Discount
	}
	return 0
}

func (x *BlackhawkItem) GetDiscountPrice() int32 {
	if x != nil && x.DiscountPrice != nil {
		return *x.DiscountPrice
	}
	return 0
}

// 黑鹰计划的数据
type ActBlackhawk struct {
	RefreshTime          *int32                  `protobuf:"varint,1,opt,name=refreshTime" json:"refreshTime,omitempty"`
	PayRefreshCount      *int32                  `protobuf:"varint,2,opt,name=payRefreshCount" json:"payRefreshCount,omitempty"`
	RefreshCount         *int32                  `protobuf:"varint,3,opt,name=refreshCount" json:"refreshCount,omitempty"`
	IsRecvHero           *bool                   `protobuf:"varint,4,opt,name=isRecvHero" json:"isRecvHero,omitempty"`
	BlackhawkItems       []*BlackhawkItem        `protobuf:"bytes,5,rep,name=blackhawkItems" json:"blackhawkItems,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *ActBlackhawk) Reset() {
	*x = ActBlackhawk{}
}

func (x *ActBlackhawk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActBlackhawk) ProtoMessage() {}

func (x *ActBlackhawk) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[111].MessageOf(x)
}

func (m *ActBlackhawk) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[111].Methods()
}

// Deprecated: Use ActBlackhawk.ProtoReflect.Type instead.
func (*ActBlackhawk) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{111}
}

func (x *ActBlackhawk) GetRefreshTime() int32 {
	if x != nil && x.RefreshTime != nil {
		return *x.RefreshTime
	}
	return 0
}

func (x *ActBlackhawk) GetPayRefreshCount() int32 {
	if x != nil && x.PayRefreshCount != nil {
		return *x.PayRefreshCount
	}
	return 0
}

func (x *ActBlackhawk) GetRefreshCount() int32 {
	if x != nil && x.RefreshCount != nil {
		return *x.RefreshCount
	}
	return 0
}

func (x *ActBlackhawk) GetIsRecvHero() bool {
	if x != nil && x.IsRecvHero != nil {
		return *x.IsRecvHero
	}
	return false
}

func (x *ActBlackhawk) GetBlackhawkItems() []*BlackhawkItem {
	if x != nil {
		return x.BlackhawkItems
	}
	return nil
}

// 巴顿活动单个格子中的数据
type ActBartonItem struct {
	KeyId                *int32                  `protobuf:"varint,1,req,name=keyId" json:"keyId,omitempty"`
	Cond                 *int32                  `protobuf:"varint,2,req,name=cond" json:"cond,omitempty"`
	Award                []int32                 `protobuf:"varint,3,rep,name=award" json:"award,omitempty"`
	IsPurchased          *bool                   `protobuf:"varint,4,req,name=isPurchased" json:"isPurchased,omitempty"`
	Price                *int32                  `protobuf:"varint,5,req,name=price" json:"price,omitempty"`
	Discount             *int32                  `protobuf:"varint,6,opt,name=discount" json:"discount,omitempty"`
	DiscountPrice        *int32                  `protobuf:"varint,7,opt,name=discountPrice" json:"discountPrice,omitempty"`
	ActivityId           *int32                  `protobuf:"varint,8,opt,name=activityId" json:"activityId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *ActBartonItem) Reset() {
	*x = ActBartonItem{}
}

func (x *ActBartonItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActBartonItem) ProtoMessage() {}

func (x *ActBartonItem) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[112].MessageOf(x)
}

func (m *ActBartonItem) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[112].Methods()
}

// Deprecated: Use ActBartonItem.ProtoReflect.Type instead.
func (*ActBartonItem) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{112}
}

func (x *ActBartonItem) GetKeyId() int32 {
	if x != nil && x.KeyId != nil {
		return *x.KeyId
	}
	return 0
}

func (x *ActBartonItem) GetCond() int32 {
	if x != nil && x.Cond != nil {
		return *x.Cond
	}
	return 0
}

func (x *ActBartonItem) GetAward() []int32 {
	if x != nil {
		return x.Award
	}
	return nil
}

func (x *ActBartonItem) GetIsPurchased() bool {
	if x != nil && x.IsPurchased != nil {
		return *x.IsPurchased
	}
	return false
}

func (x *ActBartonItem) GetPrice() int32 {
	if x != nil && x.Price != nil {
		return *x.Price
	}
	return 0
}

func (x *ActBartonItem) GetDiscount() int32 {
	if x != nil && x.Discount != nil {
		return *x.Discount
	}
	return 0
}

func (x *ActBartonItem) GetDiscountPrice() int32 {
	if x != nil && x.DiscountPrice != nil {
		return *x.DiscountPrice
	}
	return 0
}

func (x *ActBartonItem) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

// 巴顿活动数据
type ActBarton struct {
	ActivityId           *int32                  `protobuf:"varint,1,req,name=activityId" json:"activityId,omitempty"`
	RefreshCount         *int32                  `protobuf:"varint,2,opt,name=refreshCount" json:"refreshCount,omitempty"`
	Items                []*ActBartonItem        `protobuf:"bytes,3,rep,name=items" json:"items,omitempty"`
	BeginTime            *int32                  `protobuf:"varint,4,opt,name=beginTime" json:"beginTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *ActBarton) Reset() {
	*x = ActBarton{}
}

func (x *ActBarton) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActBarton) ProtoMessage() {}

func (x *ActBarton) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[113].MessageOf(x)
}

func (m *ActBarton) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[113].Methods()
}

// Deprecated: Use ActBarton.ProtoReflect.Type instead.
func (*ActBarton) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{113}
}

func (x *ActBarton) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

func (x *ActBarton) GetRefreshCount() int32 {
	if x != nil && x.RefreshCount != nil {
		return *x.RefreshCount
	}
	return 0
}

func (x *ActBarton) GetItems() []*ActBartonItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ActBarton) GetBeginTime() int32 {
	if x != nil && x.BeginTime != nil {
		return *x.BeginTime
	}
	return 0
}

// 幸运转盘的数据
type DbActTurnplat struct {
	RefreshCount         *int32                  `protobuf:"varint,1,opt,name=refreshCount" json:"refreshCount,omitempty"`
	SpecialCnt           *int32                  `protobuf:"varint,2,opt,name=specialCnt" json:"specialCnt,omitempty"`
	WinCnt               []int32                 `protobuf:"varint,3,rep,name=winCnt" json:"winCnt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *DbActTurnplat) Reset() {
	*x = DbActTurnplat{}
}

func (x *DbActTurnplat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbActTurnplat) ProtoMessage() {}

func (x *DbActTurnplat) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[114].MessageOf(x)
}

func (m *DbActTurnplat) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[114].Methods()
}

// Deprecated: Use DbActTurnplat.ProtoReflect.Type instead.
func (*DbActTurnplat) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{114}
}

func (x *DbActTurnplat) GetRefreshCount() int32 {
	if x != nil && x.RefreshCount != nil {
		return *x.RefreshCount
	}
	return 0
}

func (x *DbActTurnplat) GetSpecialCnt() int32 {
	if x != nil && x.SpecialCnt != nil {
		return *x.SpecialCnt
	}
	return 0
}

func (x *DbActTurnplat) GetWinCnt() []int32 {
	if x != nil {
		return x.WinCnt
	}
	return nil
}

// 装备转盘的数据
type DbEquipTurnplat struct {
	RefreshCount         *int32                  `protobuf:"varint,1,opt,name=refreshCount" json:"refreshCount,omitempty"`
	SpecialCnt           *int32                  `protobuf:"varint,2,opt,name=specialCnt" json:"specialCnt,omitempty"`
	WinCnt               []int32                 `protobuf:"varint,3,rep,name=winCnt" json:"winCnt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *DbEquipTurnplat) Reset() {
	*x = DbEquipTurnplat{}
}

func (x *DbEquipTurnplat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbEquipTurnplat) ProtoMessage() {}

func (x *DbEquipTurnplat) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[115].MessageOf(x)
}

func (m *DbEquipTurnplat) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[115].Methods()
}

// Deprecated: Use DbEquipTurnplat.ProtoReflect.Type instead.
func (*DbEquipTurnplat) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{115}
}

func (x *DbEquipTurnplat) GetRefreshCount() int32 {
	if x != nil && x.RefreshCount != nil {
		return *x.RefreshCount
	}
	return 0
}

func (x *DbEquipTurnplat) GetSpecialCnt() int32 {
	if x != nil && x.SpecialCnt != nil {
		return *x.SpecialCnt
	}
	return 0
}

func (x *DbEquipTurnplat) GetWinCnt() []int32 {
	if x != nil {
		return x.WinCnt
	}
	return nil
}

// 特殊道具
type DbSpecialProp struct {
	Type                 *int32                  `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	SpecialId            []int32                 `protobuf:"varint,2,rep,name=specialId" json:"specialId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *DbSpecialProp) Reset() {
	*x = DbSpecialProp{}
}

func (x *DbSpecialProp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DbSpecialProp) ProtoMessage() {}

func (x *DbSpecialProp) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[116].MessageOf(x)
}

func (m *DbSpecialProp) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[116].Methods()
}

// Deprecated: Use DbSpecialProp.ProtoReflect.Type instead.
func (*DbSpecialProp) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{116}
}

func (x *DbSpecialProp) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *DbSpecialProp) GetSpecialId() []int32 {
	if x != nil {
		return x.SpecialId
	}
	return nil
}

// 活动排行榜
type ActRank struct {
	LordId               *int64                  `protobuf:"varint,1,req,name=lordId" json:"lordId,omitempty"`
	Rank                 *int32                  `protobuf:"varint,2,opt,name=rank" json:"rank,omitempty"`
	RankType             *int32                  `protobuf:"varint,3,opt,name=rankType" json:"rankType,omitempty"`
	RankValue            *int64                  `protobuf:"varint,4,opt,name=rankValue" json:"rankValue,omitempty"`
	Param                *string                 `protobuf:"bytes,5,opt,name=param" json:"param,omitempty"`
	Nick                 *string                 `protobuf:"bytes,6,opt,name=nick" json:"nick,omitempty"`
	RankTime             *int32                  `protobuf:"varint,7,opt,name=rankTime" json:"rankTime,omitempty"`
	Camp                 *int32                  `protobuf:"varint,8,opt,name=camp" json:"camp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *ActRank) Reset() {
	*x = ActRank{}
}

func (x *ActRank) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActRank) ProtoMessage() {}

func (x *ActRank) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[117].MessageOf(x)
}

func (m *ActRank) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[117].Methods()
}

// Deprecated: Use ActRank.ProtoReflect.Type instead.
func (*ActRank) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{117}
}

func (x *ActRank) GetLordId() int64 {
	if x != nil && x.LordId != nil {
		return *x.LordId
	}
	return 0
}

func (x *ActRank) GetRank() int32 {
	if x != nil && x.Rank != nil {
		return *x.Rank
	}
	return 0
}

func (x *ActRank) GetRankType() int32 {
	if x != nil && x.RankType != nil {
		return *x.RankType
	}
	return 0
}

func (x *ActRank) GetRankValue() int64 {
	if x != nil && x.RankValue != nil {
		return *x.RankValue
	}
	return 0
}

func (x *ActRank) GetParam() string {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return ""
}

func (x *ActRank) GetNick() string {
	if x != nil && x.Nick != nil {
		return *x.Nick
	}
	return ""
}

func (x *ActRank) GetRankTime() int32 {
	if x != nil && x.RankTime != nil {
		return *x.RankTime
	}
	return 0
}

func (x *ActRank) GetCamp() int32 {
	if x != nil && x.Camp != nil {
		return *x.Camp
	}
	return 0
}

// 活动排行榜奖励
type RankAward struct {
	Rank                 *int32                  `protobuf:"varint,1,req,name=rank" json:"rank,omitempty"`
	RankEd               *int32                  `protobuf:"varint,2,req,name=rankEd" json:"rankEd,omitempty"`
	RankType             *int32                  `protobuf:"varint,3,opt,name=rankType" json:"rankType,omitempty"`
	Award                []*Award                `protobuf:"bytes,4,rep,name=award" json:"award,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *RankAward) Reset() {
	*x = RankAward{}
}

func (x *RankAward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RankAward) ProtoMessage() {}

func (x *RankAward) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[118].MessageOf(x)
}

func (m *RankAward) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[118].Methods()
}

// Deprecated: Use RankAward.ProtoReflect.Type instead.
func (*RankAward) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{118}
}

func (x *RankAward) GetRank() int32 {
	if x != nil && x.Rank != nil {
		return *x.Rank
	}
	return 0
}

func (x *RankAward) GetRankEd() int32 {
	if x != nil && x.RankEd != nil {
		return *x.RankEd
	}
	return 0
}

func (x *RankAward) GetRankType() int32 {
	if x != nil && x.RankType != nil {
		return *x.RankType
	}
	return 0
}

func (x *RankAward) GetAward() []*Award {
	if x != nil {
		return x.Award
	}
	return nil
}

// 地图点兵统领
type CabinetLead struct {
	Pos                  *int32                  `protobuf:"varint,1,req,name=pos" json:"pos,omitempty"`
	CabinetPlanId        *int32                  `protobuf:"varint,2,req,name=cabinetPlanId" json:"cabinetPlanId,omitempty"`
	RoleId               *int64                  `protobuf:"varint,3,req,name=roleId" json:"roleId,omitempty"`
	Camp                 *int32                  `protobuf:"varint,4,req,name=camp" json:"camp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *CabinetLead) Reset() {
	*x = CabinetLead{}
}

func (x *CabinetLead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CabinetLead) ProtoMessage() {}

func (x *CabinetLead) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[119].MessageOf(x)
}

func (m *CabinetLead) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[119].Methods()
}

// Deprecated: Use CabinetLead.ProtoReflect.Type instead.
func (*CabinetLead) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{119}
}

func (x *CabinetLead) GetPos() int32 {
	if x != nil && x.Pos != nil {
		return *x.Pos
	}
	return 0
}

func (x *CabinetLead) GetCabinetPlanId() int32 {
	if x != nil && x.CabinetPlanId != nil {
		return *x.CabinetPlanId
	}
	return 0
}

func (x *CabinetLead) GetRoleId() int64 {
	if x != nil && x.RoleId != nil {
		return *x.RoleId
	}
	return 0
}

func (x *CabinetLead) GetCamp() int32 {
	if x != nil && x.Camp != nil {
		return *x.Camp
	}
	return 0
}

// 召唤
type Summon struct {
	Count                *int32                  `protobuf:"varint,1,req,name=count" json:"count,omitempty"`
	LastTime             *int32                  `protobuf:"varint,2,req,name=lastTime" json:"lastTime,omitempty"`
	RespondId            []int64                 `protobuf:"varint,3,rep,name=respondId" json:"respondId,omitempty"`
	Status               *int32                  `protobuf:"varint,4,req,name=status" json:"status,omitempty"`
	Sum                  *int32                  `protobuf:"varint,5,req,name=sum" json:"sum,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *Summon) Reset() {
	*x = Summon{}
}

func (x *Summon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Summon) ProtoMessage() {}

func (x *Summon) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[120].MessageOf(x)
}

func (m *Summon) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[120].Methods()
}

// Deprecated: Use Summon.ProtoReflect.Type instead.
func (*Summon) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{120}
}

func (x *Summon) GetCount() int32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *Summon) GetLastTime() int32 {
	if x != nil && x.LastTime != nil {
		return *x.LastTime
	}
	return 0
}

func (x *Summon) GetRespondId() []int64 {
	if x != nil {
		return x.RespondId
	}
	return nil
}

func (x *Summon) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *Summon) GetSum() int32 {
	if x != nil && x.Sum != nil {
		return *x.Sum
	}
	return 0
}

// 剧情任务的章节
type Sectiontask struct {
	SectionId            *int32                  `protobuf:"varint,1,req,name=sectionId" json:"sectionId,omitempty"`
	Status               *int32                  `protobuf:"varint,2,req,name=status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *Sectiontask) Reset() {
	*x = Sectiontask{}
}

func (x *Sectiontask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sectiontask) ProtoMessage() {}

func (x *Sectiontask) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[121].MessageOf(x)
}

func (m *Sectiontask) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[121].Methods()
}

// Deprecated: Use Sectiontask.ProtoReflect.Type instead.
func (*Sectiontask) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{121}
}

func (x *Sectiontask) GetSectionId() int32 {
	if x != nil && x.SectionId != nil {
		return *x.SectionId
	}
	return 0
}

func (x *Sectiontask) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

type RobotDataRs struct {
	AreaCapacity         *int32                  `protobuf:"varint,1,req,name=areaCapacity" json:"areaCapacity,omitempty"`
	AreaRobotCount       *int32                  `protobuf:"varint,2,req,name=areaRobotCount" json:"areaRobotCount,omitempty"`
	ExternalCount        *int32                  `protobuf:"varint,3,req,name=externalCount" json:"externalCount,omitempty"`
	RuntimeCreateCount   *int32                  `protobuf:"varint,4,req,name=runtimeCreateCount" json:"runtimeCreateCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *RobotDataRs) Reset() {
	*x = RobotDataRs{}
}

func (x *RobotDataRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RobotDataRs) ProtoMessage() {}

func (x *RobotDataRs) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[122].MessageOf(x)
}

func (m *RobotDataRs) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[122].Methods()
}

// Deprecated: Use RobotDataRs.ProtoReflect.Type instead.
func (*RobotDataRs) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{122}
}

func (x *RobotDataRs) GetAreaCapacity() int32 {
	if x != nil && x.AreaCapacity != nil {
		return *x.AreaCapacity
	}
	return 0
}

func (x *RobotDataRs) GetAreaRobotCount() int32 {
	if x != nil && x.AreaRobotCount != nil {
		return *x.AreaRobotCount
	}
	return 0
}

func (x *RobotDataRs) GetExternalCount() int32 {
	if x != nil && x.ExternalCount != nil {
		return *x.ExternalCount
	}
	return 0
}

func (x *RobotDataRs) GetRuntimeCreateCount() int32 {
	if x != nil && x.RuntimeCreateCount != nil {
		return *x.RuntimeCreateCount
	}
	return 0
}

// 支付信息
type PayInfo struct {
	PayId                *int32                  `protobuf:"varint,1,req,name=PayId" json:"PayId,omitempty"`
	BanFlag              *int32                  `protobuf:"varint,2,req,name=banFlag" json:"banFlag,omitempty"`
	Price                *int32                  `protobuf:"varint,3,req,name=price" json:"price,omitempty"`
	Topup                *int32                  `protobuf:"varint,4,req,name=topup" json:"topup,omitempty"`
	ExtraGold            *int32                  `protobuf:"varint,5,req,name=extraGold" json:"extraGold,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *PayInfo) Reset() {
	*x = PayInfo{}
}

func (x *PayInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayInfo) ProtoMessage() {}

func (x *PayInfo) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[123].MessageOf(x)
}

func (m *PayInfo) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[123].Methods()
}

// Deprecated: Use PayInfo.ProtoReflect.Type instead.
func (*PayInfo) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{123}
}

func (x *PayInfo) GetPayId() int32 {
	if x != nil && x.PayId != nil {
		return *x.PayId
	}
	return 0
}

func (x *PayInfo) GetBanFlag() int32 {
	if x != nil && x.BanFlag != nil {
		return *x.BanFlag
	}
	return 0
}

func (x *PayInfo) GetPrice() int32 {
	if x != nil && x.Price != nil {
		return *x.Price
	}
	return 0
}

func (x *PayInfo) GetTopup() int32 {
	if x != nil && x.Topup != nil {
		return *x.Topup
	}
	return 0
}

func (x *PayInfo) GetExtraGold() int32 {
	if x != nil && x.ExtraGold != nil {
		return *x.ExtraGold
	}
	return 0
}

// 触发式礼包信息
type TriggerGiftInfo struct {
	TriggerId            *int32                  `protobuf:"varint,1,opt,name=triggerId" json:"triggerId,omitempty"`
	GiftId               *int32                  `protobuf:"varint,2,opt,name=giftId" json:"giftId,omitempty"`
	Count                *int32                  `protobuf:"varint,3,opt,name=count" json:"count,omitempty"`
	LastTime             *int32                  `protobuf:"varint,4,opt,name=lastTime" json:"lastTime,omitempty"`
	RoleId               *int64                  `protobuf:"varint,5,req,name=roleId" json:"roleId,omitempty"`
	State                *int32                  `protobuf:"varint,6,opt,name=state" json:"state,omitempty"`
	Payinfo              *PayInfo                `protobuf:"bytes,7,opt,name=payinfo" json:"payinfo,omitempty"`
	PayinfoIos           *PayInfo                `protobuf:"bytes,8,opt,name=payinfoIos" json:"payinfoIos,omitempty"`
	Gold                 *int32                  `protobuf:"varint,9,opt,name=gold" json:"gold,omitempty"`
	Cut                  *int32                  `protobuf:"varint,10,opt,name=cut" json:"cut,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *TriggerGiftInfo) Reset() {
	*x = TriggerGiftInfo{}
}

func (x *TriggerGiftInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerGiftInfo) ProtoMessage() {}

func (x *TriggerGiftInfo) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[124].MessageOf(x)
}

func (m *TriggerGiftInfo) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[124].Methods()
}

// Deprecated: Use TriggerGiftInfo.ProtoReflect.Type instead.
func (*TriggerGiftInfo) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{124}
}

func (x *TriggerGiftInfo) GetTriggerId() int32 {
	if x != nil && x.TriggerId != nil {
		return *x.TriggerId
	}
	return 0
}

func (x *TriggerGiftInfo) GetGiftId() int32 {
	if x != nil && x.GiftId != nil {
		return *x.GiftId
	}
	return 0
}

func (x *TriggerGiftInfo) GetCount() int32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *TriggerGiftInfo) GetLastTime() int32 {
	if x != nil && x.LastTime != nil {
		return *x.LastTime
	}
	return 0
}

func (x *TriggerGiftInfo) GetRoleId() int64 {
	if x != nil && x.RoleId != nil {
		return *x.RoleId
	}
	return 0
}

func (x *TriggerGiftInfo) GetState() int32 {
	if x != nil && x.State != nil {
		return *x.State
	}
	return 0
}

func (x *TriggerGiftInfo) GetPayinfo() *PayInfo {
	if x != nil {
		return x.Payinfo
	}
	return nil
}

func (x *TriggerGiftInfo) GetPayinfoIos() *PayInfo {
	if x != nil {
		return x.PayinfoIos
	}
	return nil
}

func (x *TriggerGiftInfo) GetGold() int32 {
	if x != nil && x.Gold != nil {
		return *x.Gold
	}
	return 0
}

func (x *TriggerGiftInfo) GetCut() int32 {
	if x != nil && x.Cut != nil {
		return *x.Cut
	}
	return 0
}

// 查询玩家信息的对象封装(给后台查数据使用)
type PlayerInfo struct {
	Prop                 []*Prop                 `protobuf:"bytes,1,rep,name=prop" json:"prop,omitempty"`
	Equip                []*Equip                `protobuf:"bytes,2,rep,name=equip" json:"equip,omitempty"`
	Hero                 []*Hero                 `protobuf:"bytes,3,rep,name=hero" json:"hero,omitempty"`
	SuperEquip           []*SuperEquip           `protobuf:"bytes,4,rep,name=superEquip" json:"superEquip,omitempty"`
	Tech                 []*Tech                 `protobuf:"bytes,5,rep,name=tech" json:"tech,omitempty"`
	Build                []*BuildingBase         `protobuf:"bytes,6,rep,name=build" json:"build,omitempty"`
	Mill                 []*Mill                 `protobuf:"bytes,7,rep,name=mill" json:"mill,omitempty"`
	Ext                  *string                 `protobuf:"bytes,8,opt,name=ext" json:"ext,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *PlayerInfo) Reset() {
	*x = PlayerInfo{}
}

func (x *PlayerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerInfo) ProtoMessage() {}

func (x *PlayerInfo) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[125].MessageOf(x)
}

func (m *PlayerInfo) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[125].Methods()
}

// Deprecated: Use PlayerInfo.ProtoReflect.Type instead.
func (*PlayerInfo) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{125}
}

func (x *PlayerInfo) GetProp() []*Prop {
	if x != nil {
		return x.Prop
	}
	return nil
}

func (x *PlayerInfo) GetEquip() []*Equip {
	if x != nil {
		return x.Equip
	}
	return nil
}

func (x *PlayerInfo) GetHero() []*Hero {
	if x != nil {
		return x.Hero
	}
	return nil
}

func (x *PlayerInfo) GetSuperEquip() []*SuperEquip {
	if x != nil {
		return x.SuperEquip
	}
	return nil
}

func (x *PlayerInfo) GetTech() []*Tech {
	if x != nil {
		return x.Tech
	}
	return nil
}

func (x *PlayerInfo) GetBuild() []*BuildingBase {
	if x != nil {
		return x.Build
	}
	return nil
}

func (x *PlayerInfo) GetMill() []*Mill {
	if x != nil {
		return x.Mill
	}
	return nil
}

func (x *PlayerInfo) GetExt() string {
	if x != nil && x.Ext != nil {
		return *x.Ext
	}
	return ""
}

// 地图盖世太保
type Gestapo struct {
	Pos                  *int32                  `protobuf:"varint,1,req,name=pos" json:"pos,omitempty"`
	GestapoId            *int32                  `protobuf:"varint,2,req,name=gestapoId" json:"gestapoId,omitempty"`
	RoleId               *int64                  `protobuf:"varint,3,req,name=roleId" json:"roleId,omitempty"`
	EndTime              *int32                  `protobuf:"varint,4,req,name=endTime" json:"endTime,omitempty"`
	Status               *int32                  `protobuf:"varint,5,req,name=status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *Gestapo) Reset() {
	*x = Gestapo{}
}

func (x *Gestapo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Gestapo) ProtoMessage() {}

func (x *Gestapo) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[126].MessageOf(x)
}

func (m *Gestapo) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[126].Methods()
}

// Deprecated: Use Gestapo.ProtoReflect.Type instead.
func (*Gestapo) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{126}
}

func (x *Gestapo) GetPos() int32 {
	if x != nil && x.Pos != nil {
		return *x.Pos
	}
	return 0
}

func (x *Gestapo) GetGestapoId() int32 {
	if x != nil && x.GestapoId != nil {
		return *x.GestapoId
	}
	return 0
}

func (x *Gestapo) GetRoleId() int64 {
	if x != nil && x.RoleId != nil {
		return *x.RoleId
	}
	return 0
}

func (x *Gestapo) GetEndTime() int32 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

func (x *Gestapo) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

// 太保战斗简略信息
type GestapoBattle struct {
	Gestapo              *int32                  `protobuf:"varint,1,req,name=gestapo" json:"gestapo,omitempty"`
	AtkCamp              *int32                  `protobuf:"varint,2,req,name=atkCamp" json:"atkCamp,omitempty"`
	BattleTime           *int32                  `protobuf:"varint,3,req,name=battleTime" json:"battleTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *GestapoBattle) Reset() {
	*x = GestapoBattle{}
}

func (x *GestapoBattle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GestapoBattle) ProtoMessage() {}

func (x *GestapoBattle) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[127].MessageOf(x)
}

func (m *GestapoBattle) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[127].Methods()
}

// Deprecated: Use GestapoBattle.ProtoReflect.Type instead.
func (*GestapoBattle) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{127}
}

func (x *GestapoBattle) GetGestapo() int32 {
	if x != nil && x.Gestapo != nil {
		return *x.Gestapo
	}
	return 0
}

func (x *GestapoBattle) GetAtkCamp() int32 {
	if x != nil && x.AtkCamp != nil {
		return *x.AtkCamp
	}
	return 0
}

func (x *GestapoBattle) GetBattleTime() int32 {
	if x != nil && x.BattleTime != nil {
		return *x.BattleTime
	}
	return 0
}

type GestapoCampRank struct {
	Camp                 *int32                  `protobuf:"varint,1,req,name=camp" json:"camp,omitempty"`
	Val                  *int32                  `protobuf:"varint,2,req,name=val" json:"val,omitempty"`
	Time                 *int32                  `protobuf:"varint,3,req,name=time" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *GestapoCampRank) Reset() {
	*x = GestapoCampRank{}
}

func (x *GestapoCampRank) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GestapoCampRank) ProtoMessage() {}

func (x *GestapoCampRank) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[128].MessageOf(x)
}

func (m *GestapoCampRank) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[128].Methods()
}

// Deprecated: Use GestapoCampRank.ProtoReflect.Type instead.
func (*GestapoCampRank) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{128}
}

func (x *GestapoCampRank) GetCamp() int32 {
	if x != nil && x.Camp != nil {
		return *x.Camp
	}
	return 0
}

func (x *GestapoCampRank) GetVal() int32 {
	if x != nil && x.Val != nil {
		return *x.Val
	}
	return 0
}

func (x *GestapoCampRank) GetTime() int32 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return 0
}

// 宝石
type Stone struct {
	StoneId              *int32                  `protobuf:"varint,1,req,name=stoneId" json:"stoneId,omitempty"`
	Cnt                  *int32                  `protobuf:"varint,2,req,name=cnt" json:"cnt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *Stone) Reset() {
	*x = Stone{}
}

func (x *Stone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stone) ProtoMessage() {}

func (x *Stone) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[129].MessageOf(x)
}

func (m *Stone) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[129].Methods()
}

// Deprecated: Use Stone.ProtoReflect.Type instead.
func (*Stone) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{129}
}

func (x *Stone) GetStoneId() int32 {
	if x != nil && x.StoneId != nil {
		return *x.StoneId
	}
	return 0
}

func (x *Stone) GetCnt() int32 {
	if x != nil && x.Cnt != nil {
		return *x.Cnt
	}
	return 0
}

// 进阶后的宝石
type StoneImprove struct {
	KeyId                *int32                  `protobuf:"varint,1,req,name=keyId" json:"keyId,omitempty"`
	StoneImproveId       *int32                  `protobuf:"varint,2,req,name=stoneImproveId" json:"stoneImproveId,omitempty"`
	Exp                  *int32                  `protobuf:"varint,3,req,name=exp" json:"exp,omitempty"`
	HoleIndex            *int32                  `protobuf:"varint,4,req,name=holeIndex" json:"holeIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *StoneImprove) Reset() {
	*x = StoneImprove{}
}

func (x *StoneImprove) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoneImprove) ProtoMessage() {}

func (x *StoneImprove) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[130].MessageOf(x)
}

func (m *StoneImprove) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[130].Methods()
}

// Deprecated: Use StoneImprove.ProtoReflect.Type instead.
func (*StoneImprove) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{130}
}

func (x *StoneImprove) GetKeyId() int32 {
	if x != nil && x.KeyId != nil {
		return *x.KeyId
	}
	return 0
}

func (x *StoneImprove) GetStoneImproveId() int32 {
	if x != nil && x.StoneImproveId != nil {
		return *x.StoneImproveId
	}
	return 0
}

func (x *StoneImprove) GetExp() int32 {
	if x != nil && x.Exp != nil {
		return *x.Exp
	}
	return 0
}

func (x *StoneImprove) GetHoleIndex() int32 {
	if x != nil && x.HoleIndex != nil {
		return *x.HoleIndex
	}
	return 0
}

// 孔位
type StoneHole struct {
	HoleIndex            *int32                  `protobuf:"varint,1,req,name=holeIndex" json:"holeIndex,omitempty"`
	StoneId              *int32                  `protobuf:"varint,2,req,name=stoneId" json:"stoneId,omitempty"`
	Type                 *int32                  `protobuf:"varint,3,opt,name=type" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *StoneHole) Reset() {
	*x = StoneHole{}
}

func (x *StoneHole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoneHole) ProtoMessage() {}

func (x *StoneHole) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[131].MessageOf(x)
}

func (m *StoneHole) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[131].Methods()
}

// Deprecated: Use StoneHole.ProtoReflect.Type instead.
func (*StoneHole) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{131}
}

func (x *StoneHole) GetHoleIndex() int32 {
	if x != nil && x.HoleIndex != nil {
		return *x.HoleIndex
	}
	return 0
}

func (x *StoneHole) GetStoneId() int32 {
	if x != nil && x.StoneId != nil {
		return *x.StoneId
	}
	return 0
}

func (x *StoneHole) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

// 宝石相关的消息
type StoneInfo struct {
	Stone                []*Stone                `protobuf:"bytes,1,rep,name=stone" json:"stone,omitempty"`
	StoneHole            []*StoneHole            `protobuf:"bytes,2,rep,name=stoneHole" json:"stoneHole,omitempty"`
	AttackCombatCnt      *int32                  `protobuf:"varint,3,opt,name=attackCombatCnt" json:"attackCombatCnt,omitempty"`
	BuyCombatCnt         *int32                  `protobuf:"varint,4,opt,name=buyCombatCnt" json:"buyCombatCnt,omitempty"`
	StoneImprove         []*StoneImprove         `protobuf:"bytes,5,rep,name=stoneImprove" json:"stoneImprove,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *StoneInfo) Reset() {
	*x = StoneInfo{}
}

func (x *StoneInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoneInfo) ProtoMessage() {}

func (x *StoneInfo) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[132].MessageOf(x)
}

func (m *StoneInfo) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[132].Methods()
}

// Deprecated: Use StoneInfo.ProtoReflect.Type instead.
func (*StoneInfo) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{132}
}

func (x *StoneInfo) GetStone() []*Stone {
	if x != nil {
		return x.Stone
	}
	return nil
}

func (x *StoneInfo) GetStoneHole() []*StoneHole {
	if x != nil {
		return x.StoneHole
	}
	return nil
}

func (x *StoneInfo) GetAttackCombatCnt() int32 {
	if x != nil && x.AttackCombatCnt != nil {
		return *x.AttackCombatCnt
	}
	return 0
}

func (x *StoneInfo) GetBuyCombatCnt() int32 {
	if x != nil && x.BuyCombatCnt != nil {
		return *x.BuyCombatCnt
	}
	return 0
}

func (x *StoneInfo) GetStoneImprove() []*StoneImprove {
	if x != nil {
		return x.StoneImprove
	}
	return nil
}

// 女特工
type FemaleAgent struct {
	Id                   *int32                  `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Quality              *int32                  `protobuf:"varint,2,req,name=quality" json:"quality,omitempty"`
	AttrVal              *int32                  `protobuf:"varint,3,opt,name=attrVal" json:"attrVal,omitempty"`
	SkillVal             *int32                  `protobuf:"varint,4,opt,name=skillVal" json:"skillVal,omitempty"`
	Exp                  *int32                  `protobuf:"varint,5,opt,name=exp" json:"exp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *FemaleAgent) Reset() {
	*x = FemaleAgent{}
}

func (x *FemaleAgent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FemaleAgent) ProtoMessage() {}

func (x *FemaleAgent) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[133].MessageOf(x)
}

func (m *FemaleAgent) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[133].Methods()
}

// Deprecated: Use FemaleAgent.ProtoReflect.Type instead.
func (*FemaleAgent) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{133}
}

func (x *FemaleAgent) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *FemaleAgent) GetQuality() int32 {
	if x != nil && x.Quality != nil {
		return *x.Quality
	}
	return 0
}

func (x *FemaleAgent) GetAttrVal() int32 {
	if x != nil && x.AttrVal != nil {
		return *x.AttrVal
	}
	return 0
}

func (x *FemaleAgent) GetSkillVal() int32 {
	if x != nil && x.SkillVal != nil {
		return *x.SkillVal
	}
	return 0
}

func (x *FemaleAgent) GetExp() int32 {
	if x != nil && x.Exp != nil {
		return *x.Exp
	}
	return 0
}

// 弹幕
type Barrage struct {
	Time                 *int32                  `protobuf:"varint,1,req,name=time" json:"time,omitempty"`
	BarrgeId             *int32                  `protobuf:"varint,2,req,name=barrgeId" json:"barrgeId,omitempty"`
	Param                []string                `protobuf:"bytes,3,rep,name=param" json:"param,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *Barrage) Reset() {
	*x = Barrage{}
}

func (x *Barrage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Barrage) ProtoMessage() {}

func (x *Barrage) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[134].MessageOf(x)
}

func (m *Barrage) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[134].Methods()
}

// Deprecated: Use Barrage.ProtoReflect.Type instead.
func (*Barrage) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{134}
}

func (x *Barrage) GetTime() int32 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return 0
}

func (x *Barrage) GetBarrgeId() int32 {
	if x != nil && x.BarrgeId != nil {
		return *x.BarrgeId
	}
	return 0
}

func (x *Barrage) GetParam() []string {
	if x != nil {
		return x.Param
	}
	return nil
}

// 幸运转盘的信息
type TurnplateInfo struct {
	Id                   *int32                  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Count                *int32                  `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	Price                *int32                  `protobuf:"varint,3,opt,name=price" json:"price,omitempty"`
	Point                *int32                  `protobuf:"varint,4,opt,name=point" json:"point,omitempty"`
	Title                *string                 `protobuf:"bytes,5,opt,name=title" json:"title,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *TurnplateInfo) Reset() {
	*x = TurnplateInfo{}
}

func (x *TurnplateInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TurnplateInfo) ProtoMessage() {}

func (x *TurnplateInfo) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[135].MessageOf(x)
}

func (m *TurnplateInfo) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[135].Methods()
}

// Deprecated: Use TurnplateInfo.ProtoReflect.Type instead.
func (*TurnplateInfo) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{135}
}

func (x *TurnplateInfo) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *TurnplateInfo) GetCount() int32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *TurnplateInfo) GetPrice() int32 {
	if x != nil && x.Price != nil {
		return *x.Price
	}
	return 0
}

func (x *TurnplateInfo) GetPoint() int32 {
	if x != nil && x.Point != nil {
		return *x.Point
	}
	return 0
}

func (x *TurnplateInfo) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

// 装备转盘的信息
type EquipTurnplateInfo struct {
	Id                   *int32                  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Count                *int32                  `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	Price                *int32                  `protobuf:"varint,3,opt,name=price" json:"price,omitempty"`
	Point                *int32                  `protobuf:"varint,4,opt,name=point" json:"point,omitempty"`
	Title                *string                 `protobuf:"bytes,5,opt,name=title" json:"title,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *EquipTurnplateInfo) Reset() {
	*x = EquipTurnplateInfo{}
}

func (x *EquipTurnplateInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EquipTurnplateInfo) ProtoMessage() {}

func (x *EquipTurnplateInfo) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[136].MessageOf(x)
}

func (m *EquipTurnplateInfo) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[136].Methods()
}

// Deprecated: Use EquipTurnplateInfo.ProtoReflect.Type instead.
func (*EquipTurnplateInfo) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{136}
}

func (x *EquipTurnplateInfo) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *EquipTurnplateInfo) GetCount() int32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *EquipTurnplateInfo) GetPrice() int32 {
	if x != nil && x.Price != nil {
		return *x.Price
	}
	return 0
}

func (x *EquipTurnplateInfo) GetPoint() int32 {
	if x != nil && x.Point != nil {
		return *x.Point
	}
	return 0
}

func (x *EquipTurnplateInfo) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

// 领取红包玩家信息
type RedPacketRole struct {
	RoleId               *int64                  `protobuf:"varint,1,req,name=roleId" json:"roleId,omitempty"`
	Time                 *int32                  `protobuf:"varint,2,opt,name=time" json:"time,omitempty"`
	Nick                 *string                 `protobuf:"bytes,3,opt,name=nick" json:"nick,omitempty"`
	AwardId              *int32                  `protobuf:"varint,4,opt,name=awardId" json:"awardId,omitempty"`
	MsgId                *int32                  `protobuf:"varint,5,opt,name=msgId" json:"msgId,omitempty"`
	Portrait             *int32                  `protobuf:"varint,6,opt,name=portrait" json:"portrait,omitempty"`
	Camp                 *int32                  `protobuf:"varint,7,opt,name=camp" json:"camp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *RedPacketRole) Reset() {
	*x = RedPacketRole{}
}

func (x *RedPacketRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedPacketRole) ProtoMessage() {}

func (x *RedPacketRole) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[137].MessageOf(x)
}

func (m *RedPacketRole) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[137].Methods()
}

// Deprecated: Use RedPacketRole.ProtoReflect.Type instead.
func (*RedPacketRole) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{137}
}

func (x *RedPacketRole) GetRoleId() int64 {
	if x != nil && x.RoleId != nil {
		return *x.RoleId
	}
	return 0
}

func (x *RedPacketRole) GetTime() int32 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return 0
}

func (x *RedPacketRole) GetNick() string {
	if x != nil && x.Nick != nil {
		return *x.Nick
	}
	return ""
}

func (x *RedPacketRole) GetAwardId() int32 {
	if x != nil && x.AwardId != nil {
		return *x.AwardId
	}
	return 0
}

func (x *RedPacketRole) GetMsgId() int32 {
	if x != nil && x.MsgId != nil {
		return *x.MsgId
	}
	return 0
}

func (x *RedPacketRole) GetPortrait() int32 {
	if x != nil && x.Portrait != nil {
		return *x.Portrait
	}
	return 0
}

func (x *RedPacketRole) GetCamp() int32 {
	if x != nil && x.Camp != nil {
		return *x.Camp
	}
	return 0
}

// 红包
type RedPacket struct {
	Id                   *int32                  `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	SendTime             *int32                  `protobuf:"varint,2,req,name=sendTime" json:"sendTime,omitempty"`
	ExceedTime           *int32                  `protobuf:"varint,3,opt,name=exceedTime" json:"exceedTime,omitempty"`
	RedPackId            *int32                  `protobuf:"varint,4,opt,name=redPackId" json:"redPackId,omitempty"`
	ChatId               *int32                  `protobuf:"varint,5,opt,name=chatId" json:"chatId,omitempty"`
	Role                 []*RedPacketRole        `protobuf:"bytes,6,rep,name=role" json:"role,omitempty"`
	RewarPond            []int32                 `protobuf:"varint,7,rep,name=rewarPond" json:"rewarPond,omitempty"`
	Param                []string                `protobuf:"bytes,8,rep,name=param" json:"param,omitempty"`
	RedType              *int32                  `protobuf:"varint,9,opt,name=redType" json:"redType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *RedPacket) Reset() {
	*x = RedPacket{}
}

func (x *RedPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedPacket) ProtoMessage() {}

func (x *RedPacket) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[138].MessageOf(x)
}

func (m *RedPacket) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[138].Methods()
}

// Deprecated: Use RedPacket.ProtoReflect.Type instead.
func (*RedPacket) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{138}
}

func (x *RedPacket) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *RedPacket) GetSendTime() int32 {
	if x != nil && x.SendTime != nil {
		return *x.SendTime
	}
	return 0
}

func (x *RedPacket) GetExceedTime() int32 {
	if x != nil && x.ExceedTime != nil {
		return *x.ExceedTime
	}
	return 0
}

func (x *RedPacket) GetRedPackId() int32 {
	if x != nil && x.RedPackId != nil {
		return *x.RedPackId
	}
	return 0
}

func (x *RedPacket) GetChatId() int32 {
	if x != nil && x.ChatId != nil {
		return *x.ChatId
	}
	return 0
}

func (x *RedPacket) GetRole() []*RedPacketRole {
	if x != nil {
		return x.Role
	}
	return nil
}

func (x *RedPacket) GetRewarPond() []int32 {
	if x != nil {
		return x.RewarPond
	}
	return nil
}

func (x *RedPacket) GetParam() []string {
	if x != nil {
		return x.Param
	}
	return nil
}

func (x *RedPacket) GetRedType() int32 {
	if x != nil && x.RedType != nil {
		return *x.RedType
	}
	return 0
}

// 显示到聊天界面的
type RedPacketShow struct {
	Id                   *int32                  `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	SendTime             *int32                  `protobuf:"varint,2,req,name=sendTime" json:"sendTime,omitempty"`
	ExceedTime           *int32                  `protobuf:"varint,3,opt,name=exceedTime" json:"exceedTime,omitempty"`
	ChatId               *int32                  `protobuf:"varint,5,opt,name=chatId" json:"chatId,omitempty"`
	Param                []string                `protobuf:"bytes,8,rep,name=param" json:"param,omitempty"`
	Time                 *int32                  `protobuf:"varint,9,opt,name=time" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *RedPacketShow) Reset() {
	*x = RedPacketShow{}
}

func (x *RedPacketShow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedPacketShow) ProtoMessage() {}

func (x *RedPacketShow) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[139].MessageOf(x)
}

func (m *RedPacketShow) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[139].Methods()
}

// Deprecated: Use RedPacketShow.ProtoReflect.Type instead.
func (*RedPacketShow) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{139}
}

func (x *RedPacketShow) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *RedPacketShow) GetSendTime() int32 {
	if x != nil && x.SendTime != nil {
		return *x.SendTime
	}
	return 0
}

func (x *RedPacketShow) GetExceedTime() int32 {
	if x != nil && x.ExceedTime != nil {
		return *x.ExceedTime
	}
	return 0
}

func (x *RedPacketShow) GetChatId() int32 {
	if x != nil && x.ChatId != nil {
		return *x.ChatId
	}
	return 0
}

func (x *RedPacketShow) GetParam() []string {
	if x != nil {
		return x.Param
	}
	return nil
}

func (x *RedPacketShow) GetTime() int32 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return 0
}

// 每日特惠信息
type DayDiscounts struct {
	GiftId               *int32                  `protobuf:"varint,1,opt,name=giftId" json:"giftId,omitempty"`
	Count                *int32                  `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	Grade                *int32                  `protobuf:"varint,3,opt,name=grade" json:"grade,omitempty"`
	Award                []*Award                `protobuf:"bytes,4,rep,name=award" json:"award,omitempty"`
	Payinfo              *PayInfo                `protobuf:"bytes,5,opt,name=payinfo" json:"payinfo,omitempty"`
	PayinfoIos           *PayInfo                `protobuf:"bytes,6,opt,name=payinfoIos" json:"payinfoIos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *DayDiscounts) Reset() {
	*x = DayDiscounts{}
}

func (x *DayDiscounts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DayDiscounts) ProtoMessage() {}

func (x *DayDiscounts) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[140].MessageOf(x)
}

func (m *DayDiscounts) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[140].Methods()
}

// Deprecated: Use DayDiscounts.ProtoReflect.Type instead.
func (*DayDiscounts) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{140}
}

func (x *DayDiscounts) GetGiftId() int32 {
	if x != nil && x.GiftId != nil {
		return *x.GiftId
	}
	return 0
}

func (x *DayDiscounts) GetCount() int32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *DayDiscounts) GetGrade() int32 {
	if x != nil && x.Grade != nil {
		return *x.Grade
	}
	return 0
}

func (x *DayDiscounts) GetAward() []*Award {
	if x != nil {
		return x.Award
	}
	return nil
}

func (x *DayDiscounts) GetPayinfo() *PayInfo {
	if x != nil {
		return x.Payinfo
	}
	return nil
}

func (x *DayDiscounts) GetPayinfoIos() *PayInfo {
	if x != nil {
		return x.PayinfoIos
	}
	return nil
}

// 超级矿点
type SuperMine struct {
	SeqId                *int32                  `protobuf:"varint,1,req,name=seqId" json:"seqId,omitempty"`
	Camp                 *int32                  `protobuf:"varint,2,req,name=camp" json:"camp,omitempty"`
	Pos                  *int32                  `protobuf:"varint,3,opt,name=pos" json:"pos,omitempty"`
	State                *int32                  `protobuf:"varint,4,req,name=state" json:"state,omitempty"`
	ConfigId             *int32                  `protobuf:"varint,5,opt,name=configId" json:"configId,omitempty"`
	ConvertRes           *int32                  `protobuf:"varint,6,opt,name=convertRes" json:"convertRes,omitempty"`
	Capacity             *int32                  `protobuf:"varint,7,opt,name=capacity" json:"capacity,omitempty"`
	CityId               *int32                  `protobuf:"varint,8,opt,name=cityId" json:"cityId,omitempty"`
	BattleIds            []int32                 `protobuf:"varint,9,rep,name=battleIds" json:"battleIds,omitempty"`
	CollectArmy          []*SuperGuard           `protobuf:"bytes,10,rep,name=collectArmy" json:"collectArmy,omitempty"`
	HelpArmy             []*Army                 `protobuf:"bytes,11,rep,name=helpArmy" json:"helpArmy,omitempty"`
	NextTime             *int32                  `protobuf:"varint,12,opt,name=nextTime" json:"nextTime,omitempty"`
	Remaining            *int32                  `protobuf:"varint,13,opt,name=remaining" json:"remaining,omitempty"`
	CollectList          []*Collect              `protobuf:"bytes,14,rep,name=collectList" json:"collectList,omitempty"`
	HelpList             []*WallHero             `protobuf:"bytes,15,rep,name=helpList" json:"helpList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SuperMine) Reset() {
	*x = SuperMine{}
}

func (x *SuperMine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuperMine) ProtoMessage() {}

func (x *SuperMine) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[141].MessageOf(x)
}

func (m *SuperMine) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[141].Methods()
}

// Deprecated: Use SuperMine.ProtoReflect.Type instead.
func (*SuperMine) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{141}
}

func (x *SuperMine) GetSeqId() int32 {
	if x != nil && x.SeqId != nil {
		return *x.SeqId
	}
	return 0
}

func (x *SuperMine) GetCamp() int32 {
	if x != nil && x.Camp != nil {
		return *x.Camp
	}
	return 0
}

func (x *SuperMine) GetPos() int32 {
	if x != nil && x.Pos != nil {
		return *x.Pos
	}
	return 0
}

func (x *SuperMine) GetState() int32 {
	if x != nil && x.State != nil {
		return *x.State
	}
	return 0
}

func (x *SuperMine) GetConfigId() int32 {
	if x != nil && x.ConfigId != nil {
		return *x.ConfigId
	}
	return 0
}

func (x *SuperMine) GetConvertRes() int32 {
	if x != nil && x.ConvertRes != nil {
		return *x.ConvertRes
	}
	return 0
}

func (x *SuperMine) GetCapacity() int32 {
	if x != nil && x.Capacity != nil {
		return *x.Capacity
	}
	return 0
}

func (x *SuperMine) GetCityId() int32 {
	if x != nil && x.CityId != nil {
		return *x.CityId
	}
	return 0
}

func (x *SuperMine) GetBattleIds() []int32 {
	if x != nil {
		return x.BattleIds
	}
	return nil
}

func (x *SuperMine) GetCollectArmy() []*SuperGuard {
	if x != nil {
		return x.CollectArmy
	}
	return nil
}

func (x *SuperMine) GetHelpArmy() []*Army {
	if x != nil {
		return x.HelpArmy
	}
	return nil
}

func (x *SuperMine) GetNextTime() int32 {
	if x != nil && x.NextTime != nil {
		return *x.NextTime
	}
	return 0
}

func (x *SuperMine) GetRemaining() int32 {
	if x != nil && x.Remaining != nil {
		return *x.Remaining
	}
	return 0
}

func (x *SuperMine) GetCollectList() []*Collect {
	if x != nil {
		return x.CollectList
	}
	return nil
}

func (x *SuperMine) GetHelpList() []*WallHero {
	if x != nil {
		return x.HelpList
	}
	return nil
}

// 超级矿点驻军
type SuperGuard struct {
	Army                 *Army                   `protobuf:"bytes,1,req,name=army" json:"army,omitempty"`
	StartTime            *int32                  `protobuf:"varint,2,req,name=startTime" json:"startTime,omitempty"`
	MaxCollectTime       *int32                  `protobuf:"varint,3,req,name=maxCollectTime" json:"maxCollectTime,omitempty"`
	CollectTime          *int32                  `protobuf:"varint,4,opt,name=collectTime" json:"collectTime,omitempty"`
	CanMaxCollectTime    *int32                  `protobuf:"varint,5,opt,name=canMaxCollectTime" json:"canMaxCollectTime,omitempty"`
	ArmyArriveTime       *int32                  `protobuf:"varint,6,opt,name=armyArriveTime" json:"armyArriveTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SuperGuard) Reset() {
	*x = SuperGuard{}
}

func (x *SuperGuard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuperGuard) ProtoMessage() {}

func (x *SuperGuard) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[142].MessageOf(x)
}

func (m *SuperGuard) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[142].Methods()
}

// Deprecated: Use SuperGuard.ProtoReflect.Type instead.
func (*SuperGuard) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{142}
}

func (x *SuperGuard) GetArmy() *Army {
	if x != nil {
		return x.Army
	}
	return nil
}

func (x *SuperGuard) GetStartTime() int32 {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return 0
}

func (x *SuperGuard) GetMaxCollectTime() int32 {
	if x != nil && x.MaxCollectTime != nil {
		return *x.MaxCollectTime
	}
	return 0
}

func (x *SuperGuard) GetCollectTime() int32 {
	if x != nil && x.CollectTime != nil {
		return *x.CollectTime
	}
	return 0
}

func (x *SuperGuard) GetCanMaxCollectTime() int32 {
	if x != nil && x.CanMaxCollectTime != nil {
		return *x.CanMaxCollectTime
	}
	return 0
}

func (x *SuperGuard) GetArmyArriveTime() int32 {
	if x != nil && x.ArmyArriveTime != nil {
		return *x.ArmyArriveTime
	}
	return 0
}

// 柏林Force对象序列化
type BerlinForce struct {
	AtkOrDef             *int32                  `protobuf:"varint,1,opt,name=atkOrDef" json:"atkOrDef,omitempty"`
	AddMode              *int32                  `protobuf:"varint,2,opt,name=addMode" json:"addMode,omitempty"`
	AddTime              *int64                  `protobuf:"varint,3,opt,name=addTime" json:"addTime,omitempty"`
	AttrData             *SerAttrData            `protobuf:"bytes,4,opt,name=attrData" json:"attrData,omitempty"`
	ArmType              *int32                  `protobuf:"varint,5,opt,name=armType" json:"armType,omitempty"`
	TotalCount           *int32                  `protobuf:"varint,6,opt,name=totalCount" json:"totalCount,omitempty"`
	Lead                 *int32                  `protobuf:"varint,7,opt,name=lead" json:"lead,omitempty"`
	Id                   *int32                  `protobuf:"varint,8,opt,name=id" json:"id,omitempty"`
	Camp                 *int32                  `protobuf:"varint,9,opt,name=camp" json:"camp,omitempty"`
	OwnId                *int64                  `protobuf:"varint,10,opt,name=ownId" json:"ownId,omitempty"`
	IntensifyLv          *int32                  `protobuf:"varint,11,opt,name=intensifyLv" json:"intensifyLv,omitempty"`
	Effect               *int32                  `protobuf:"varint,12,opt,name=effect" json:"effect,omitempty"`
	ImmediatelyTime      *int32                  `protobuf:"varint,13,opt,name=immediatelyTime" json:"immediatelyTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *BerlinForce) Reset() {
	*x = BerlinForce{}
}

func (x *BerlinForce) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BerlinForce) ProtoMessage() {}

func (x *BerlinForce) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[143].MessageOf(x)
}

func (m *BerlinForce) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[143].Methods()
}

// Deprecated: Use BerlinForce.ProtoReflect.Type instead.
func (*BerlinForce) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{143}
}

func (x *BerlinForce) GetAtkOrDef() int32 {
	if x != nil && x.AtkOrDef != nil {
		return *x.AtkOrDef
	}
	return 0
}

func (x *BerlinForce) GetAddMode() int32 {
	if x != nil && x.AddMode != nil {
		return *x.AddMode
	}
	return 0
}

func (x *BerlinForce) GetAddTime() int64 {
	if x != nil && x.AddTime != nil {
		return *x.AddTime
	}
	return 0
}

func (x *BerlinForce) GetAttrData() *SerAttrData {
	if x != nil {
		return x.AttrData
	}
	return nil
}

func (x *BerlinForce) GetArmType() int32 {
	if x != nil && x.ArmType != nil {
		return *x.ArmType
	}
	return 0
}

func (x *BerlinForce) GetTotalCount() int32 {
	if x != nil && x.TotalCount != nil {
		return *x.TotalCount
	}
	return 0
}

func (x *BerlinForce) GetLead() int32 {
	if x != nil && x.Lead != nil {
		return *x.Lead
	}
	return 0
}

func (x *BerlinForce) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *BerlinForce) GetCamp() int32 {
	if x != nil && x.Camp != nil {
		return *x.Camp
	}
	return 0
}

func (x *BerlinForce) GetOwnId() int64 {
	if x != nil && x.OwnId != nil {
		return *x.OwnId
	}
	return 0
}

func (x *BerlinForce) GetIntensifyLv() int32 {
	if x != nil && x.IntensifyLv != nil {
		return *x.IntensifyLv
	}
	return 0
}

func (x *BerlinForce) GetEffect() int32 {
	if x != nil && x.Effect != nil {
		return *x.Effect
	}
	return 0
}

func (x *BerlinForce) GetImmediatelyTime() int32 {
	if x != nil && x.ImmediatelyTime != nil {
		return *x.ImmediatelyTime
	}
	return 0
}

// 战斗属性
type SerAttrData struct {
	Attack               *int32                  `protobuf:"varint,1,opt,name=attack" json:"attack,omitempty"`
	Defend               *int32                  `protobuf:"varint,2,opt,name=defend" json:"defend,omitempty"`
	Lead                 *int32                  `protobuf:"varint,3,opt,name=lead" json:"lead,omitempty"`
	Line                 *int32                  `protobuf:"varint,4,opt,name=line" json:"line,omitempty"`
	Crit                 *int32                  `protobuf:"varint,5,opt,name=crit" json:"crit,omitempty"`
	CritDef              *int32                  `protobuf:"varint,6,opt,name=critDef" json:"critDef,omitempty"`
	AtkTown              *int32                  `protobuf:"varint,7,opt,name=atkTown" json:"atkTown,omitempty"`
	DefTown              *int32                  `protobuf:"varint,8,opt,name=defTown" json:"defTown,omitempty"`
	AtkExt               *int32                  `protobuf:"varint,9,opt,name=atkExt" json:"atkExt,omitempty"`
	DefExt               *int32                  `protobuf:"varint,10,opt,name=defExt" json:"defExt,omitempty"`
	CritChance           *int32                  `protobuf:"varint,11,opt,name=critChance" json:"critChance,omitempty"`
	Evade                *int32                  `protobuf:"varint,12,opt,name=evade" json:"evade,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SerAttrData) Reset() {
	*x = SerAttrData{}
}

func (x *SerAttrData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerAttrData) ProtoMessage() {}

func (x *SerAttrData) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[144].MessageOf(x)
}

func (m *SerAttrData) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[144].Methods()
}

// Deprecated: Use SerAttrData.ProtoReflect.Type instead.
func (*SerAttrData) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{144}
}

func (x *SerAttrData) GetAttack() int32 {
	if x != nil && x.Attack != nil {
		return *x.Attack
	}
	return 0
}

func (x *SerAttrData) GetDefend() int32 {
	if x != nil && x.Defend != nil {
		return *x.Defend
	}
	return 0
}

func (x *SerAttrData) GetLead() int32 {
	if x != nil && x.Lead != nil {
		return *x.Lead
	}
	return 0
}

func (x *SerAttrData) GetLine() int32 {
	if x != nil && x.Line != nil {
		return *x.Line
	}
	return 0
}

func (x *SerAttrData) GetCrit() int32 {
	if x != nil && x.Crit != nil {
		return *x.Crit
	}
	return 0
}

func (x *SerAttrData) GetCritDef() int32 {
	if x != nil && x.CritDef != nil {
		return *x.CritDef
	}
	return 0
}

func (x *SerAttrData) GetAtkTown() int32 {
	if x != nil && x.AtkTown != nil {
		return *x.AtkTown
	}
	return 0
}

func (x *SerAttrData) GetDefTown() int32 {
	if x != nil && x.DefTown != nil {
		return *x.DefTown
	}
	return 0
}

func (x *SerAttrData) GetAtkExt() int32 {
	if x != nil && x.AtkExt != nil {
		return *x.AtkExt
	}
	return 0
}

func (x *SerAttrData) GetDefExt() int32 {
	if x != nil && x.DefExt != nil {
		return *x.DefExt
	}
	return 0
}

func (x *SerAttrData) GetCritChance() int32 {
	if x != nil && x.CritChance != nil {
		return *x.CritChance
	}
	return 0
}

func (x *SerAttrData) GetEvade() int32 {
	if x != nil && x.Evade != nil {
		return *x.Evade
	}
	return 0
}

// 各个阵营占领时间
type CampOccupy struct {
	Camp                 *int32                  `protobuf:"varint,1,req,name=camp" json:"camp,omitempty"`
	Time                 *int32                  `protobuf:"varint,2,req,name=time" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *CampOccupy) Reset() {
	*x = CampOccupy{}
}

func (x *CampOccupy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CampOccupy) ProtoMessage() {}

func (x *CampOccupy) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[145].MessageOf(x)
}

func (m *CampOccupy) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[145].Methods()
}

// Deprecated: Use CampOccupy.ProtoReflect.Type instead.
func (*CampOccupy) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{145}
}

func (x *CampOccupy) GetCamp() int32 {
	if x != nil && x.Camp != nil {
		return *x.Camp
	}
	return 0
}

func (x *CampOccupy) GetTime() int32 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return 0
}

// 打造排行
type RankEquip struct {
	Quality              *int32                  `protobuf:"varint,1,opt,name=quality" json:"quality,omitempty"`
	LorId                []int64                 `protobuf:"varint,2,rep,name=lorId" json:"lorId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *RankEquip) Reset() {
	*x = RankEquip{}
}

func (x *RankEquip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RankEquip) ProtoMessage() {}

func (x *RankEquip) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[146].MessageOf(x)
}

func (m *RankEquip) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[146].Methods()
}

// Deprecated: Use RankEquip.ProtoReflect.Type instead.
func (*RankEquip) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{146}
}

func (x *RankEquip) GetQuality() int32 {
	if x != nil && x.Quality != nil {
		return *x.Quality
	}
	return 0
}

func (x *RankEquip) GetLorId() []int64 {
	if x != nil {
		return x.LorId
	}
	return nil
}

// 柏林官职信息
type BerlinJob struct {
	RoleId               *int64                  `protobuf:"varint,1,req,name=roleId" json:"roleId,omitempty"`
	Name                 *string                 `protobuf:"bytes,2,req,name=name" json:"name,omitempty"`
	Job                  *int32                  `protobuf:"varint,3,opt,name=job" json:"job,omitempty"`
	Lv                   *int32                  `protobuf:"varint,4,opt,name=lv" json:"lv,omitempty"`
	Camp                 *int64                  `protobuf:"varint,5,opt,name=camp" json:"camp,omitempty"`
	Area                 *int32                  `protobuf:"varint,6,opt,name=area" json:"area,omitempty"`
	Portrait             *int32                  `protobuf:"varint,7,opt,name=portrait" json:"portrait,omitempty"`
	Ranks                *int32                  `protobuf:"varint,8,opt,name=ranks" json:"ranks,omitempty"`
	WinnerTime           *int32                  `protobuf:"varint,9,opt,name=winnerTime" json:"winnerTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *BerlinJob) Reset() {
	*x = BerlinJob{}
}

func (x *BerlinJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BerlinJob) ProtoMessage() {}

func (x *BerlinJob) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[147].MessageOf(x)
}

func (m *BerlinJob) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[147].Methods()
}

// Deprecated: Use BerlinJob.ProtoReflect.Type instead.
func (*BerlinJob) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{147}
}

func (x *BerlinJob) GetRoleId() int64 {
	if x != nil && x.RoleId != nil {
		return *x.RoleId
	}
	return 0
}

func (x *BerlinJob) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *BerlinJob) GetJob() int32 {
	if x != nil && x.Job != nil {
		return *x.Job
	}
	return 0
}

func (x *BerlinJob) GetLv() int32 {
	if x != nil && x.Lv != nil {
		return *x.Lv
	}
	return 0
}

func (x *BerlinJob) GetCamp() int64 {
	if x != nil && x.Camp != nil {
		return *x.Camp
	}
	return 0
}

func (x *BerlinJob) GetArea() int32 {
	if x != nil && x.Area != nil {
		return *x.Area
	}
	return 0
}

func (x *BerlinJob) GetPortrait() int32 {
	if x != nil && x.Portrait != nil {
		return *x.Portrait
	}
	return 0
}

func (x *BerlinJob) GetRanks() int32 {
	if x != nil && x.Ranks != nil {
		return *x.Ranks
	}
	return 0
}

func (x *BerlinJob) GetWinnerTime() int32 {
	if x != nil && x.WinnerTime != nil {
		return *x.WinnerTime
	}
	return 0
}

// 荣耀日报(战斗类别)
type HonorReport struct {
	IsWin                *bool                   `protobuf:"varint,1,opt,name=isWin" json:"isWin,omitempty"`
	CreateTime           *int32                  `protobuf:"varint,2,opt,name=createTime" json:"createTime,omitempty"`
	Atk                  *HonorReportInfo        `protobuf:"bytes,3,opt,name=atk" json:"atk,omitempty"`
	Def                  *HonorReportInfo        `protobuf:"bytes,4,opt,name=def" json:"def,omitempty"`
	HonorType            *int32                  `protobuf:"varint,5,opt,name=honorType" json:"honorType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *HonorReport) Reset() {
	*x = HonorReport{}
}

func (x *HonorReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HonorReport) ProtoMessage() {}

func (x *HonorReport) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[148].MessageOf(x)
}

func (m *HonorReport) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[148].Methods()
}

// Deprecated: Use HonorReport.ProtoReflect.Type instead.
func (*HonorReport) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{148}
}

func (x *HonorReport) GetIsWin() bool {
	if x != nil && x.IsWin != nil {
		return *x.IsWin
	}
	return false
}

func (x *HonorReport) GetCreateTime() int32 {
	if x != nil && x.CreateTime != nil {
		return *x.CreateTime
	}
	return 0
}

func (x *HonorReport) GetAtk() *HonorReportInfo {
	if x != nil {
		return x.Atk
	}
	return nil
}

func (x *HonorReport) GetDef() *HonorReportInfo {
	if x != nil {
		return x.Def
	}
	return nil
}

func (x *HonorReport) GetHonorType() int32 {
	if x != nil && x.HonorType != nil {
		return *x.HonorType
	}
	return 0
}

//荣耀日报(其他通用类型)
type HonorReport2 struct {
	CreateTime           *int32                  `protobuf:"varint,1,opt,name=createTime" json:"createTime,omitempty"`
	Role                 *HonorReportInfo        `protobuf:"bytes,2,opt,name=role" json:"role,omitempty"`
	CondId               *int32                  `protobuf:"varint,3,opt,name=condId" json:"condId,omitempty"`
	Param                []string                `protobuf:"bytes,4,rep,name=param" json:"param,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *HonorReport2) Reset() {
	*x = HonorReport2{}
}

func (x *HonorReport2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HonorReport2) ProtoMessage() {}

func (x *HonorReport2) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[149].MessageOf(x)
}

func (m *HonorReport2) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[149].Methods()
}

// Deprecated: Use HonorReport2.ProtoReflect.Type instead.
func (*HonorReport2) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{149}
}

func (x *HonorReport2) GetCreateTime() int32 {
	if x != nil && x.CreateTime != nil {
		return *x.CreateTime
	}
	return 0
}

func (x *HonorReport2) GetRole() *HonorReportInfo {
	if x != nil {
		return x.Role
	}
	return nil
}

func (x *HonorReport2) GetCondId() int32 {
	if x != nil && x.CondId != nil {
		return *x.CondId
	}
	return 0
}

func (x *HonorReport2) GetParam() []string {
	if x != nil {
		return x.Param
	}
	return nil
}

// 日报详情
type HonorReportInfo struct {
	RoleId               *int64                  `protobuf:"varint,1,opt,name=roleId" json:"roleId,omitempty"`
	Nick                 *string                 `protobuf:"bytes,2,opt,name=nick" json:"nick,omitempty"`
	Rank                 *int32                  `protobuf:"varint,3,opt,name=rank" json:"rank,omitempty"`
	Pos                  *int32                  `protobuf:"varint,4,opt,name=pos" json:"pos,omitempty"`
	Camp                 *int32                  `protobuf:"varint,5,opt,name=camp" json:"camp,omitempty"`
	Ranks                *int32                  `protobuf:"varint,6,opt,name=ranks" json:"ranks,omitempty"`
	Portrait             *int32                  `protobuf:"varint,7,opt,name=portrait" json:"portrait,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *HonorReportInfo) Reset() {
	*x = HonorReportInfo{}
}

func (x *HonorReportInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HonorReportInfo) ProtoMessage() {}

func (x *HonorReportInfo) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[150].MessageOf(x)
}

func (m *HonorReportInfo) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[150].Methods()
}

// Deprecated: Use HonorReportInfo.ProtoReflect.Type instead.
func (*HonorReportInfo) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{150}
}

func (x *HonorReportInfo) GetRoleId() int64 {
	if x != nil && x.RoleId != nil {
		return *x.RoleId
	}
	return 0
}

func (x *HonorReportInfo) GetNick() string {
	if x != nil && x.Nick != nil {
		return *x.Nick
	}
	return ""
}

func (x *HonorReportInfo) GetRank() int32 {
	if x != nil && x.Rank != nil {
		return *x.Rank
	}
	return 0
}

func (x *HonorReportInfo) GetPos() int32 {
	if x != nil && x.Pos != nil {
		return *x.Pos
	}
	return 0
}

func (x *HonorReportInfo) GetCamp() int32 {
	if x != nil && x.Camp != nil {
		return *x.Camp
	}
	return 0
}

func (x *HonorReportInfo) GetRanks() int32 {
	if x != nil && x.Ranks != nil {
		return *x.Ranks
	}
	return 0
}

func (x *HonorReportInfo) GetPortrait() int32 {
	if x != nil && x.Portrait != nil {
		return *x.Portrait
	}
	return 0
}

//玩家建筑（离线用）
type OffLineBuild struct {
	Type                 *int32                  `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Id                   *int32                  `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	Lv                   *int32                  `protobuf:"varint,3,opt,name=lv" json:"lv,omitempty"`
	NewLv                *int32                  `protobuf:"varint,4,opt,name=newLv" json:"newLv,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *OffLineBuild) Reset() {
	*x = OffLineBuild{}
}

func (x *OffLineBuild) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OffLineBuild) ProtoMessage() {}

func (x *OffLineBuild) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[151].MessageOf(x)
}

func (m *OffLineBuild) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[151].Methods()
}

// Deprecated: Use OffLineBuild.ProtoReflect.Type instead.
func (*OffLineBuild) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{151}
}

func (x *OffLineBuild) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *OffLineBuild) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *OffLineBuild) GetLv() int32 {
	if x != nil && x.Lv != nil {
		return *x.Lv
	}
	return 0
}

func (x *OffLineBuild) GetNewLv() int32 {
	if x != nil && x.NewLv != nil {
		return *x.NewLv
	}
	return 0
}

// 柏林玩家数据
type BerlinRoleInfo struct {
	PressCnt             *int32                  `protobuf:"varint,1,opt,name=pressCnt" json:"pressCnt,omitempty"`
	ResurrectionCnt      *int32                  `protobuf:"varint,2,opt,name=resurrectionCnt" json:"resurrectionCnt,omitempty"`
	ImmediatelyCnt       *int32                  `protobuf:"varint,3,opt,name=immediatelyCnt" json:"immediatelyCnt,omitempty"`
	AtkCd                *int32                  `protobuf:"varint,4,opt,name=atkCd" json:"atkCd,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *BerlinRoleInfo) Reset() {
	*x = BerlinRoleInfo{}
}

func (x *BerlinRoleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BerlinRoleInfo) ProtoMessage() {}

func (x *BerlinRoleInfo) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[152].MessageOf(x)
}

func (m *BerlinRoleInfo) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[152].Methods()
}

// Deprecated: Use BerlinRoleInfo.ProtoReflect.Type instead.
func (*BerlinRoleInfo) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{152}
}

func (x *BerlinRoleInfo) GetPressCnt() int32 {
	if x != nil && x.PressCnt != nil {
		return *x.PressCnt
	}
	return 0
}

func (x *BerlinRoleInfo) GetResurrectionCnt() int32 {
	if x != nil && x.ResurrectionCnt != nil {
		return *x.ResurrectionCnt
	}
	return 0
}

func (x *BerlinRoleInfo) GetImmediatelyCnt() int32 {
	if x != nil && x.ImmediatelyCnt != nil {
		return *x.ImmediatelyCnt
	}
	return 0
}

func (x *BerlinRoleInfo) GetAtkCd() int32 {
	if x != nil && x.AtkCd != nil {
		return *x.AtkCd
	}
	return 0
}

// 柏林将领数据(将领在柏林的战斗队列)
type BerlinHeroInfo struct {
	HeroId               *int32                  `protobuf:"varint,1,opt,name=heroId" json:"heroId,omitempty"`
	Cnt                  *int32                  `protobuf:"varint,2,opt,name=cnt" json:"cnt,omitempty"`
	Order                *int32                  `protobuf:"varint,3,opt,name=order" json:"order,omitempty"`
	Status               *int32                  `protobuf:"varint,4,opt,name=status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *BerlinHeroInfo) Reset() {
	*x = BerlinHeroInfo{}
}

func (x *BerlinHeroInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BerlinHeroInfo) ProtoMessage() {}

func (x *BerlinHeroInfo) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[153].MessageOf(x)
}

func (m *BerlinHeroInfo) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[153].Methods()
}

// Deprecated: Use BerlinHeroInfo.ProtoReflect.Type instead.
func (*BerlinHeroInfo) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{153}
}

func (x *BerlinHeroInfo) GetHeroId() int32 {
	if x != nil && x.HeroId != nil {
		return *x.HeroId
	}
	return 0
}

func (x *BerlinHeroInfo) GetCnt() int32 {
	if x != nil && x.Cnt != nil {
		return *x.Cnt
	}
	return 0
}

func (x *BerlinHeroInfo) GetOrder() int32 {
	if x != nil && x.Order != nil {
		return *x.Order
	}
	return 0
}

func (x *BerlinHeroInfo) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

// 柏林战斗列表数据
type BerlinAtkInfo struct {
	RoleId               *int64                  `protobuf:"varint,1,opt,name=roleId" json:"roleId,omitempty"`
	Nick                 *string                 `protobuf:"bytes,2,opt,name=nick" json:"nick,omitempty"`
	HeroId               *int32                  `protobuf:"varint,3,opt,name=heroId" json:"heroId,omitempty"`
	ArmNum               *int32                  `protobuf:"varint,4,opt,name=armNum" json:"armNum,omitempty"`
	Lock                 *bool                   `protobuf:"varint,5,opt,name=lock" json:"lock,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *BerlinAtkInfo) Reset() {
	*x = BerlinAtkInfo{}
}

func (x *BerlinAtkInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BerlinAtkInfo) ProtoMessage() {}

func (x *BerlinAtkInfo) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[154].MessageOf(x)
}

func (m *BerlinAtkInfo) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[154].Methods()
}

// Deprecated: Use BerlinAtkInfo.ProtoReflect.Type instead.
func (*BerlinAtkInfo) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{154}
}

func (x *BerlinAtkInfo) GetRoleId() int64 {
	if x != nil && x.RoleId != nil {
		return *x.RoleId
	}
	return 0
}

func (x *BerlinAtkInfo) GetNick() string {
	if x != nil && x.Nick != nil {
		return *x.Nick
	}
	return ""
}

func (x *BerlinAtkInfo) GetHeroId() int32 {
	if x != nil && x.HeroId != nil {
		return *x.HeroId
	}
	return 0
}

func (x *BerlinAtkInfo) GetArmNum() int32 {
	if x != nil && x.ArmNum != nil {
		return *x.ArmNum
	}
	return 0
}

func (x *BerlinAtkInfo) GetLock() bool {
	if x != nil && x.Lock != nil {
		return *x.Lock
	}
	return false
}

// 柏林立即出击战报
type BerlinBasicReport struct {
	IsWin                *bool                   `protobuf:"varint,1,req,name=isWin" json:"isWin,omitempty"`
	AtkLost              *int32                  `protobuf:"varint,2,req,name=atkLost" json:"atkLost,omitempty"`
	Lost                 *int32                  `protobuf:"varint,3,req,name=lost" json:"lost,omitempty"`
	RoleId               *int64                  `protobuf:"varint,4,opt,name=roleId" json:"roleId,omitempty"`
	HeroId               *int32                  `protobuf:"varint,5,opt,name=heroId" json:"heroId,omitempty"`
	Camp                 *int32                  `protobuf:"varint,6,opt,name=camp" json:"camp,omitempty"`
	Nick                 *string                 `protobuf:"bytes,7,opt,name=nick" json:"nick,omitempty"`
	Decorated            *int32                  `protobuf:"varint,8,opt,name=decorated" json:"decorated,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *BerlinBasicReport) Reset() {
	*x = BerlinBasicReport{}
}

func (x *BerlinBasicReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BerlinBasicReport) ProtoMessage() {}

func (x *BerlinBasicReport) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[155].MessageOf(x)
}

func (m *BerlinBasicReport) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[155].Methods()
}

// Deprecated: Use BerlinBasicReport.ProtoReflect.Type instead.
func (*BerlinBasicReport) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{155}
}

func (x *BerlinBasicReport) GetIsWin() bool {
	if x != nil && x.IsWin != nil {
		return *x.IsWin
	}
	return false
}

func (x *BerlinBasicReport) GetAtkLost() int32 {
	if x != nil && x.AtkLost != nil {
		return *x.AtkLost
	}
	return 0
}

func (x *BerlinBasicReport) GetLost() int32 {
	if x != nil && x.Lost != nil {
		return *x.Lost
	}
	return 0
}

func (x *BerlinBasicReport) GetRoleId() int64 {
	if x != nil && x.RoleId != nil {
		return *x.RoleId
	}
	return 0
}

func (x *BerlinBasicReport) GetHeroId() int32 {
	if x != nil && x.HeroId != nil {
		return *x.HeroId
	}
	return 0
}

func (x *BerlinBasicReport) GetCamp() int32 {
	if x != nil && x.Camp != nil {
		return *x.Camp
	}
	return 0
}

func (x *BerlinBasicReport) GetNick() string {
	if x != nil && x.Nick != nil {
		return *x.Nick
	}
	return ""
}

func (x *BerlinBasicReport) GetDecorated() int32 {
	if x != nil && x.Decorated != nil {
		return *x.Decorated
	}
	return 0
}

// 大富翁的格子
type MonopolyGrid struct {
	Round                *int32                  `protobuf:"varint,1,req,name=round" json:"round,omitempty"`
	Grid                 *int32                  `protobuf:"varint,2,req,name=grid" json:"grid,omitempty"`
	Award                []*Award                `protobuf:"bytes,3,rep,name=award" json:"award,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *MonopolyGrid) Reset() {
	*x = MonopolyGrid{}
}

func (x *MonopolyGrid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonopolyGrid) ProtoMessage() {}

func (x *MonopolyGrid) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[156].MessageOf(x)
}

func (m *MonopolyGrid) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[156].Methods()
}

// Deprecated: Use MonopolyGrid.ProtoReflect.Type instead.
func (*MonopolyGrid) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{156}
}

func (x *MonopolyGrid) GetRound() int32 {
	if x != nil && x.Round != nil {
		return *x.Round
	}
	return 0
}

func (x *MonopolyGrid) GetGrid() int32 {
	if x != nil && x.Grid != nil {
		return *x.Grid
	}
	return 0
}

func (x *MonopolyGrid) GetAward() []*Award {
	if x != nil {
		return x.Award
	}
	return nil
}

//账号角色信息
type AccountRoleInfo struct {
	AccountKey           *int64                  `protobuf:"varint,1,opt,name=accountKey" json:"accountKey,omitempty"`
	RoleId               *int64                  `protobuf:"varint,2,opt,name=roleId" json:"roleId,omitempty"`
	ServerId             *int64                  `protobuf:"varint,3,opt,name=serverId" json:"serverId,omitempty"`
	Level                *int32                  `protobuf:"varint,4,opt,name=level" json:"level,omitempty"`
	RoleName             *string                 `protobuf:"bytes,5,opt,name=roleName" json:"roleName,omitempty"`
	Camp                 *int32                  `protobuf:"varint,6,opt,name=camp" json:"camp,omitempty"`
	DateRoleCreate       *int64                  `protobuf:"varint,7,opt,name=dateRoleCreate" json:"dateRoleCreate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *AccountRoleInfo) Reset() {
	*x = AccountRoleInfo{}
}

func (x *AccountRoleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountRoleInfo) ProtoMessage() {}

func (x *AccountRoleInfo) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[157].MessageOf(x)
}

func (m *AccountRoleInfo) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[157].Methods()
}

// Deprecated: Use AccountRoleInfo.ProtoReflect.Type instead.
func (*AccountRoleInfo) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{157}
}

func (x *AccountRoleInfo) GetAccountKey() int64 {
	if x != nil && x.AccountKey != nil {
		return *x.AccountKey
	}
	return 0
}

func (x *AccountRoleInfo) GetRoleId() int64 {
	if x != nil && x.RoleId != nil {
		return *x.RoleId
	}
	return 0
}

func (x *AccountRoleInfo) GetServerId() int64 {
	if x != nil && x.ServerId != nil {
		return *x.ServerId
	}
	return 0
}

func (x *AccountRoleInfo) GetLevel() int32 {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return 0
}

func (x *AccountRoleInfo) GetRoleName() string {
	if x != nil && x.RoleName != nil {
		return *x.RoleName
	}
	return ""
}

func (x *AccountRoleInfo) GetCamp() int32 {
	if x != nil && x.Camp != nil {
		return *x.Camp
	}
	return 0
}

func (x *AccountRoleInfo) GetDateRoleCreate() int64 {
	if x != nil && x.DateRoleCreate != nil {
		return *x.DateRoleCreate
	}
	return 0
}

//服务区列表信息
type ServerInfo struct {
	ServerId             *int32                          `protobuf:"varint,1,req,name=serverId" json:"serverId,omitempty"`
	ServerName           *string                         `protobuf:"bytes,2,req,name=serverName" json:"serverName,omitempty"`
	ServerStatus         *int32                          `protobuf:"varint,3,req,name=serverStatus" json:"serverStatus,omitempty"`
	Sc                   []*ServerInfo_ServerConnectInfo `protobuf:"bytes,4,rep,name=sc" json:"sc,omitempty"`
	Ainfo                *AccountRoleInfo                `protobuf:"bytes,5,opt,name=ainfo" json:"ainfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields         `json:"-"`
	XXX_sizecache        protoimpl.SizeCache             `json:"-"`
}

func (x *ServerInfo) Reset() {
	*x = ServerInfo{}
}

func (x *ServerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerInfo) ProtoMessage() {}

func (x *ServerInfo) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[158].MessageOf(x)
}

func (m *ServerInfo) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[158].Methods()
}

// Deprecated: Use ServerInfo.ProtoReflect.Type instead.
func (*ServerInfo) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{158}
}

func (x *ServerInfo) GetServerId() int32 {
	if x != nil && x.ServerId != nil {
		return *x.ServerId
	}
	return 0
}

func (x *ServerInfo) GetServerName() string {
	if x != nil && x.ServerName != nil {
		return *x.ServerName
	}
	return ""
}

func (x *ServerInfo) GetServerStatus() int32 {
	if x != nil && x.ServerStatus != nil {
		return *x.ServerStatus
	}
	return 0
}

func (x *ServerInfo) GetSc() []*ServerInfo_ServerConnectInfo {
	if x != nil {
		return x.Sc
	}
	return nil
}

func (x *ServerInfo) GetAinfo() *AccountRoleInfo {
	if x != nil {
		return x.Ainfo
	}
	return nil
}

//*
// 服务器配置信息
type ServerConfigInfo struct {
	ServerId             *int32                  `protobuf:"varint,1,req,name=serverId" json:"serverId,omitempty"`
	ServerName           *string                 `protobuf:"bytes,2,req,name=serverName" json:"serverName,omitempty"`
	TestMode             *string                 `protobuf:"bytes,3,req,name=testMode" json:"testMode,omitempty"`
	ConfigMode           *string                 `protobuf:"bytes,4,req,name=configMode" json:"configMode,omitempty"`
	OpenWhiteName        *string                 `protobuf:"bytes,5,req,name=open_white_name,json=openWhiteName" json:"open_white_name,omitempty"`
	CryptMsg             *string                 `protobuf:"bytes,6,req,name=crypt_msg,json=cryptMsg" json:"crypt_msg,omitempty"`
	MsgCryptCode         *string                 `protobuf:"bytes,7,req,name=msg_crypt_code,json=msgCryptCode" json:"msg_crypt_code,omitempty"`
	ConvertUrl           *string                 `protobuf:"bytes,8,req,name=convert_url,json=convertUrl" json:"convert_url,omitempty"`
	Pay                  *string                 `protobuf:"bytes,9,req,name=pay" json:"pay,omitempty"`
	Ip                   *string                 `protobuf:"bytes,10,req,name=ip" json:"ip,omitempty"`
	ClientPort           *int32                  `protobuf:"varint,11,req,name=client_port,json=clientPort" json:"client_port,omitempty"`
	HttpPort             *int32                  `protobuf:"varint,12,req,name=http_port,json=httpPort" json:"http_port,omitempty"`
	OpenTime             *int64                  `protobuf:"varint,13,req,name=open_time,json=openTime" json:"open_time,omitempty"`
	ActMold              *int32                  `protobuf:"varint,14,req,name=act_mold,json=actMold" json:"act_mold,omitempty"`
	PayServerUrl         *string                 `protobuf:"bytes,15,req,name=pay_server_url,json=payServerUrl" json:"pay_server_url,omitempty"`
	Environment          *string                 `protobuf:"bytes,16,req,name=environment" json:"environment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *ServerConfigInfo) Reset() {
	*x = ServerConfigInfo{}
}

func (x *ServerConfigInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerConfigInfo) ProtoMessage() {}

func (x *ServerConfigInfo) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[159].MessageOf(x)
}

func (m *ServerConfigInfo) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[159].Methods()
}

// Deprecated: Use ServerConfigInfo.ProtoReflect.Type instead.
func (*ServerConfigInfo) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{159}
}

func (x *ServerConfigInfo) GetServerId() int32 {
	if x != nil && x.ServerId != nil {
		return *x.ServerId
	}
	return 0
}

func (x *ServerConfigInfo) GetServerName() string {
	if x != nil && x.ServerName != nil {
		return *x.ServerName
	}
	return ""
}

func (x *ServerConfigInfo) GetTestMode() string {
	if x != nil && x.TestMode != nil {
		return *x.TestMode
	}
	return ""
}

func (x *ServerConfigInfo) GetConfigMode() string {
	if x != nil && x.ConfigMode != nil {
		return *x.ConfigMode
	}
	return ""
}

func (x *ServerConfigInfo) GetOpenWhiteName() string {
	if x != nil && x.OpenWhiteName != nil {
		return *x.OpenWhiteName
	}
	return ""
}

func (x *ServerConfigInfo) GetCryptMsg() string {
	if x != nil && x.CryptMsg != nil {
		return *x.CryptMsg
	}
	return ""
}

func (x *ServerConfigInfo) GetMsgCryptCode() string {
	if x != nil && x.MsgCryptCode != nil {
		return *x.MsgCryptCode
	}
	return ""
}

func (x *ServerConfigInfo) GetConvertUrl() string {
	if x != nil && x.ConvertUrl != nil {
		return *x.ConvertUrl
	}
	return ""
}

func (x *ServerConfigInfo) GetPay() string {
	if x != nil && x.Pay != nil {
		return *x.Pay
	}
	return ""
}

func (x *ServerConfigInfo) GetIp() string {
	if x != nil && x.Ip != nil {
		return *x.Ip
	}
	return ""
}

func (x *ServerConfigInfo) GetClientPort() int32 {
	if x != nil && x.ClientPort != nil {
		return *x.ClientPort
	}
	return 0
}

func (x *ServerConfigInfo) GetHttpPort() int32 {
	if x != nil && x.HttpPort != nil {
		return *x.HttpPort
	}
	return 0
}

func (x *ServerConfigInfo) GetOpenTime() int64 {
	if x != nil && x.OpenTime != nil {
		return *x.OpenTime
	}
	return 0
}

func (x *ServerConfigInfo) GetActMold() int32 {
	if x != nil && x.ActMold != nil {
		return *x.ActMold
	}
	return 0
}

func (x *ServerConfigInfo) GetPayServerUrl() string {
	if x != nil && x.PayServerUrl != nil {
		return *x.PayServerUrl
	}
	return ""
}

func (x *ServerConfigInfo) GetEnvironment() string {
	if x != nil && x.Environment != nil {
		return *x.Environment
	}
	return ""
}

// 区服控制
type ServerControl struct {
	Plat                 []string                `protobuf:"bytes,1,rep,name=plat" json:"plat,omitempty"`
	AllowMin             *int32                  `protobuf:"varint,2,opt,name=allowMin" json:"allowMin,omitempty"`
	AllowMax             *int32                  `protobuf:"varint,3,opt,name=allowMax" json:"allowMax,omitempty"`
	Allow                []int32                 `protobuf:"varint,4,rep,name=allow" json:"allow,omitempty"`
	Ext                  *string                 `protobuf:"bytes,5,opt,name=ext" json:"ext,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *ServerControl) Reset() {
	*x = ServerControl{}
}

func (x *ServerControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerControl) ProtoMessage() {}

func (x *ServerControl) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[160].MessageOf(x)
}

func (m *ServerControl) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[160].Methods()
}

// Deprecated: Use ServerControl.ProtoReflect.Type instead.
func (*ServerControl) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{160}
}

func (x *ServerControl) GetPlat() []string {
	if x != nil {
		return x.Plat
	}
	return nil
}

func (x *ServerControl) GetAllowMin() int32 {
	if x != nil && x.AllowMin != nil {
		return *x.AllowMin
	}
	return 0
}

func (x *ServerControl) GetAllowMax() int32 {
	if x != nil && x.AllowMax != nil {
		return *x.AllowMax
	}
	return 0
}

func (x *ServerControl) GetAllow() []int32 {
	if x != nil {
		return x.Allow
	}
	return nil
}

func (x *ServerControl) GetExt() string {
	if x != nil && x.Ext != nil {
		return *x.Ext
	}
	return ""
}

// 匪军叛乱全局的信息
type GlobalRebellion struct {
	OpenCnt              *int32                  `protobuf:"varint,1,opt,name=openCnt" json:"openCnt,omitempty"`
	CurPreViewTime       *int32                  `protobuf:"varint,2,opt,name=curPreViewTime" json:"curPreViewTime,omitempty"`
	CurRoundStartTime    *int32                  `protobuf:"varint,3,opt,name=curRoundStartTime" json:"curRoundStartTime,omitempty"`
	CurRoundEndTime      *int32                  `protobuf:"varint,4,opt,name=curRoundEndTime" json:"curRoundEndTime,omitempty"`
	CurEndTime           *int32                  `protobuf:"varint,5,opt,name=curEndTime" json:"curEndTime,omitempty"`
	CurRound             *int32                  `protobuf:"varint,6,opt,name=curRound" json:"curRound,omitempty"`
	CurTemplate          *int32                  `protobuf:"varint,7,opt,name=curTemplate" json:"curTemplate,omitempty"`
	NextRoundTime        *int32                  `protobuf:"varint,8,opt,name=nextRoundTime" json:"nextRoundTime,omitempty"`
	JoinRoleId           []int64                 `protobuf:"varint,9,rep,name=joinRoleId" json:"joinRoleId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *GlobalRebellion) Reset() {
	*x = GlobalRebellion{}
}

func (x *GlobalRebellion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalRebellion) ProtoMessage() {}

func (x *GlobalRebellion) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[161].MessageOf(x)
}

func (m *GlobalRebellion) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[161].Methods()
}

// Deprecated: Use GlobalRebellion.ProtoReflect.Type instead.
func (*GlobalRebellion) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{161}
}

func (x *GlobalRebellion) GetOpenCnt() int32 {
	if x != nil && x.OpenCnt != nil {
		return *x.OpenCnt
	}
	return 0
}

func (x *GlobalRebellion) GetCurPreViewTime() int32 {
	if x != nil && x.CurPreViewTime != nil {
		return *x.CurPreViewTime
	}
	return 0
}

func (x *GlobalRebellion) GetCurRoundStartTime() int32 {
	if x != nil && x.CurRoundStartTime != nil {
		return *x.CurRoundStartTime
	}
	return 0
}

func (x *GlobalRebellion) GetCurRoundEndTime() int32 {
	if x != nil && x.CurRoundEndTime != nil {
		return *x.CurRoundEndTime
	}
	return 0
}

func (x *GlobalRebellion) GetCurEndTime() int32 {
	if x != nil && x.CurEndTime != nil {
		return *x.CurEndTime
	}
	return 0
}

func (x *GlobalRebellion) GetCurRound() int32 {
	if x != nil && x.CurRound != nil {
		return *x.CurRound
	}
	return 0
}

func (x *GlobalRebellion) GetCurTemplate() int32 {
	if x != nil && x.CurTemplate != nil {
		return *x.CurTemplate
	}
	return 0
}

func (x *GlobalRebellion) GetNextRoundTime() int32 {
	if x != nil && x.NextRoundTime != nil {
		return *x.NextRoundTime
	}
	return 0
}

func (x *GlobalRebellion) GetJoinRoleId() []int64 {
	if x != nil {
		return x.JoinRoleId
	}
	return nil
}

type RebelBuff struct {
	StartTime            *int32                  `protobuf:"varint,1,opt,name=startTime" json:"startTime,omitempty"`
	EndTime              *int32                  `protobuf:"varint,2,opt,name=endTime" json:"endTime,omitempty"`
	Lv                   *int32                  `protobuf:"varint,3,req,name=lv" json:"lv,omitempty"`
	Type                 *int32                  `protobuf:"varint,4,req,name=type" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *RebelBuff) Reset() {
	*x = RebelBuff{}
}

func (x *RebelBuff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RebelBuff) ProtoMessage() {}

func (x *RebelBuff) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[162].MessageOf(x)
}

func (m *RebelBuff) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[162].Methods()
}

// Deprecated: Use RebelBuff.ProtoReflect.Type instead.
func (*RebelBuff) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{162}
}

func (x *RebelBuff) GetStartTime() int32 {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return 0
}

func (x *RebelBuff) GetEndTime() int32 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

func (x *RebelBuff) GetLv() int32 {
	if x != nil && x.Lv != nil {
		return *x.Lv
	}
	return 0
}

func (x *RebelBuff) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

// 循环业务功能数据
type CycleData struct {
	OpenCnt              *int32                  `protobuf:"varint,1,opt,name=openCnt" json:"openCnt,omitempty"`
	CurPreViewTime       *int32                  `protobuf:"varint,2,opt,name=curPreViewTime" json:"curPreViewTime,omitempty"`
	CurRoundStartTime    *int32                  `protobuf:"varint,3,opt,name=curRoundStartTime" json:"curRoundStartTime,omitempty"`
	CurRoundEndTime      *int32                  `protobuf:"varint,4,opt,name=curRoundEndTime" json:"curRoundEndTime,omitempty"`
	CurEndTime           *int32                  `protobuf:"varint,5,opt,name=curEndTime" json:"curEndTime,omitempty"`
	CurRound             *int32                  `protobuf:"varint,6,opt,name=curRound" json:"curRound,omitempty"`
	NextRoundTime        *int32                  `protobuf:"varint,7,opt,name=nextRoundTime" json:"nextRoundTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *CycleData) Reset() {
	*x = CycleData{}
}

func (x *CycleData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CycleData) ProtoMessage() {}

func (x *CycleData) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[163].MessageOf(x)
}

func (m *CycleData) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[163].Methods()
}

// Deprecated: Use CycleData.ProtoReflect.Type instead.
func (*CycleData) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{163}
}

func (x *CycleData) GetOpenCnt() int32 {
	if x != nil && x.OpenCnt != nil {
		return *x.OpenCnt
	}
	return 0
}

func (x *CycleData) GetCurPreViewTime() int32 {
	if x != nil && x.CurPreViewTime != nil {
		return *x.CurPreViewTime
	}
	return 0
}

func (x *CycleData) GetCurRoundStartTime() int32 {
	if x != nil && x.CurRoundStartTime != nil {
		return *x.CurRoundStartTime
	}
	return 0
}

func (x *CycleData) GetCurRoundEndTime() int32 {
	if x != nil && x.CurRoundEndTime != nil {
		return *x.CurRoundEndTime
	}
	return 0
}

func (x *CycleData) GetCurEndTime() int32 {
	if x != nil && x.CurEndTime != nil {
		return *x.CurEndTime
	}
	return 0
}

func (x *CycleData) GetCurRound() int32 {
	if x != nil && x.CurRound != nil {
		return *x.CurRound
	}
	return 0
}

func (x *CycleData) GetNextRoundTime() int32 {
	if x != nil && x.NextRoundTime != nil {
		return *x.NextRoundTime
	}
	return 0
}

// 柏林闪电战
type CounterAtkData struct {
	CycleData            *CycleData              `protobuf:"bytes,1,opt,name=cycleData" json:"cycleData,omitempty"`
	CityId               *int32                  `protobuf:"varint,2,opt,name=cityId" json:"cityId,omitempty"`
	Status               *int32                  `protobuf:"varint,3,opt,name=status" json:"status,omitempty"`
	RoleInfo             []*HitRoleInfo          `protobuf:"bytes,4,rep,name=roleInfo" json:"roleInfo,omitempty"`
	CurrentBoss          *int32                  `protobuf:"varint,5,opt,name=currentBoss" json:"currentBoss,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *CounterAtkData) Reset() {
	*x = CounterAtkData{}
}

func (x *CounterAtkData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CounterAtkData) ProtoMessage() {}

func (x *CounterAtkData) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[164].MessageOf(x)
}

func (m *CounterAtkData) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[164].Methods()
}

// Deprecated: Use CounterAtkData.ProtoReflect.Type instead.
func (*CounterAtkData) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{164}
}

func (x *CounterAtkData) GetCycleData() *CycleData {
	if x != nil {
		return x.CycleData
	}
	return nil
}

func (x *CounterAtkData) GetCityId() int32 {
	if x != nil && x.CityId != nil {
		return *x.CityId
	}
	return 0
}

func (x *CounterAtkData) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *CounterAtkData) GetRoleInfo() []*HitRoleInfo {
	if x != nil {
		return x.RoleInfo
	}
	return nil
}

func (x *CounterAtkData) GetCurrentBoss() int32 {
	if x != nil && x.CurrentBoss != nil {
		return *x.CurrentBoss
	}
	return 0
}

// 被攻击玩家信息
type HitRoleInfo struct {
	RoleId               *int64                  `protobuf:"varint,1,opt,name=roleId" json:"roleId,omitempty"`
	Nick                 *string                 `protobuf:"bytes,2,opt,name=nick" json:"nick,omitempty"`
	Pos                  *int32                  `protobuf:"varint,3,opt,name=pos" json:"pos,omitempty"`
	Lv                   *int32                  `protobuf:"varint,4,opt,name=lv" json:"lv,omitempty"`
	Command              *int32                  `protobuf:"varint,5,opt,name=command" json:"command,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *HitRoleInfo) Reset() {
	*x = HitRoleInfo{}
}

func (x *HitRoleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HitRoleInfo) ProtoMessage() {}

func (x *HitRoleInfo) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[165].MessageOf(x)
}

func (m *HitRoleInfo) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[165].Methods()
}

// Deprecated: Use HitRoleInfo.ProtoReflect.Type instead.
func (*HitRoleInfo) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{165}
}

func (x *HitRoleInfo) GetRoleId() int64 {
	if x != nil && x.RoleId != nil {
		return *x.RoleId
	}
	return 0
}

func (x *HitRoleInfo) GetNick() string {
	if x != nil && x.Nick != nil {
		return *x.Nick
	}
	return ""
}

func (x *HitRoleInfo) GetPos() int32 {
	if x != nil && x.Pos != nil {
		return *x.Pos
	}
	return 0
}

func (x *HitRoleInfo) GetLv() int32 {
	if x != nil && x.Lv != nil {
		return *x.Lv
	}
	return 0
}

func (x *HitRoleInfo) GetCommand() int32 {
	if x != nil && x.Command != nil {
		return *x.Command
	}
	return 0
}

// 功能卡
type FunCard struct {
	Type                 *int32                  `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	RemainCardDay        *int32                  `protobuf:"varint,2,req,name=remainCardDay" json:"remainCardDay,omitempty"`
	LastTime             *int32                  `protobuf:"varint,3,req,name=lastTime" json:"lastTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *FunCard) Reset() {
	*x = FunCard{}
}

func (x *FunCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunCard) ProtoMessage() {}

func (x *FunCard) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[166].MessageOf(x)
}

func (m *FunCard) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[166].Methods()
}

// Deprecated: Use FunCard.ProtoReflect.Type instead.
func (*FunCard) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{166}
}

func (x *FunCard) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *FunCard) GetRemainCardDay() int32 {
	if x != nil && x.RemainCardDay != nil {
		return *x.RemainCardDay
	}
	return 0
}

func (x *FunCard) GetLastTime() int32 {
	if x != nil && x.LastTime != nil {
		return *x.LastTime
	}
	return 0
}

// 教官
type Mentor struct {
	Id                   *int32                  `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Type                 *int32                  `protobuf:"varint,2,req,name=type" json:"type,omitempty"`
	Lv                   *int32                  `protobuf:"varint,3,req,name=lv" json:"lv,omitempty"`
	Exp                  *int32                  `protobuf:"varint,4,req,name=exp" json:"exp,omitempty"`
	Fight                *int32                  `protobuf:"varint,5,req,name=fight" json:"fight,omitempty"`
	Attr                 []*TwoInt               `protobuf:"bytes,6,rep,name=attr" json:"attr,omitempty"`
	ExtAttr              []*TwoInt               `protobuf:"bytes,7,rep,name=extAttr" json:"extAttr,omitempty"`
	Equip                []*TwoInt               `protobuf:"bytes,8,rep,name=equip" json:"equip,omitempty"`
	UpAward              []*TwoInt               `protobuf:"bytes,9,rep,name=upAward" json:"upAward,omitempty"`
	Skills               []*MentorSkill          `protobuf:"bytes,10,rep,name=skills" json:"skills,omitempty"`
	BetterEquip          *bool                   `protobuf:"varint,11,opt,name=betterEquip" json:"betterEquip,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *Mentor) Reset() {
	*x = Mentor{}
}

func (x *Mentor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mentor) ProtoMessage() {}

func (x *Mentor) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[167].MessageOf(x)
}

func (m *Mentor) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[167].Methods()
}

// Deprecated: Use Mentor.ProtoReflect.Type instead.
func (*Mentor) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{167}
}

func (x *Mentor) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *Mentor) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *Mentor) GetLv() int32 {
	if x != nil && x.Lv != nil {
		return *x.Lv
	}
	return 0
}

func (x *Mentor) GetExp() int32 {
	if x != nil && x.Exp != nil {
		return *x.Exp
	}
	return 0
}

func (x *Mentor) GetFight() int32 {
	if x != nil && x.Fight != nil {
		return *x.Fight
	}
	return 0
}

func (x *Mentor) GetAttr() []*TwoInt {
	if x != nil {
		return x.Attr
	}
	return nil
}

func (x *Mentor) GetExtAttr() []*TwoInt {
	if x != nil {
		return x.ExtAttr
	}
	return nil
}

func (x *Mentor) GetEquip() []*TwoInt {
	if x != nil {
		return x.Equip
	}
	return nil
}

func (x *Mentor) GetUpAward() []*TwoInt {
	if x != nil {
		return x.UpAward
	}
	return nil
}

func (x *Mentor) GetSkills() []*MentorSkill {
	if x != nil {
		return x.Skills
	}
	return nil
}

func (x *Mentor) GetBetterEquip() bool {
	if x != nil && x.BetterEquip != nil {
		return *x.BetterEquip
	}
	return false
}

// 教官装备
type MentorEquip struct {
	KeyId                *int32                  `protobuf:"varint,1,req,name=keyId" json:"keyId,omitempty"`
	EquipId              *int32                  `protobuf:"varint,2,req,name=equipId" json:"equipId,omitempty"`
	Type                 *int32                  `protobuf:"varint,3,req,name=type" json:"type,omitempty"`
	Lv                   *int32                  `protobuf:"varint,4,req,name=lv" json:"lv,omitempty"`
	StarLv               *int32                  `protobuf:"varint,5,req,name=starLv" json:"starLv,omitempty"`
	Attr                 []*TwoInt               `protobuf:"bytes,6,rep,name=attr" json:"attr,omitempty"`
	ExtAttr              []*TwoInt               `protobuf:"bytes,7,rep,name=extAttr" json:"extAttr,omitempty"`
	MentorId             *int32                  `protobuf:"varint,8,opt,name=mentorId" json:"mentorId,omitempty"`
	Fight                *int32                  `protobuf:"varint,9,opt,name=fight" json:"fight,omitempty"`
	MentorType           *int32                  `protobuf:"varint,10,opt,name=mentorType" json:"mentorType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *MentorEquip) Reset() {
	*x = MentorEquip{}
}

func (x *MentorEquip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MentorEquip) ProtoMessage() {}

func (x *MentorEquip) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[168].MessageOf(x)
}

func (m *MentorEquip) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[168].Methods()
}

// Deprecated: Use MentorEquip.ProtoReflect.Type instead.
func (*MentorEquip) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{168}
}

func (x *MentorEquip) GetKeyId() int32 {
	if x != nil && x.KeyId != nil {
		return *x.KeyId
	}
	return 0
}

func (x *MentorEquip) GetEquipId() int32 {
	if x != nil && x.EquipId != nil {
		return *x.EquipId
	}
	return 0
}

func (x *MentorEquip) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *MentorEquip) GetLv() int32 {
	if x != nil && x.Lv != nil {
		return *x.Lv
	}
	return 0
}

func (x *MentorEquip) GetStarLv() int32 {
	if x != nil && x.StarLv != nil {
		return *x.StarLv
	}
	return 0
}

func (x *MentorEquip) GetAttr() []*TwoInt {
	if x != nil {
		return x.Attr
	}
	return nil
}

func (x *MentorEquip) GetExtAttr() []*TwoInt {
	if x != nil {
		return x.ExtAttr
	}
	return nil
}

func (x *MentorEquip) GetMentorId() int32 {
	if x != nil && x.MentorId != nil {
		return *x.MentorId
	}
	return 0
}

func (x *MentorEquip) GetFight() int32 {
	if x != nil && x.Fight != nil {
		return *x.Fight
	}
	return 0
}

func (x *MentorEquip) GetMentorType() int32 {
	if x != nil && x.MentorType != nil {
		return *x.MentorType
	}
	return 0
}

// 教官技能
type MentorSkill struct {
	Pos                  *int32                  `protobuf:"varint,1,req,name=pos" json:"pos,omitempty"`
	SkillId              *int32                  `protobuf:"varint,3,opt,name=skillId" json:"skillId,omitempty"`
	Type                 *int32                  `protobuf:"varint,4,opt,name=type" json:"type,omitempty"`
	Lv                   *int32                  `protobuf:"varint,5,opt,name=lv" json:"lv,omitempty"`
	IsActivate           *bool                   `protobuf:"varint,6,opt,name=isActivate" json:"isActivate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *MentorSkill) Reset() {
	*x = MentorSkill{}
}

func (x *MentorSkill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MentorSkill) ProtoMessage() {}

func (x *MentorSkill) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[169].MessageOf(x)
}

func (m *MentorSkill) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[169].Methods()
}

// Deprecated: Use MentorSkill.ProtoReflect.Type instead.
func (*MentorSkill) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{169}
}

func (x *MentorSkill) GetPos() int32 {
	if x != nil && x.Pos != nil {
		return *x.Pos
	}
	return 0
}

func (x *MentorSkill) GetSkillId() int32 {
	if x != nil && x.SkillId != nil {
		return *x.SkillId
	}
	return 0
}

func (x *MentorSkill) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *MentorSkill) GetLv() int32 {
	if x != nil && x.Lv != nil {
		return *x.Lv
	}
	return 0
}

func (x *MentorSkill) GetIsActivate() bool {
	if x != nil && x.IsActivate != nil {
		return *x.IsActivate
	}
	return false
}

// 挑战荣耀演副本
type PitchCombat struct {
	Type                 *int32                  `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	HighestCombatId      *int32                  `protobuf:"varint,2,req,name=highestCombatId" json:"highestCombatId,omitempty"`
	WipeCnt              *int32                  `protobuf:"varint,3,opt,name=wipeCnt" json:"wipeCnt,omitempty"`
	TodayCombatId        *int32                  `protobuf:"varint,4,opt,name=todayCombatId" json:"todayCombatId,omitempty"`
	BuyCnt               []*TwoInt               `protobuf:"bytes,5,rep,name=buyCnt" json:"buyCnt,omitempty"`
	CombatPoint          *int32                  `protobuf:"varint,6,req,name=combatPoint" json:"combatPoint,omitempty"`
	LastRefreshDate      *int32                  `protobuf:"varint,7,opt,name=lastRefreshDate" json:"lastRefreshDate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *PitchCombat) Reset() {
	*x = PitchCombat{}
}

func (x *PitchCombat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PitchCombat) ProtoMessage() {}

func (x *PitchCombat) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[170].MessageOf(x)
}

func (m *PitchCombat) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[170].Methods()
}

// Deprecated: Use PitchCombat.ProtoReflect.Type instead.
func (*PitchCombat) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{170}
}

func (x *PitchCombat) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *PitchCombat) GetHighestCombatId() int32 {
	if x != nil && x.HighestCombatId != nil {
		return *x.HighestCombatId
	}
	return 0
}

func (x *PitchCombat) GetWipeCnt() int32 {
	if x != nil && x.WipeCnt != nil {
		return *x.WipeCnt
	}
	return 0
}

func (x *PitchCombat) GetTodayCombatId() int32 {
	if x != nil && x.TodayCombatId != nil {
		return *x.TodayCombatId
	}
	return 0
}

func (x *PitchCombat) GetBuyCnt() []*TwoInt {
	if x != nil {
		return x.BuyCnt
	}
	return nil
}

func (x *PitchCombat) GetCombatPoint() int32 {
	if x != nil && x.CombatPoint != nil {
		return *x.CombatPoint
	}
	return 0
}

func (x *PitchCombat) GetLastRefreshDate() int32 {
	if x != nil && x.LastRefreshDate != nil {
		return *x.LastRefreshDate
	}
	return 0
}

// 多人副本信息
type MultCombat struct {
	HighestCombatId      *int32                  `protobuf:"varint,1,req,name=highestCombatId" json:"highestCombatId,omitempty"`
	WipeCnt              *int32                  `protobuf:"varint,2,opt,name=wipeCnt" json:"wipeCnt,omitempty"`
	TodayCombatId        []int32                 `protobuf:"varint,3,rep,name=todayCombatId" json:"todayCombatId,omitempty"`
	BuyCnt               []*TwoInt               `protobuf:"bytes,4,rep,name=buyCnt" json:"buyCnt,omitempty"`
	CombatPoint          *int32                  `protobuf:"varint,5,req,name=combatPoint" json:"combatPoint,omitempty"`
	LastRefreshDate      *int32                  `protobuf:"varint,6,opt,name=lastRefreshDate" json:"lastRefreshDate,omitempty"`
	TeamAwardCnt         *int32                  `protobuf:"varint,7,opt,name=teamAwardCnt" json:"teamAwardCnt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *MultCombat) Reset() {
	*x = MultCombat{}
}

func (x *MultCombat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultCombat) ProtoMessage() {}

func (x *MultCombat) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[171].MessageOf(x)
}

func (m *MultCombat) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[171].Methods()
}

// Deprecated: Use MultCombat.ProtoReflect.Type instead.
func (*MultCombat) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{171}
}

func (x *MultCombat) GetHighestCombatId() int32 {
	if x != nil && x.HighestCombatId != nil {
		return *x.HighestCombatId
	}
	return 0
}

func (x *MultCombat) GetWipeCnt() int32 {
	if x != nil && x.WipeCnt != nil {
		return *x.WipeCnt
	}
	return 0
}

func (x *MultCombat) GetTodayCombatId() []int32 {
	if x != nil {
		return x.TodayCombatId
	}
	return nil
}

func (x *MultCombat) GetBuyCnt() []*TwoInt {
	if x != nil {
		return x.BuyCnt
	}
	return nil
}

func (x *MultCombat) GetCombatPoint() int32 {
	if x != nil && x.CombatPoint != nil {
		return *x.CombatPoint
	}
	return 0
}

func (x *MultCombat) GetLastRefreshDate() int32 {
	if x != nil && x.LastRefreshDate != nil {
		return *x.LastRefreshDate
	}
	return 0
}

func (x *MultCombat) GetTeamAwardCnt() int32 {
	if x != nil && x.TeamAwardCnt != nil {
		return *x.TeamAwardCnt
	}
	return 0
}

// 多人副本任务队伍
type MultCombatTeam struct {
	TeamId               *int32                  `protobuf:"varint,1,req,name=teamId" json:"teamId,omitempty"`
	CombatId             *int32                  `protobuf:"varint,2,opt,name=combatId" json:"combatId,omitempty"`
	CaptainRoleId        *int64                  `protobuf:"varint,3,opt,name=captainRoleId" json:"captainRoleId,omitempty"`
	Tm                   []*TeamMember           `protobuf:"bytes,4,rep,name=tm" json:"tm,omitempty"`
	AutoStart            *bool                   `protobuf:"varint,5,opt,name=autoStart" json:"autoStart,omitempty"`
	AutoJoin             *bool                   `protobuf:"varint,6,opt,name=autoJoin" json:"autoJoin,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *MultCombatTeam) Reset() {
	*x = MultCombatTeam{}
}

func (x *MultCombatTeam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultCombatTeam) ProtoMessage() {}

func (x *MultCombatTeam) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[172].MessageOf(x)
}

func (m *MultCombatTeam) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[172].Methods()
}

// Deprecated: Use MultCombatTeam.ProtoReflect.Type instead.
func (*MultCombatTeam) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{172}
}

func (x *MultCombatTeam) GetTeamId() int32 {
	if x != nil && x.TeamId != nil {
		return *x.TeamId
	}
	return 0
}

func (x *MultCombatTeam) GetCombatId() int32 {
	if x != nil && x.CombatId != nil {
		return *x.CombatId
	}
	return 0
}

func (x *MultCombatTeam) GetCaptainRoleId() int64 {
	if x != nil && x.CaptainRoleId != nil {
		return *x.CaptainRoleId
	}
	return 0
}

func (x *MultCombatTeam) GetTm() []*TeamMember {
	if x != nil {
		return x.Tm
	}
	return nil
}

func (x *MultCombatTeam) GetAutoStart() bool {
	if x != nil && x.AutoStart != nil {
		return *x.AutoStart
	}
	return false
}

func (x *MultCombatTeam) GetAutoJoin() bool {
	if x != nil && x.AutoJoin != nil {
		return *x.AutoJoin
	}
	return false
}

// 队员信息
type TeamMember struct {
	RoleId               *int64                  `protobuf:"varint,1,req,name=roleId" json:"roleId,omitempty"`
	Nick                 *string                 `protobuf:"bytes,2,opt,name=nick" json:"nick,omitempty"`
	Fight                *int64                  `protobuf:"varint,3,opt,name=fight" json:"fight,omitempty"`
	Lv                   *int32                  `protobuf:"varint,4,opt,name=lv" json:"lv,omitempty"`
	Camp                 *int32                  `protobuf:"varint,5,opt,name=camp" json:"camp,omitempty"`
	Ranks                *int32                  `protobuf:"varint,6,opt,name=ranks" json:"ranks,omitempty"`
	Portrait             *int32                  `protobuf:"varint,7,opt,name=portrait" json:"portrait,omitempty"`
	Online               *bool                   `protobuf:"varint,8,opt,name=online" json:"online,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *TeamMember) Reset() {
	*x = TeamMember{}
}

func (x *TeamMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamMember) ProtoMessage() {}

func (x *TeamMember) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[173].MessageOf(x)
}

func (m *TeamMember) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[173].Methods()
}

// Deprecated: Use TeamMember.ProtoReflect.Type instead.
func (*TeamMember) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{173}
}

func (x *TeamMember) GetRoleId() int64 {
	if x != nil && x.RoleId != nil {
		return *x.RoleId
	}
	return 0
}

func (x *TeamMember) GetNick() string {
	if x != nil && x.Nick != nil {
		return *x.Nick
	}
	return ""
}

func (x *TeamMember) GetFight() int64 {
	if x != nil && x.Fight != nil {
		return *x.Fight
	}
	return 0
}

func (x *TeamMember) GetLv() int32 {
	if x != nil && x.Lv != nil {
		return *x.Lv
	}
	return 0
}

func (x *TeamMember) GetCamp() int32 {
	if x != nil && x.Camp != nil {
		return *x.Camp
	}
	return 0
}

func (x *TeamMember) GetRanks() int32 {
	if x != nil && x.Ranks != nil {
		return *x.Ranks
	}
	return 0
}

func (x *TeamMember) GetPortrait() int32 {
	if x != nil && x.Portrait != nil {
		return *x.Portrait
	}
	return 0
}

func (x *TeamMember) GetOnline() bool {
	if x != nil && x.Online != nil {
		return *x.Online
	}
	return false
}

// 特殊活动
type SpecialAct struct {
	KeyId                *int32                  `protobuf:"varint,1,req,name=keyId" json:"keyId,omitempty"`
	Type                 *int32                  `protobuf:"varint,2,req,name=type" json:"type,omitempty"`
	BeginTime            *int32                  `protobuf:"varint,3,opt,name=beginTime" json:"beginTime,omitempty"`
	EndTime              *int32                  `protobuf:"varint,4,opt,name=endTime" json:"endTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SpecialAct) Reset() {
	*x = SpecialAct{}
}

func (x *SpecialAct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecialAct) ProtoMessage() {}

func (x *SpecialAct) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[174].MessageOf(x)
}

func (m *SpecialAct) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[174].Methods()
}

// Deprecated: Use SpecialAct.ProtoReflect.Type instead.
func (*SpecialAct) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{174}
}

func (x *SpecialAct) GetKeyId() int32 {
	if x != nil && x.KeyId != nil {
		return *x.KeyId
	}
	return 0
}

func (x *SpecialAct) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *SpecialAct) GetBeginTime() int32 {
	if x != nil && x.BeginTime != nil {
		return *x.BeginTime
	}
	return 0
}

func (x *SpecialAct) GetEndTime() int32 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

//签到信息
type SignInInfo struct {
	Date                 *int64                  `protobuf:"varint,1,req,name=date" json:"date,omitempty"`
	Level                *int32                  `protobuf:"varint,2,req,name=level" json:"level,omitempty"`
	Times                *int32                  `protobuf:"varint,3,req,name=times" json:"times,omitempty"`
	SignIn               *int32                  `protobuf:"varint,4,req,name=signIn" json:"signIn,omitempty"`
	DoubleReward         *int32                  `protobuf:"varint,5,req,name=doubleReward" json:"doubleReward,omitempty"`
	ActivityId           *int32                  `protobuf:"varint,6,opt,name=activityId" json:"activityId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SignInInfo) Reset() {
	*x = SignInInfo{}
}

func (x *SignInInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignInInfo) ProtoMessage() {}

func (x *SignInInfo) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[175].MessageOf(x)
}

func (m *SignInInfo) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[175].Methods()
}

// Deprecated: Use SignInInfo.ProtoReflect.Type instead.
func (*SignInInfo) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{175}
}

func (x *SignInInfo) GetDate() int64 {
	if x != nil && x.Date != nil {
		return *x.Date
	}
	return 0
}

func (x *SignInInfo) GetLevel() int32 {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return 0
}

func (x *SignInInfo) GetTimes() int32 {
	if x != nil && x.Times != nil {
		return *x.Times
	}
	return 0
}

func (x *SignInInfo) GetSignIn() int32 {
	if x != nil && x.SignIn != nil {
		return *x.SignIn
	}
	return 0
}

func (x *SignInInfo) GetDoubleReward() int32 {
	if x != nil && x.DoubleReward != nil {
		return *x.DoubleReward
	}
	return 0
}

func (x *SignInInfo) GetActivityId() int32 {
	if x != nil && x.ActivityId != nil {
		return *x.ActivityId
	}
	return 0
}

// 简要排名
type SimpleRank struct {
	Date                 *int64                  `protobuf:"varint,1,req,name=date" json:"date,omitempty"`
	Name                 *string                 `protobuf:"bytes,2,req,name=name" json:"name,omitempty"`
	Pecent               *int32                  `protobuf:"varint,3,req,name=pecent" json:"pecent,omitempty"`
	Value                *int32                  `protobuf:"varint,4,req,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SimpleRank) Reset() {
	*x = SimpleRank{}
}

func (x *SimpleRank) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleRank) ProtoMessage() {}

func (x *SimpleRank) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[176].MessageOf(x)
}

func (m *SimpleRank) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[176].Methods()
}

// Deprecated: Use SimpleRank.ProtoReflect.Type instead.
func (*SimpleRank) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{176}
}

func (x *SimpleRank) GetDate() int64 {
	if x != nil && x.Date != nil {
		return *x.Date
	}
	return 0
}

func (x *SimpleRank) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *SimpleRank) GetPecent() int32 {
	if x != nil && x.Pecent != nil {
		return *x.Pecent
	}
	return 0
}

func (x *SimpleRank) GetValue() int32 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

// 飞艇
type Airship struct {
	Id                   *int32                  `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	KeyId                *int32                  `protobuf:"varint,2,req,name=keyId" json:"keyId,omitempty"`
	AreaId               *int32                  `protobuf:"varint,3,req,name=areaId" json:"areaId,omitempty"`
	Pos                  *int32                  `protobuf:"varint,4,opt,name=pos" json:"pos,omitempty"`
	Npc                  []*Force                `protobuf:"bytes,5,rep,name=npc" json:"npc,omitempty"`
	Status               *int32                  `protobuf:"varint,6,opt,name=status" json:"status,omitempty"`
	TriggerTime          *int32                  `protobuf:"varint,7,opt,name=triggerTime" json:"triggerTime,omitempty"`
	BelongRoleId         *int64                  `protobuf:"varint,8,opt,name=belongRoleId" json:"belongRoleId,omitempty"`
	Camp1Army            []*BattleRole           `protobuf:"bytes,9,rep,name=camp1Army" json:"camp1Army,omitempty"`
	Camp2Army            []*BattleRole           `protobuf:"bytes,10,rep,name=camp2Army" json:"camp2Army,omitempty"`
	Camp3Army            []*BattleRole           `protobuf:"bytes,11,rep,name=camp3Army" json:"camp3Army,omitempty"`
	BelongMember         *TeamMember             `protobuf:"bytes,12,opt,name=belongMember" json:"belongMember,omitempty"`
	JoinMember           []*TeamMember           `protobuf:"bytes,13,rep,name=joinMember" json:"joinMember,omitempty"`
	RemainHp             *int32                  `protobuf:"varint,14,opt,name=remainHp" json:"remainHp,omitempty"`
	JoinCnt              *int32                  `protobuf:"varint,15,opt,name=joinCnt" json:"joinCnt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *Airship) Reset() {
	*x = Airship{}
}

func (x *Airship) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Airship) ProtoMessage() {}

func (x *Airship) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[177].MessageOf(x)
}

func (m *Airship) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[177].Methods()
}

// Deprecated: Use Airship.ProtoReflect.Type instead.
func (*Airship) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{177}
}

func (x *Airship) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *Airship) GetKeyId() int32 {
	if x != nil && x.KeyId != nil {
		return *x.KeyId
	}
	return 0
}

func (x *Airship) GetAreaId() int32 {
	if x != nil && x.AreaId != nil {
		return *x.AreaId
	}
	return 0
}

func (x *Airship) GetPos() int32 {
	if x != nil && x.Pos != nil {
		return *x.Pos
	}
	return 0
}

func (x *Airship) GetNpc() []*Force {
	if x != nil {
		return x.Npc
	}
	return nil
}

func (x *Airship) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *Airship) GetTriggerTime() int32 {
	if x != nil && x.TriggerTime != nil {
		return *x.TriggerTime
	}
	return 0
}

func (x *Airship) GetBelongRoleId() int64 {
	if x != nil && x.BelongRoleId != nil {
		return *x.BelongRoleId
	}
	return 0
}

func (x *Airship) GetCamp1Army() []*BattleRole {
	if x != nil {
		return x.Camp1Army
	}
	return nil
}

func (x *Airship) GetCamp2Army() []*BattleRole {
	if x != nil {
		return x.Camp2Army
	}
	return nil
}

func (x *Airship) GetCamp3Army() []*BattleRole {
	if x != nil {
		return x.Camp3Army
	}
	return nil
}

func (x *Airship) GetBelongMember() *TeamMember {
	if x != nil {
		return x.BelongMember
	}
	return nil
}

func (x *Airship) GetJoinMember() []*TeamMember {
	if x != nil {
		return x.JoinMember
	}
	return nil
}

func (x *Airship) GetRemainHp() int32 {
	if x != nil && x.RemainHp != nil {
		return *x.RemainHp
	}
	return 0
}

func (x *Airship) GetJoinCnt() int32 {
	if x != nil && x.JoinCnt != nil {
		return *x.JoinCnt
	}
	return 0
}

// 跨服使用地图基础信息
type BaseMapEntityInfo struct {
	X                    *int32                  `protobuf:"varint,1,req,name=x" json:"x,omitempty"`
	Y                    *int32                  `protobuf:"varint,2,req,name=y" json:"y,omitempty"`
	Width                *int32                  `protobuf:"varint,3,req,name=width" json:"width,omitempty"`
	Height               *int32                  `protobuf:"varint,4,req,name=height" json:"height,omitempty"`
	MapEntityType        *int32                  `protobuf:"varint,5,req,name=mapEntityType" json:"mapEntityType,omitempty"`
	Param                *int32                  `protobuf:"varint,6,opt,name=param" json:"param,omitempty"`
	Camp                 *int32                  `protobuf:"varint,7,opt,name=camp" json:"camp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *BaseMapEntityInfo) Reset() {
	*x = BaseMapEntityInfo{}
}

func (x *BaseMapEntityInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseMapEntityInfo) ProtoMessage() {}

func (x *BaseMapEntityInfo) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[178].MessageOf(x)
}

func (m *BaseMapEntityInfo) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[178].Methods()
}

// Deprecated: Use BaseMapEntityInfo.ProtoReflect.Type instead.
func (*BaseMapEntityInfo) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{178}
}

func (x *BaseMapEntityInfo) GetX() int32 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return 0
}

func (x *BaseMapEntityInfo) GetY() int32 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return 0
}

func (x *BaseMapEntityInfo) GetWidth() int32 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return 0
}

func (x *BaseMapEntityInfo) GetHeight() int32 {
	if x != nil && x.Height != nil {
		return *x.Height
	}
	return 0
}

func (x *BaseMapEntityInfo) GetMapEntityType() int32 {
	if x != nil && x.MapEntityType != nil {
		return *x.MapEntityType
	}
	return 0
}

func (x *BaseMapEntityInfo) GetParam() int32 {
	if x != nil && x.Param != nil {
		return *x.Param
	}
	return 0
}

func (x *BaseMapEntityInfo) GetCamp() int32 {
	if x != nil && x.Camp != nil {
		return *x.Camp
	}
	return 0
}

// 跨服地图玩家信息
type MapPlayerInfo struct {
	RoleId               *int64                  `protobuf:"varint,1,req,name=roleId" json:"roleId,omitempty"`
	Name                 *string                 `protobuf:"bytes,2,req,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *MapPlayerInfo) Reset() {
	*x = MapPlayerInfo{}
}

func (x *MapPlayerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapPlayerInfo) ProtoMessage() {}

func (x *MapPlayerInfo) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[179].MessageOf(x)
}

func (m *MapPlayerInfo) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[179].Methods()
}

// Deprecated: Use MapPlayerInfo.ProtoReflect.Type instead.
func (*MapPlayerInfo) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{179}
}

func (x *MapPlayerInfo) GetRoleId() int64 {
	if x != nil && x.RoleId != nil {
		return *x.RoleId
	}
	return 0
}

func (x *MapPlayerInfo) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

// 跨服地图信息
type MapEntity struct {
	BaseInfo             *BaseMapEntityInfo      `protobuf:"bytes,1,req,name=baseInfo" json:"baseInfo,omitempty"`
	Player               *MapPlayerInfo          `protobuf:"bytes,2,opt,name=player" json:"player,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *MapEntity) Reset() {
	*x = MapEntity{}
}

func (x *MapEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapEntity) ProtoMessage() {}

func (x *MapEntity) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[180].MessageOf(x)
}

func (m *MapEntity) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[180].Methods()
}

// Deprecated: Use MapEntity.ProtoReflect.Type instead.
func (*MapEntity) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{180}
}

func (x *MapEntity) GetBaseInfo() *BaseMapEntityInfo {
	if x != nil {
		return x.BaseInfo
	}
	return nil
}

func (x *MapEntity) GetPlayer() *MapPlayerInfo {
	if x != nil {
		return x.Player
	}
	return nil
}

// 补给箱
type PartySupply struct {
	Key                  *int32                  `protobuf:"varint,1,req,name=key" json:"key,omitempty"`
	Id                   *int32                  `protobuf:"varint,2,req,name=id" json:"id,omitempty"`
	EndTime              *int32                  `protobuf:"varint,3,req,name=endTime" json:"endTime,omitempty"`
	IncrementKey         *int32                  `protobuf:"varint,4,req,name=incrementKey" json:"incrementKey,omitempty"`
	Status               []*LongInt              `protobuf:"bytes,5,rep,name=status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *PartySupply) Reset() {
	*x = PartySupply{}
}

func (x *PartySupply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartySupply) ProtoMessage() {}

func (x *PartySupply) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[181].MessageOf(x)
}

func (m *PartySupply) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[181].Methods()
}

// Deprecated: Use PartySupply.ProtoReflect.Type instead.
func (*PartySupply) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{181}
}

func (x *PartySupply) GetKey() int32 {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return 0
}

func (x *PartySupply) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *PartySupply) GetEndTime() int32 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

func (x *PartySupply) GetIncrementKey() int32 {
	if x != nil && x.IncrementKey != nil {
		return *x.IncrementKey
	}
	return 0
}

func (x *PartySupply) GetStatus() []*LongInt {
	if x != nil {
		return x.Status
	}
	return nil
}

// 超级补给
type PartySuperSupply struct {
	Lv                   *int32                  `protobuf:"varint,1,req,name=lv" json:"lv,omitempty"`
	Energy               *int32                  `protobuf:"varint,2,req,name=energy" json:"energy,omitempty"`
	CostGold             *int64                  `protobuf:"varint,3,req,name=costGold" json:"costGold,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *PartySuperSupply) Reset() {
	*x = PartySuperSupply{}
}

func (x *PartySuperSupply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartySuperSupply) ProtoMessage() {}

func (x *PartySuperSupply) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[182].MessageOf(x)
}

func (m *PartySuperSupply) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[182].Methods()
}

// Deprecated: Use PartySuperSupply.ProtoReflect.Type instead.
func (*PartySuperSupply) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{182}
}

func (x *PartySuperSupply) GetLv() int32 {
	if x != nil && x.Lv != nil {
		return *x.Lv
	}
	return 0
}

func (x *PartySuperSupply) GetEnergy() int32 {
	if x != nil && x.Energy != nil {
		return *x.Energy
	}
	return 0
}

func (x *PartySuperSupply) GetCostGold() int64 {
	if x != nil && x.CostGold != nil {
		return *x.CostGold
	}
	return 0
}

// 世界进度排行榜item
type ScheduleRankItem struct {
	Camp                 *int32                  `protobuf:"varint,1,req,name=camp" json:"camp,omitempty"`
	Area                 *int32                  `protobuf:"varint,2,opt,name=area" json:"area,omitempty"`
	Value                *int64                  `protobuf:"varint,3,req,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *ScheduleRankItem) Reset() {
	*x = ScheduleRankItem{}
}

func (x *ScheduleRankItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleRankItem) ProtoMessage() {}

func (x *ScheduleRankItem) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[183].MessageOf(x)
}

func (m *ScheduleRankItem) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[183].Methods()
}

// Deprecated: Use ScheduleRankItem.ProtoReflect.Type instead.
func (*ScheduleRankItem) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{183}
}

func (x *ScheduleRankItem) GetCamp() int32 {
	if x != nil && x.Camp != nil {
		return *x.Camp
	}
	return 0
}

func (x *ScheduleRankItem) GetArea() int32 {
	if x != nil && x.Area != nil {
		return *x.Area
	}
	return 0
}

func (x *ScheduleRankItem) GetValue() int64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

// 世界进度
type WorldSchedule struct {
	Id                   *int32                  `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	StartTime            *int32                  `protobuf:"varint,2,opt,name=startTime" json:"startTime,omitempty"`
	FinishTime           *int32                  `protobuf:"varint,3,opt,name=finishTime" json:"finishTime,omitempty"`
	Status               *int32                  `protobuf:"varint,4,req,name=status" json:"status,omitempty"`
	Goal                 []*ScheduleGoal         `protobuf:"bytes,5,rep,name=goal" json:"goal,omitempty"`
	Rank                 *ScheduleRank           `protobuf:"bytes,6,opt,name=rank" json:"rank,omitempty"`
	Boss                 *ScheduleBoss           `protobuf:"bytes,7,opt,name=boss" json:"boss,omitempty"`
	StatusCnt            []*TwoInt               `protobuf:"bytes,8,rep,name=statusCnt" json:"statusCnt,omitempty"`
	RewardStatus         []*TwoInt               `protobuf:"bytes,9,rep,name=rewardStatus" json:"rewardStatus,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *WorldSchedule) Reset() {
	*x = WorldSchedule{}
}

func (x *WorldSchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldSchedule) ProtoMessage() {}

func (x *WorldSchedule) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[184].MessageOf(x)
}

func (m *WorldSchedule) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[184].Methods()
}

// Deprecated: Use WorldSchedule.ProtoReflect.Type instead.
func (*WorldSchedule) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{184}
}

func (x *WorldSchedule) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *WorldSchedule) GetStartTime() int32 {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return 0
}

func (x *WorldSchedule) GetFinishTime() int32 {
	if x != nil && x.FinishTime != nil {
		return *x.FinishTime
	}
	return 0
}

func (x *WorldSchedule) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *WorldSchedule) GetGoal() []*ScheduleGoal {
	if x != nil {
		return x.Goal
	}
	return nil
}

func (x *WorldSchedule) GetRank() *ScheduleRank {
	if x != nil {
		return x.Rank
	}
	return nil
}

func (x *WorldSchedule) GetBoss() *ScheduleBoss {
	if x != nil {
		return x.Boss
	}
	return nil
}

func (x *WorldSchedule) GetStatusCnt() []*TwoInt {
	if x != nil {
		return x.StatusCnt
	}
	return nil
}

func (x *WorldSchedule) GetRewardStatus() []*TwoInt {
	if x != nil {
		return x.RewardStatus
	}
	return nil
}

// 世界进度排行榜数据
type ScheduleRank struct {
	RankType             *int32                  `protobuf:"varint,1,opt,name=rankType" json:"rankType,omitempty"`
	RankParam            *int32                  `protobuf:"varint,2,opt,name=rankParam" json:"rankParam,omitempty"`
	RankArea             *int32                  `protobuf:"varint,3,opt,name=rankArea" json:"rankArea,omitempty"`
	Item                 []*ScheduleRankItem     `protobuf:"bytes,4,rep,name=item" json:"item,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *ScheduleRank) Reset() {
	*x = ScheduleRank{}
}

func (x *ScheduleRank) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleRank) ProtoMessage() {}

func (x *ScheduleRank) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[185].MessageOf(x)
}

func (m *ScheduleRank) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[185].Methods()
}

// Deprecated: Use ScheduleRank.ProtoReflect.Type instead.
func (*ScheduleRank) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{185}
}

func (x *ScheduleRank) GetRankType() int32 {
	if x != nil && x.RankType != nil {
		return *x.RankType
	}
	return 0
}

func (x *ScheduleRank) GetRankParam() int32 {
	if x != nil && x.RankParam != nil {
		return *x.RankParam
	}
	return 0
}

func (x *ScheduleRank) GetRankArea() int32 {
	if x != nil && x.RankArea != nil {
		return *x.RankArea
	}
	return 0
}

func (x *ScheduleRank) GetItem() []*ScheduleRankItem {
	if x != nil {
		return x.Item
	}
	return nil
}

// 世界进度的boss
type ScheduleBoss struct {
	Id                   *int32                  `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	BossNpc              []*Force                `protobuf:"bytes,2,rep,name=bossNpc" json:"bossNpc,omitempty"`
	FightCnt             *int32                  `protobuf:"varint,3,req,name=fightCnt" json:"fightCnt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *ScheduleBoss) Reset() {
	*x = ScheduleBoss{}
}

func (x *ScheduleBoss) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleBoss) ProtoMessage() {}

func (x *ScheduleBoss) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[186].MessageOf(x)
}

func (m *ScheduleBoss) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[186].Methods()
}

// Deprecated: Use ScheduleBoss.ProtoReflect.Type instead.
func (*ScheduleBoss) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{186}
}

func (x *ScheduleBoss) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *ScheduleBoss) GetBossNpc() []*Force {
	if x != nil {
		return x.BossNpc
	}
	return nil
}

func (x *ScheduleBoss) GetFightCnt() int32 {
	if x != nil && x.FightCnt != nil {
		return *x.FightCnt
	}
	return 0
}

// 世界进度的目标
type ScheduleGoal struct {
	Id                   *int32                  `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Status               []*LongInt              `protobuf:"bytes,2,rep,name=status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *ScheduleGoal) Reset() {
	*x = ScheduleGoal{}
}

func (x *ScheduleGoal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleGoal) ProtoMessage() {}

func (x *ScheduleGoal) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[187].MessageOf(x)
}

func (m *ScheduleGoal) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[187].Methods()
}

// Deprecated: Use ScheduleGoal.ProtoReflect.Type instead.
func (*ScheduleGoal) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{187}
}

func (x *ScheduleGoal) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *ScheduleGoal) GetStatus() []*LongInt {
	if x != nil {
		return x.Status
	}
	return nil
}

// 个人的世界进度信息
type PersonalWorldSchedule struct {
	RefreshTime          *int32                       `protobuf:"varint,1,opt,name=refreshTime" json:"refreshTime,omitempty"`
	AtkBossCnt           *int32                       `protobuf:"varint,2,opt,name=atkBossCnt" json:"atkBossCnt,omitempty"`
	PersonalRank         []*PersonalWorldScheduleRank `protobuf:"bytes,3,rep,name=personalRank" json:"personalRank,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields      `json:"-"`
	XXX_sizecache        protoimpl.SizeCache          `json:"-"`
}

func (x *PersonalWorldSchedule) Reset() {
	*x = PersonalWorldSchedule{}
}

func (x *PersonalWorldSchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PersonalWorldSchedule) ProtoMessage() {}

func (x *PersonalWorldSchedule) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[188].MessageOf(x)
}

func (m *PersonalWorldSchedule) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[188].Methods()
}

// Deprecated: Use PersonalWorldSchedule.ProtoReflect.Type instead.
func (*PersonalWorldSchedule) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{188}
}

func (x *PersonalWorldSchedule) GetRefreshTime() int32 {
	if x != nil && x.RefreshTime != nil {
		return *x.RefreshTime
	}
	return 0
}

func (x *PersonalWorldSchedule) GetAtkBossCnt() int32 {
	if x != nil && x.AtkBossCnt != nil {
		return *x.AtkBossCnt
	}
	return 0
}

func (x *PersonalWorldSchedule) GetPersonalRank() []*PersonalWorldScheduleRank {
	if x != nil {
		return x.PersonalRank
	}
	return nil
}

// 个人世界进度排行
type PersonalWorldScheduleRank struct {
	Id                   *int32                  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Rank                 *int32                  `protobuf:"varint,2,opt,name=rank" json:"rank,omitempty"`
	Item                 *ScheduleRankItem       `protobuf:"bytes,3,opt,name=item" json:"item,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *PersonalWorldScheduleRank) Reset() {
	*x = PersonalWorldScheduleRank{}
}

func (x *PersonalWorldScheduleRank) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PersonalWorldScheduleRank) ProtoMessage() {}

func (x *PersonalWorldScheduleRank) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[189].MessageOf(x)
}

func (m *PersonalWorldScheduleRank) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[189].Methods()
}

// Deprecated: Use PersonalWorldScheduleRank.ProtoReflect.Type instead.
func (*PersonalWorldScheduleRank) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{189}
}

func (x *PersonalWorldScheduleRank) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *PersonalWorldScheduleRank) GetRank() int32 {
	if x != nil && x.Rank != nil {
		return *x.Rank
	}
	return 0
}

func (x *PersonalWorldScheduleRank) GetItem() *ScheduleRankItem {
	if x != nil {
		return x.Item
	}
	return nil
}

// 地图的基础信息
type BaseMapodePb struct {
	MapId                *int32                  `protobuf:"varint,1,opt,name=mapId" json:"mapId,omitempty"`
	X                    *int32                  `protobuf:"varint,2,opt,name=x" json:"x,omitempty"`
	Y                    *int32                  `protobuf:"varint,3,opt,name=y" json:"y,omitempty"`
	Type                 *int32                  `protobuf:"varint,4,opt,name=type" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *BaseMapodePb) Reset() {
	*x = BaseMapodePb{}
}

func (x *BaseMapodePb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseMapodePb) ProtoMessage() {}

func (x *BaseMapodePb) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[190].MessageOf(x)
}

func (m *BaseMapodePb) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[190].Methods()
}

// Deprecated: Use BaseMapodePb.ProtoReflect.Type instead.
func (*BaseMapodePb) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{190}
}

func (x *BaseMapodePb) GetMapId() int32 {
	if x != nil && x.MapId != nil {
		return *x.MapId
	}
	return 0
}

func (x *BaseMapodePb) GetX() int32 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return 0
}

func (x *BaseMapodePb) GetY() int32 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return 0
}

func (x *BaseMapodePb) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

// 地图信息
type MapNodePb struct {
	BaseNode             *BaseMapodePb           `protobuf:"bytes,1,req,name=baseNode" json:"baseNode,omitempty"`
	BanditNode           *BanditNodePb           `protobuf:"bytes,2,opt,name=banditNode" json:"banditNode,omitempty"`
	CastleNode           *CastleNodePb           `protobuf:"bytes,3,opt,name=castleNode" json:"castleNode,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *MapNodePb) Reset() {
	*x = MapNodePb{}
}

func (x *MapNodePb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapNodePb) ProtoMessage() {}

func (x *MapNodePb) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[191].MessageOf(x)
}

func (m *MapNodePb) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[191].Methods()
}

// Deprecated: Use MapNodePb.ProtoReflect.Type instead.
func (*MapNodePb) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{191}
}

func (x *MapNodePb) GetBaseNode() *BaseMapodePb {
	if x != nil {
		return x.BaseNode
	}
	return nil
}

func (x *MapNodePb) GetBanditNode() *BanditNodePb {
	if x != nil {
		return x.BanditNode
	}
	return nil
}

func (x *MapNodePb) GetCastleNode() *CastleNodePb {
	if x != nil {
		return x.CastleNode
	}
	return nil
}

// 地图上的流寇
type BanditNodePb struct {
	BanditId             *int32                  `protobuf:"varint,1,opt,name=banditId" json:"banditId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *BanditNodePb) Reset() {
	*x = BanditNodePb{}
}

func (x *BanditNodePb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BanditNodePb) ProtoMessage() {}

func (x *BanditNodePb) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[192].MessageOf(x)
}

func (m *BanditNodePb) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[192].Methods()
}

// Deprecated: Use BanditNodePb.ProtoReflect.Type instead.
func (*BanditNodePb) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{192}
}

func (x *BanditNodePb) GetBanditId() int32 {
	if x != nil && x.BanditId != nil {
		return *x.BanditId
	}
	return 0
}

// 地图上的流寇
type CastleNodePb struct {
	LordId               *int64                  `protobuf:"varint,1,opt,name=lordId" json:"lordId,omitempty"`
	Nick                 *string                 `protobuf:"bytes,2,opt,name=nick" json:"nick,omitempty"`
	Camp                 *int32                  `protobuf:"varint,3,opt,name=camp" json:"camp,omitempty"`
	Level                *int32                  `protobuf:"varint,4,opt,name=level" json:"level,omitempty"`
	Fight                *int64                  `protobuf:"varint,5,opt,name=fight" json:"fight,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *CastleNodePb) Reset() {
	*x = CastleNodePb{}
}

func (x *CastleNodePb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CastleNodePb) ProtoMessage() {}

func (x *CastleNodePb) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[193].MessageOf(x)
}

func (m *CastleNodePb) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[193].Methods()
}

// Deprecated: Use CastleNodePb.ProtoReflect.Type instead.
func (*CastleNodePb) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{193}
}

func (x *CastleNodePb) GetLordId() int64 {
	if x != nil && x.LordId != nil {
		return *x.LordId
	}
	return 0
}

func (x *CastleNodePb) GetNick() string {
	if x != nil && x.Nick != nil {
		return *x.Nick
	}
	return ""
}

func (x *CastleNodePb) GetCamp() int32 {
	if x != nil && x.Camp != nil {
		return *x.Camp
	}
	return 0
}

func (x *CastleNodePb) GetLevel() int32 {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return 0
}

func (x *CastleNodePb) GetFight() int64 {
	if x != nil && x.Fight != nil {
		return *x.Fight
	}
	return 0
}

// 部队基础信息
type BaseMapArmyPb struct {
	KeyId                *int32                  `protobuf:"varint,1,opt,name=keyId" json:"keyId,omitempty"`
	Type                 *int32                  `protobuf:"varint,2,opt,name=type" json:"type,omitempty"`
	StartX               *int32                  `protobuf:"varint,3,opt,name=startX" json:"startX,omitempty"`
	StartY               *int32                  `protobuf:"varint,4,opt,name=startY" json:"startY,omitempty"`
	EndX                 *int32                  `protobuf:"varint,5,opt,name=endX" json:"endX,omitempty"`
	EndY                 *int32                  `protobuf:"varint,6,opt,name=endY" json:"endY,omitempty"`
	State                *int32                  `protobuf:"varint,7,opt,name=state" json:"state,omitempty"`
	LordId               *int64                  `protobuf:"varint,8,opt,name=lordId" json:"lordId,omitempty"`
	TargetId             *int64                  `protobuf:"varint,9,opt,name=targetId" json:"targetId,omitempty"`
	HeroIds              []*TwoInt               `protobuf:"bytes,10,rep,name=heroIds" json:"heroIds,omitempty"`
	StartTime            *int32                  `protobuf:"varint,11,opt,name=startTime" json:"startTime,omitempty"`
	EndTime              *int32                  `protobuf:"varint,12,opt,name=endTime" json:"endTime,omitempty"`
	Camp                 *int32                  `protobuf:"varint,13,opt,name=camp" json:"camp,omitempty"`
	BattleId             *int32                  `protobuf:"varint,14,opt,name=battleId" json:"battleId,omitempty"`
	BattleTime           *int32                  `protobuf:"varint,15,opt,name=battleTime" json:"battleTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *BaseMapArmyPb) Reset() {
	*x = BaseMapArmyPb{}
}

func (x *BaseMapArmyPb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseMapArmyPb) ProtoMessage() {}

func (x *BaseMapArmyPb) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[194].MessageOf(x)
}

func (m *BaseMapArmyPb) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[194].Methods()
}

// Deprecated: Use BaseMapArmyPb.ProtoReflect.Type instead.
func (*BaseMapArmyPb) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{194}
}

func (x *BaseMapArmyPb) GetKeyId() int32 {
	if x != nil && x.KeyId != nil {
		return *x.KeyId
	}
	return 0
}

func (x *BaseMapArmyPb) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *BaseMapArmyPb) GetStartX() int32 {
	if x != nil && x.StartX != nil {
		return *x.StartX
	}
	return 0
}

func (x *BaseMapArmyPb) GetStartY() int32 {
	if x != nil && x.StartY != nil {
		return *x.StartY
	}
	return 0
}

func (x *BaseMapArmyPb) GetEndX() int32 {
	if x != nil && x.EndX != nil {
		return *x.EndX
	}
	return 0
}

func (x *BaseMapArmyPb) GetEndY() int32 {
	if x != nil && x.EndY != nil {
		return *x.EndY
	}
	return 0
}

func (x *BaseMapArmyPb) GetState() int32 {
	if x != nil && x.State != nil {
		return *x.State
	}
	return 0
}

func (x *BaseMapArmyPb) GetLordId() int64 {
	if x != nil && x.LordId != nil {
		return *x.LordId
	}
	return 0
}

func (x *BaseMapArmyPb) GetTargetId() int64 {
	if x != nil && x.TargetId != nil {
		return *x.TargetId
	}
	return 0
}

func (x *BaseMapArmyPb) GetHeroIds() []*TwoInt {
	if x != nil {
		return x.HeroIds
	}
	return nil
}

func (x *BaseMapArmyPb) GetStartTime() int32 {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return 0
}

func (x *BaseMapArmyPb) GetEndTime() int32 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

func (x *BaseMapArmyPb) GetCamp() int32 {
	if x != nil && x.Camp != nil {
		return *x.Camp
	}
	return 0
}

func (x *BaseMapArmyPb) GetBattleId() int32 {
	if x != nil && x.BattleId != nil {
		return *x.BattleId
	}
	return 0
}

func (x *BaseMapArmyPb) GetBattleTime() int32 {
	if x != nil && x.BattleTime != nil {
		return *x.BattleTime
	}
	return 0
}

// 部队信息
type MapArmyPb struct {
	BaseArmy             *BaseMapArmyPb          `protobuf:"bytes,1,req,name=baseArmy" json:"baseArmy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *MapArmyPb) Reset() {
	*x = MapArmyPb{}
}

func (x *MapArmyPb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapArmyPb) ProtoMessage() {}

func (x *MapArmyPb) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[195].MessageOf(x)
}

func (m *MapArmyPb) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[195].Methods()
}

// Deprecated: Use MapArmyPb.ProtoReflect.Type instead.
func (*MapArmyPb) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{195}
}

func (x *MapArmyPb) GetBaseArmy() *BaseMapArmyPb {
	if x != nil {
		return x.BaseArmy
	}
	return nil
}

type MapChgEventPb struct {
	EventType            *int32                  `protobuf:"varint,1,req,name=eventType" json:"eventType,omitempty"`
	CurdEvent            *int32                  `protobuf:"varint,2,req,name=curdEvent" json:"curdEvent,omitempty"`
	Pos                  *int32                  `protobuf:"varint,3,opt,name=pos" json:"pos,omitempty"`
	MapForce             *MapForce               `protobuf:"bytes,4,opt,name=mapForce" json:"mapForce,omitempty"`
	MapCity              *MapCity                `protobuf:"bytes,5,opt,name=mapCity" json:"mapCity,omitempty"`
	March                *MapLine                `protobuf:"bytes,6,opt,name=march" json:"march,omitempty"`
	AreaForce            *AreaForce              `protobuf:"bytes,7,opt,name=areaForce" json:"areaForce,omitempty"`
	AreaCity             *AreaCity               `protobuf:"bytes,8,opt,name=areaCity" json:"areaCity,omitempty"`
	ArmyLordId           *int64                  `protobuf:"varint,9,opt,name=armyLordId" json:"armyLordId,omitempty"`
	KeyId                *int32                  `protobuf:"varint,10,opt,name=keyId" json:"keyId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *MapChgEventPb) Reset() {
	*x = MapChgEventPb{}
}

func (x *MapChgEventPb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapChgEventPb) ProtoMessage() {}

func (x *MapChgEventPb) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[196].MessageOf(x)
}

func (m *MapChgEventPb) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[196].Methods()
}

// Deprecated: Use MapChgEventPb.ProtoReflect.Type instead.
func (*MapChgEventPb) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{196}
}

func (x *MapChgEventPb) GetEventType() int32 {
	if x != nil && x.EventType != nil {
		return *x.EventType
	}
	return 0
}

func (x *MapChgEventPb) GetCurdEvent() int32 {
	if x != nil && x.CurdEvent != nil {
		return *x.CurdEvent
	}
	return 0
}

func (x *MapChgEventPb) GetPos() int32 {
	if x != nil && x.Pos != nil {
		return *x.Pos
	}
	return 0
}

func (x *MapChgEventPb) GetMapForce() *MapForce {
	if x != nil {
		return x.MapForce
	}
	return nil
}

func (x *MapChgEventPb) GetMapCity() *MapCity {
	if x != nil {
		return x.MapCity
	}
	return nil
}

func (x *MapChgEventPb) GetMarch() *MapLine {
	if x != nil {
		return x.March
	}
	return nil
}

func (x *MapChgEventPb) GetAreaForce() *AreaForce {
	if x != nil {
		return x.AreaForce
	}
	return nil
}

func (x *MapChgEventPb) GetAreaCity() *AreaCity {
	if x != nil {
		return x.AreaCity
	}
	return nil
}

func (x *MapChgEventPb) GetArmyLordId() int64 {
	if x != nil && x.ArmyLordId != nil {
		return *x.ArmyLordId
	}
	return 0
}

func (x *MapChgEventPb) GetKeyId() int32 {
	if x != nil && x.KeyId != nil {
		return *x.KeyId
	}
	return 0
}

type WorldWarPlanInfoPb struct {
	Id                   *int32                  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	WorldWarType         *int32                  `protobuf:"varint,2,opt,name=worldWarType" json:"worldWarType,omitempty"`
	DisplayBegin         *int32                  `protobuf:"varint,3,opt,name=displayBegin" json:"displayBegin,omitempty"`
	BeginTime            *int32                  `protobuf:"varint,4,opt,name=beginTime" json:"beginTime,omitempty"`
	EndTime              *int32                  `protobuf:"varint,5,opt,name=endTime" json:"endTime,omitempty"`
	DisplayTime          *int32                  `protobuf:"varint,6,opt,name=displayTime" json:"displayTime,omitempty"`
	OpenWeekday          []int32                 `protobuf:"varint,7,rep,name=openWeekday" json:"openWeekday,omitempty"`
	FunctionOpen         *int32                  `protobuf:"varint,8,opt,name=functionOpen" json:"functionOpen,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *WorldWarPlanInfoPb) Reset() {
	*x = WorldWarPlanInfoPb{}
}

func (x *WorldWarPlanInfoPb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldWarPlanInfoPb) ProtoMessage() {}

func (x *WorldWarPlanInfoPb) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[197].MessageOf(x)
}

func (m *WorldWarPlanInfoPb) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[197].Methods()
}

// Deprecated: Use WorldWarPlanInfoPb.ProtoReflect.Type instead.
func (*WorldWarPlanInfoPb) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{197}
}

func (x *WorldWarPlanInfoPb) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *WorldWarPlanInfoPb) GetWorldWarType() int32 {
	if x != nil && x.WorldWarType != nil {
		return *x.WorldWarType
	}
	return 0
}

func (x *WorldWarPlanInfoPb) GetDisplayBegin() int32 {
	if x != nil && x.DisplayBegin != nil {
		return *x.DisplayBegin
	}
	return 0
}

func (x *WorldWarPlanInfoPb) GetBeginTime() int32 {
	if x != nil && x.BeginTime != nil {
		return *x.BeginTime
	}
	return 0
}

func (x *WorldWarPlanInfoPb) GetEndTime() int32 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

func (x *WorldWarPlanInfoPb) GetDisplayTime() int32 {
	if x != nil && x.DisplayTime != nil {
		return *x.DisplayTime
	}
	return 0
}

func (x *WorldWarPlanInfoPb) GetOpenWeekday() []int32 {
	if x != nil {
		return x.OpenWeekday
	}
	return nil
}

func (x *WorldWarPlanInfoPb) GetFunctionOpen() int32 {
	if x != nil && x.FunctionOpen != nil {
		return *x.FunctionOpen
	}
	return 0
}

// 地图的基础信息
type BaseMapEntiyPb struct {
	Pos                  *int32                  `protobuf:"varint,1,req,name=pos" json:"pos,omitempty"`
	EntityType           *int32                  `protobuf:"varint,2,req,name=entityType" json:"entityType,omitempty"`
	CfgId                *int32                  `protobuf:"varint,3,opt,name=cfgId" json:"cfgId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *BaseMapEntiyPb) Reset() {
	*x = BaseMapEntiyPb{}
}

func (x *BaseMapEntiyPb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseMapEntiyPb) ProtoMessage() {}

func (x *BaseMapEntiyPb) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[198].MessageOf(x)
}

func (m *BaseMapEntiyPb) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[198].Methods()
}

// Deprecated: Use BaseMapEntiyPb.ProtoReflect.Type instead.
func (*BaseMapEntiyPb) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{198}
}

func (x *BaseMapEntiyPb) GetPos() int32 {
	if x != nil && x.Pos != nil {
		return *x.Pos
	}
	return 0
}

func (x *BaseMapEntiyPb) GetEntityType() int32 {
	if x != nil && x.EntityType != nil {
		return *x.EntityType
	}
	return 0
}

func (x *BaseMapEntiyPb) GetCfgId() int32 {
	if x != nil && x.CfgId != nil {
		return *x.CfgId
	}
	return 0
}

// 矿点保存信息
type MapMinePb struct {
	Lv                   *int32                  `protobuf:"varint,1,opt,name=lv" json:"lv,omitempty"`
	MineType             *int32                  `protobuf:"varint,2,opt,name=mineType" json:"mineType,omitempty"`
	RemainRes            *int32                  `protobuf:"varint,3,opt,name=remainRes" json:"remainRes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *MapMinePb) Reset() {
	*x = MapMinePb{}
}

func (x *MapMinePb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapMinePb) ProtoMessage() {}

func (x *MapMinePb) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[199].MessageOf(x)
}

func (m *MapMinePb) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[199].Methods()
}

// Deprecated: Use MapMinePb.ProtoReflect.Type instead.
func (*MapMinePb) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{199}
}

func (x *MapMinePb) GetLv() int32 {
	if x != nil && x.Lv != nil {
		return *x.Lv
	}
	return 0
}

func (x *MapMinePb) GetMineType() int32 {
	if x != nil && x.MineType != nil {
		return *x.MineType
	}
	return 0
}

func (x *MapMinePb) GetRemainRes() int32 {
	if x != nil && x.RemainRes != nil {
		return *x.RemainRes
	}
	return 0
}

//地图上所有的物体的信息
type MapEntityPb struct {
	Base                 *BaseMapEntiyPb         `protobuf:"bytes,1,req,name=base" json:"base,omitempty"`
	City                 *City                   `protobuf:"bytes,2,opt,name=city" json:"city,omitempty"`
	Mine                 *MapMinePb              `protobuf:"bytes,3,opt,name=mine" json:"mine,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *MapEntityPb) Reset() {
	*x = MapEntityPb{}
}

func (x *MapEntityPb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapEntityPb) ProtoMessage() {}

func (x *MapEntityPb) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[200].MessageOf(x)
}

func (m *MapEntityPb) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[200].Methods()
}

// Deprecated: Use MapEntityPb.ProtoReflect.Type instead.
func (*MapEntityPb) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{200}
}

func (x *MapEntityPb) GetBase() *BaseMapEntiyPb {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *MapEntityPb) GetCity() *City {
	if x != nil {
		return x.City
	}
	return nil
}

func (x *MapEntityPb) GetMine() *MapMinePb {
	if x != nil {
		return x.Mine
	}
	return nil
}

// 世界阵营积分排行
type WorldWarIntegralRank struct {
	CampRank             []*WorldWarIntegral     `protobuf:"bytes,1,rep,name=campRank" json:"campRank,omitempty"`
	PersonalRank         *WorldWarIntegral       `protobuf:"bytes,2,opt,name=personalRank" json:"personalRank,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *WorldWarIntegralRank) Reset() {
	*x = WorldWarIntegralRank{}
}

func (x *WorldWarIntegralRank) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldWarIntegralRank) ProtoMessage() {}

func (x *WorldWarIntegralRank) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[201].MessageOf(x)
}

func (m *WorldWarIntegralRank) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[201].Methods()
}

// Deprecated: Use WorldWarIntegralRank.ProtoReflect.Type instead.
func (*WorldWarIntegralRank) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{201}
}

func (x *WorldWarIntegralRank) GetCampRank() []*WorldWarIntegral {
	if x != nil {
		return x.CampRank
	}
	return nil
}

func (x *WorldWarIntegralRank) GetPersonalRank() *WorldWarIntegral {
	if x != nil {
		return x.PersonalRank
	}
	return nil
}

// 世界阵营 积分排行
type WorldWarIntegral struct {
	Camp                 *int32                  `protobuf:"varint,1,opt,name=camp" json:"camp,omitempty"`
	LordId               *int64                  `protobuf:"varint,2,opt,name=lordId" json:"lordId,omitempty"`
	Nick                 *string                 `protobuf:"bytes,3,opt,name=nick" json:"nick,omitempty"`
	Value                *int32                  `protobuf:"varint,4,opt,name=value" json:"value,omitempty"`
	Ranking              *int32                  `protobuf:"varint,5,opt,name=ranking" json:"ranking,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *WorldWarIntegral) Reset() {
	*x = WorldWarIntegral{}
}

func (x *WorldWarIntegral) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldWarIntegral) ProtoMessage() {}

func (x *WorldWarIntegral) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[202].MessageOf(x)
}

func (m *WorldWarIntegral) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[202].Methods()
}

// Deprecated: Use WorldWarIntegral.ProtoReflect.Type instead.
func (*WorldWarIntegral) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{202}
}

func (x *WorldWarIntegral) GetCamp() int32 {
	if x != nil && x.Camp != nil {
		return *x.Camp
	}
	return 0
}

func (x *WorldWarIntegral) GetLordId() int64 {
	if x != nil && x.LordId != nil {
		return *x.LordId
	}
	return 0
}

func (x *WorldWarIntegral) GetNick() string {
	if x != nil && x.Nick != nil {
		return *x.Nick
	}
	return ""
}

func (x *WorldWarIntegral) GetValue() int32 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

func (x *WorldWarIntegral) GetRanking() int32 {
	if x != nil && x.Ranking != nil {
		return *x.Ranking
	}
	return 0
}

// 世界阵营 城市征战
type WorldWarAttackCity struct {
	CampIntegral         *int32                  `protobuf:"varint,1,opt,name=campIntegral" json:"campIntegral,omitempty"`
	PersonalIntegral     *int32                  `protobuf:"varint,2,opt,name=personalIntegral" json:"personalIntegral,omitempty"`
	Status               []*TwoInt               `protobuf:"bytes,3,rep,name=status" json:"status,omitempty"`
	Tips                 *int32                  `protobuf:"varint,4,opt,name=tips" json:"tips,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *WorldWarAttackCity) Reset() {
	*x = WorldWarAttackCity{}
}

func (x *WorldWarAttackCity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldWarAttackCity) ProtoMessage() {}

func (x *WorldWarAttackCity) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[203].MessageOf(x)
}

func (m *WorldWarAttackCity) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[203].Methods()
}

// Deprecated: Use WorldWarAttackCity.ProtoReflect.Type instead.
func (*WorldWarAttackCity) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{203}
}

func (x *WorldWarAttackCity) GetCampIntegral() int32 {
	if x != nil && x.CampIntegral != nil {
		return *x.CampIntegral
	}
	return 0
}

func (x *WorldWarAttackCity) GetPersonalIntegral() int32 {
	if x != nil && x.PersonalIntegral != nil {
		return *x.PersonalIntegral
	}
	return 0
}

func (x *WorldWarAttackCity) GetStatus() []*TwoInt {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *WorldWarAttackCity) GetTips() int32 {
	if x != nil && x.Tips != nil {
		return *x.Tips
	}
	return 0
}

// 世界阵营 赛季商店
type WorldWarSeasonShop struct {
	Status               []*TwoInt               `protobuf:"bytes,1,rep,name=status" json:"status,omitempty"`
	Exchange             *int32                  `protobuf:"varint,2,opt,name=exchange" json:"exchange,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *WorldWarSeasonShop) Reset() {
	*x = WorldWarSeasonShop{}
}

func (x *WorldWarSeasonShop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldWarSeasonShop) ProtoMessage() {}

func (x *WorldWarSeasonShop) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[204].MessageOf(x)
}

func (m *WorldWarSeasonShop) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[204].Methods()
}

// Deprecated: Use WorldWarSeasonShop.ProtoReflect.Type instead.
func (*WorldWarSeasonShop) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{204}
}

func (x *WorldWarSeasonShop) GetStatus() []*TwoInt {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *WorldWarSeasonShop) GetExchange() int32 {
	if x != nil && x.Exchange != nil {
		return *x.Exchange
	}
	return 0
}

type SignInfo struct {
	Time                 *int32                  `protobuf:"varint,1,req,name=time" json:"time,omitempty"`
	SignIn               *int32                  `protobuf:"varint,2,req,name=signIn" json:"signIn,omitempty"`
	DoubleReward         *int32                  `protobuf:"varint,3,req,name=doubleReward" json:"doubleReward,omitempty"`
	Level                *int32                  `protobuf:"varint,4,req,name=level" json:"level,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SignInfo) Reset() {
	*x = SignInfo{}
}

func (x *SignInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignInfo) ProtoMessage() {}

func (x *SignInfo) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[205].MessageOf(x)
}

func (m *SignInfo) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[205].Methods()
}

// Deprecated: Use SignInfo.ProtoReflect.Type instead.
func (*SignInfo) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{205}
}

func (x *SignInfo) GetTime() int32 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return 0
}

func (x *SignInfo) GetSignIn() int32 {
	if x != nil && x.SignIn != nil {
		return *x.SignIn
	}
	return 0
}

func (x *SignInfo) GetDoubleReward() int32 {
	if x != nil && x.DoubleReward != nil {
		return *x.DoubleReward
	}
	return 0
}

func (x *SignInfo) GetLevel() int32 {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return 0
}

// 积分排行
type IntegralRank struct {
	Camp                 *int32                  `protobuf:"varint,1,opt,name=camp" json:"camp,omitempty"`
	LordId               *int64                  `protobuf:"varint,2,opt,name=lordId" json:"lordId,omitempty"`
	Nick                 *string                 `protobuf:"bytes,3,opt,name=nick" json:"nick,omitempty"`
	Value                *int64                  `protobuf:"varint,4,opt,name=value" json:"value,omitempty"`
	Ranking              *int32                  `protobuf:"varint,5,opt,name=ranking" json:"ranking,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *IntegralRank) Reset() {
	*x = IntegralRank{}
}

func (x *IntegralRank) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntegralRank) ProtoMessage() {}

func (x *IntegralRank) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[206].MessageOf(x)
}

func (m *IntegralRank) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[206].Methods()
}

// Deprecated: Use IntegralRank.ProtoReflect.Type instead.
func (*IntegralRank) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{206}
}

func (x *IntegralRank) GetCamp() int32 {
	if x != nil && x.Camp != nil {
		return *x.Camp
	}
	return 0
}

func (x *IntegralRank) GetLordId() int64 {
	if x != nil && x.LordId != nil {
		return *x.LordId
	}
	return 0
}

func (x *IntegralRank) GetNick() string {
	if x != nil && x.Nick != nil {
		return *x.Nick
	}
	return ""
}

func (x *IntegralRank) GetValue() int64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

func (x *IntegralRank) GetRanking() int32 {
	if x != nil && x.Ranking != nil {
		return *x.Ranking
	}
	return 0
}

//-------------------------跨服使用---------------------------------
// 跨服buff
type CrossBuff struct {
	StartTime            *int32                  `protobuf:"varint,1,opt,name=startTime" json:"startTime,omitempty"`
	EndTime              *int32                  `protobuf:"varint,2,opt,name=endTime" json:"endTime,omitempty"`
	Lv                   *int32                  `protobuf:"varint,3,req,name=lv" json:"lv,omitempty"`
	Type                 *int32                  `protobuf:"varint,4,req,name=type" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *CrossBuff) Reset() {
	*x = CrossBuff{}
}

func (x *CrossBuff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrossBuff) ProtoMessage() {}

func (x *CrossBuff) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[207].MessageOf(x)
}

func (m *CrossBuff) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[207].Methods()
}

// Deprecated: Use CrossBuff.ProtoReflect.Type instead.
func (*CrossBuff) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{207}
}

func (x *CrossBuff) GetStartTime() int32 {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return 0
}

func (x *CrossBuff) GetEndTime() int32 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

func (x *CrossBuff) GetLv() int32 {
	if x != nil && x.Lv != nil {
		return *x.Lv
	}
	return 0
}

func (x *CrossBuff) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

// 跨服使用
type CrossLordPb struct {
	LordId               *int64                  `protobuf:"varint,1,opt,name=lordId" json:"lordId,omitempty"`
	Nick                 *string                 `protobuf:"bytes,2,opt,name=nick" json:"nick,omitempty"`
	Portrait             *int32                  `protobuf:"varint,3,opt,name=portrait" json:"portrait,omitempty"`
	Area                 *int32                  `protobuf:"varint,4,opt,name=area" json:"area,omitempty"`
	Camp                 *int32                  `protobuf:"varint,5,opt,name=camp" json:"camp,omitempty"`
	Level                *int32                  `protobuf:"varint,6,opt,name=level" json:"level,omitempty"`
	Vip                  *int32                  `protobuf:"varint,7,opt,name=vip" json:"vip,omitempty"`
	Fight                *int64                  `protobuf:"varint,8,opt,name=fight" json:"fight,omitempty"`
	Job                  *int32                  `protobuf:"varint,9,opt,name=job" json:"job,omitempty"`
	ServerId             *int32                  `protobuf:"varint,10,opt,name=serverId" json:"serverId,omitempty"`
	Rank                 *int32                  `protobuf:"varint,11,opt,name=rank" json:"rank,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *CrossLordPb) Reset() {
	*x = CrossLordPb{}
}

func (x *CrossLordPb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrossLordPb) ProtoMessage() {}

func (x *CrossLordPb) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[208].MessageOf(x)
}

func (m *CrossLordPb) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[208].Methods()
}

// Deprecated: Use CrossLordPb.ProtoReflect.Type instead.
func (*CrossLordPb) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{208}
}

func (x *CrossLordPb) GetLordId() int64 {
	if x != nil && x.LordId != nil {
		return *x.LordId
	}
	return 0
}

func (x *CrossLordPb) GetNick() string {
	if x != nil && x.Nick != nil {
		return *x.Nick
	}
	return ""
}

func (x *CrossLordPb) GetPortrait() int32 {
	if x != nil && x.Portrait != nil {
		return *x.Portrait
	}
	return 0
}

func (x *CrossLordPb) GetArea() int32 {
	if x != nil && x.Area != nil {
		return *x.Area
	}
	return 0
}

func (x *CrossLordPb) GetCamp() int32 {
	if x != nil && x.Camp != nil {
		return *x.Camp
	}
	return 0
}

func (x *CrossLordPb) GetLevel() int32 {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return 0
}

func (x *CrossLordPb) GetVip() int32 {
	if x != nil && x.Vip != nil {
		return *x.Vip
	}
	return 0
}

func (x *CrossLordPb) GetFight() int64 {
	if x != nil && x.Fight != nil {
		return *x.Fight
	}
	return 0
}

func (x *CrossLordPb) GetJob() int32 {
	if x != nil && x.Job != nil {
		return *x.Job
	}
	return 0
}

func (x *CrossLordPb) GetServerId() int32 {
	if x != nil && x.ServerId != nil {
		return *x.ServerId
	}
	return 0
}

func (x *CrossLordPb) GetRank() int32 {
	if x != nil && x.Rank != nil {
		return *x.Rank
	}
	return 0
}

type CrossPlanePb struct {
	PlaneId              *int32                  `protobuf:"varint,1,opt,name=planeId" json:"planeId,omitempty"`
	Level                *int32                  `protobuf:"varint,2,opt,name=level" json:"level,omitempty"`
	BattlePos            *int32                  `protobuf:"varint,3,opt,name=battlePos" json:"battlePos,omitempty"`
	EnterSkillId         *int32                  `protobuf:"varint,4,opt,name=enterSkillId" json:"enterSkillId,omitempty"`
	MentorSkillId        *int32                  `protobuf:"varint,5,opt,name=mentorSkillId" json:"mentorSkillId,omitempty"`
	MentorSkillCnt       *int32                  `protobuf:"varint,6,opt,name=mentorSkillCnt" json:"mentorSkillCnt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *CrossPlanePb) Reset() {
	*x = CrossPlanePb{}
}

func (x *CrossPlanePb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrossPlanePb) ProtoMessage() {}

func (x *CrossPlanePb) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[209].MessageOf(x)
}

func (m *CrossPlanePb) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[209].Methods()
}

// Deprecated: Use CrossPlanePb.ProtoReflect.Type instead.
func (*CrossPlanePb) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{209}
}

func (x *CrossPlanePb) GetPlaneId() int32 {
	if x != nil && x.PlaneId != nil {
		return *x.PlaneId
	}
	return 0
}

func (x *CrossPlanePb) GetLevel() int32 {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return 0
}

func (x *CrossPlanePb) GetBattlePos() int32 {
	if x != nil && x.BattlePos != nil {
		return *x.BattlePos
	}
	return 0
}

func (x *CrossPlanePb) GetEnterSkillId() int32 {
	if x != nil && x.EnterSkillId != nil {
		return *x.EnterSkillId
	}
	return 0
}

func (x *CrossPlanePb) GetMentorSkillId() int32 {
	if x != nil && x.MentorSkillId != nil {
		return *x.MentorSkillId
	}
	return 0
}

func (x *CrossPlanePb) GetMentorSkillCnt() int32 {
	if x != nil && x.MentorSkillCnt != nil {
		return *x.MentorSkillCnt
	}
	return 0
}

type CrossMedalPb struct {
	MedalId              *int32                  `protobuf:"varint,1,opt,name=medalId" json:"medalId,omitempty"`
	HeroId               *int32                  `protobuf:"varint,2,opt,name=heroId" json:"heroId,omitempty"`
	SpecialSkillId       *int32                  `protobuf:"varint,3,opt,name=specialSkillId" json:"specialSkillId,omitempty"`
	AuraSkillId          *int32                  `protobuf:"varint,4,opt,name=auraSkillId" json:"auraSkillId,omitempty"`
	LastTime             *int32                  `protobuf:"varint,5,opt,name=lastTime" json:"lastTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *CrossMedalPb) Reset() {
	*x = CrossMedalPb{}
}

func (x *CrossMedalPb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrossMedalPb) ProtoMessage() {}

func (x *CrossMedalPb) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[210].MessageOf(x)
}

func (m *CrossMedalPb) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[210].Methods()
}

// Deprecated: Use CrossMedalPb.ProtoReflect.Type instead.
func (*CrossMedalPb) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{210}
}

func (x *CrossMedalPb) GetMedalId() int32 {
	if x != nil && x.MedalId != nil {
		return *x.MedalId
	}
	return 0
}

func (x *CrossMedalPb) GetHeroId() int32 {
	if x != nil && x.HeroId != nil {
		return *x.HeroId
	}
	return 0
}

func (x *CrossMedalPb) GetSpecialSkillId() int32 {
	if x != nil && x.SpecialSkillId != nil {
		return *x.SpecialSkillId
	}
	return 0
}

func (x *CrossMedalPb) GetAuraSkillId() int32 {
	if x != nil && x.AuraSkillId != nil {
		return *x.AuraSkillId
	}
	return 0
}

func (x *CrossMedalPb) GetLastTime() int32 {
	if x != nil && x.LastTime != nil {
		return *x.LastTime
	}
	return 0
}

type CrossHeroPb struct {
	LordId               *int64                  `protobuf:"varint,1,opt,name=lordId" json:"lordId,omitempty"`
	HeroId               *int32                  `protobuf:"varint,2,opt,name=heroId" json:"heroId,omitempty"`
	HeroType             *int32                  `protobuf:"varint,3,opt,name=heroType" json:"heroType,omitempty"`
	Level                *int32                  `protobuf:"varint,4,opt,name=level" json:"level,omitempty"`
	Decorated            *int32                  `protobuf:"varint,5,opt,name=decorated" json:"decorated,omitempty"`
	Count                *int32                  `protobuf:"varint,6,opt,name=count" json:"count,omitempty"`
	Line                 *int32                  `protobuf:"varint,7,opt,name=line" json:"line,omitempty"`
	Lead                 *int32                  `protobuf:"varint,8,opt,name=lead" json:"lead,omitempty"`
	Attr                 []*TwoInt               `protobuf:"bytes,9,rep,name=attr" json:"attr,omitempty"`
	IntensifyLv          *int32                  `protobuf:"varint,10,opt,name=intensifyLv" json:"intensifyLv,omitempty"`
	Restrain             *int32                  `protobuf:"varint,11,opt,name=restrain" json:"restrain,omitempty"`
	PlaneList            []*CrossPlanePb         `protobuf:"bytes,12,rep,name=planeList" json:"planeList,omitempty"`
	Medal                *CrossMedalPb           `protobuf:"bytes,13,opt,name=medal" json:"medal,omitempty"`
	Status               *int32                  `protobuf:"varint,14,opt,name=status" json:"status,omitempty"`
	Pos                  *int32                  `protobuf:"varint,15,opt,name=pos" json:"pos,omitempty"`
	AcqPos               *int32                  `protobuf:"varint,16,opt,name=acqPos" json:"acqPos,omitempty"`
	DefPos               *int32                  `protobuf:"varint,17,opt,name=defPos" json:"defPos,omitempty"`
	WallPos              *int32                  `protobuf:"varint,18,opt,name=wallPos" json:"wallPos,omitempty"`
	State                *int32                  `protobuf:"varint,19,opt,name=state" json:"state,omitempty"`
	RevivalCnt           *int32                  `protobuf:"varint,20,opt,name=revivalCnt" json:"revivalCnt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *CrossHeroPb) Reset() {
	*x = CrossHeroPb{}
}

func (x *CrossHeroPb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrossHeroPb) ProtoMessage() {}

func (x *CrossHeroPb) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[211].MessageOf(x)
}

func (m *CrossHeroPb) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[211].Methods()
}

// Deprecated: Use CrossHeroPb.ProtoReflect.Type instead.
func (*CrossHeroPb) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{211}
}

func (x *CrossHeroPb) GetLordId() int64 {
	if x != nil && x.LordId != nil {
		return *x.LordId
	}
	return 0
}

func (x *CrossHeroPb) GetHeroId() int32 {
	if x != nil && x.HeroId != nil {
		return *x.HeroId
	}
	return 0
}

func (x *CrossHeroPb) GetHeroType() int32 {
	if x != nil && x.HeroType != nil {
		return *x.HeroType
	}
	return 0
}

func (x *CrossHeroPb) GetLevel() int32 {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return 0
}

func (x *CrossHeroPb) GetDecorated() int32 {
	if x != nil && x.Decorated != nil {
		return *x.Decorated
	}
	return 0
}

func (x *CrossHeroPb) GetCount() int32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *CrossHeroPb) GetLine() int32 {
	if x != nil && x.Line != nil {
		return *x.Line
	}
	return 0
}

func (x *CrossHeroPb) GetLead() int32 {
	if x != nil && x.Lead != nil {
		return *x.Lead
	}
	return 0
}

func (x *CrossHeroPb) GetAttr() []*TwoInt {
	if x != nil {
		return x.Attr
	}
	return nil
}

func (x *CrossHeroPb) GetIntensifyLv() int32 {
	if x != nil && x.IntensifyLv != nil {
		return *x.IntensifyLv
	}
	return 0
}

func (x *CrossHeroPb) GetRestrain() int32 {
	if x != nil && x.Restrain != nil {
		return *x.Restrain
	}
	return 0
}

func (x *CrossHeroPb) GetPlaneList() []*CrossPlanePb {
	if x != nil {
		return x.PlaneList
	}
	return nil
}

func (x *CrossHeroPb) GetMedal() *CrossMedalPb {
	if x != nil {
		return x.Medal
	}
	return nil
}

func (x *CrossHeroPb) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *CrossHeroPb) GetPos() int32 {
	if x != nil && x.Pos != nil {
		return *x.Pos
	}
	return 0
}

func (x *CrossHeroPb) GetAcqPos() int32 {
	if x != nil && x.AcqPos != nil {
		return *x.AcqPos
	}
	return 0
}

func (x *CrossHeroPb) GetDefPos() int32 {
	if x != nil && x.DefPos != nil {
		return *x.DefPos
	}
	return 0
}

func (x *CrossHeroPb) GetWallPos() int32 {
	if x != nil && x.WallPos != nil {
		return *x.WallPos
	}
	return 0
}

func (x *CrossHeroPb) GetState() int32 {
	if x != nil && x.State != nil {
		return *x.State
	}
	return 0
}

func (x *CrossHeroPb) GetRevivalCnt() int32 {
	if x != nil && x.RevivalCnt != nil {
		return *x.RevivalCnt
	}
	return 0
}

type CrossHeroAllPb struct {
	Heros                []*CrossHeroPb          `protobuf:"bytes,1,rep,name=heros" json:"heros,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *CrossHeroAllPb) Reset() {
	*x = CrossHeroAllPb{}
}

func (x *CrossHeroAllPb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrossHeroAllPb) ProtoMessage() {}

func (x *CrossHeroAllPb) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[212].MessageOf(x)
}

func (m *CrossHeroAllPb) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[212].Methods()
}

// Deprecated: Use CrossHeroAllPb.ProtoReflect.Type instead.
func (*CrossHeroAllPb) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{212}
}

func (x *CrossHeroAllPb) GetHeros() []*CrossHeroPb {
	if x != nil {
		return x.Heros
	}
	return nil
}

type CrossWallNpcPb struct {
	Id                   *int32                  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	WallHeroLevelId      *int32                  `protobuf:"varint,2,opt,name=wallHeroLevelId" json:"wallHeroLevelId,omitempty"`
	NpcId                *int32                  `protobuf:"varint,3,opt,name=npcId" json:"npcId,omitempty"`
	NpcLevel             *int32                  `protobuf:"varint,4,opt,name=npcLevel" json:"npcLevel,omitempty"`
	Count                *int32                  `protobuf:"varint,5,opt,name=count" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *CrossWallNpcPb) Reset() {
	*x = CrossWallNpcPb{}
}

func (x *CrossWallNpcPb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrossWallNpcPb) ProtoMessage() {}

func (x *CrossWallNpcPb) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[213].MessageOf(x)
}

func (m *CrossWallNpcPb) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[213].Methods()
}

// Deprecated: Use CrossWallNpcPb.ProtoReflect.Type instead.
func (*CrossWallNpcPb) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{213}
}

func (x *CrossWallNpcPb) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *CrossWallNpcPb) GetWallHeroLevelId() int32 {
	if x != nil && x.WallHeroLevelId != nil {
		return *x.WallHeroLevelId
	}
	return 0
}

func (x *CrossWallNpcPb) GetNpcId() int32 {
	if x != nil && x.NpcId != nil {
		return *x.NpcId
	}
	return 0
}

func (x *CrossWallNpcPb) GetNpcLevel() int32 {
	if x != nil && x.NpcLevel != nil {
		return *x.NpcLevel
	}
	return 0
}

func (x *CrossWallNpcPb) GetCount() int32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

type CrossWallNpcAllPb struct {
	Walls                []*CrossWallNpcPb       `protobuf:"bytes,1,rep,name=walls" json:"walls,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *CrossWallNpcAllPb) Reset() {
	*x = CrossWallNpcAllPb{}
}

func (x *CrossWallNpcAllPb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrossWallNpcAllPb) ProtoMessage() {}

func (x *CrossWallNpcAllPb) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[214].MessageOf(x)
}

func (m *CrossWallNpcAllPb) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[214].Methods()
}

// Deprecated: Use CrossWallNpcAllPb.ProtoReflect.Type instead.
func (*CrossWallNpcAllPb) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{214}
}

func (x *CrossWallNpcAllPb) GetWalls() []*CrossWallNpcPb {
	if x != nil {
		return x.Walls
	}
	return nil
}

type CrossResourcePb struct {
	Food                 *int64                  `protobuf:"varint,1,opt,name=food" json:"food,omitempty"`
	Elec                 *int64                  `protobuf:"varint,2,opt,name=elec" json:"elec,omitempty"`
	Oil                  *int64                  `protobuf:"varint,3,opt,name=oil" json:"oil,omitempty"`
	Ore                  *int64                  `protobuf:"varint,4,opt,name=ore" json:"ore,omitempty"`
	Human                *int64                  `protobuf:"varint,5,opt,name=human" json:"human,omitempty"`
	FoodLost             *int64                  `protobuf:"varint,6,opt,name=foodLost" json:"foodLost,omitempty"`
	ElecLost             *int64                  `protobuf:"varint,7,opt,name=elecLost" json:"elecLost,omitempty"`
	OilLost              *int64                  `protobuf:"varint,8,opt,name=oilLost" json:"oilLost,omitempty"`
	Rate                 *float32                `protobuf:"fixed32,9,opt,name=rate" json:"rate,omitempty"`
	Arm1                 *int32                  `protobuf:"varint,10,opt,name=arm1" json:"arm1,omitempty"`
	Arm2                 *int32                  `protobuf:"varint,11,opt,name=arm2" json:"arm2,omitempty"`
	Arm3                 *int32                  `protobuf:"varint,12,opt,name=arm3" json:"arm3,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *CrossResourcePb) Reset() {
	*x = CrossResourcePb{}
}

func (x *CrossResourcePb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrossResourcePb) ProtoMessage() {}

func (x *CrossResourcePb) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[215].MessageOf(x)
}

func (m *CrossResourcePb) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[215].Methods()
}

// Deprecated: Use CrossResourcePb.ProtoReflect.Type instead.
func (*CrossResourcePb) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{215}
}

func (x *CrossResourcePb) GetFood() int64 {
	if x != nil && x.Food != nil {
		return *x.Food
	}
	return 0
}

func (x *CrossResourcePb) GetElec() int64 {
	if x != nil && x.Elec != nil {
		return *x.Elec
	}
	return 0
}

func (x *CrossResourcePb) GetOil() int64 {
	if x != nil && x.Oil != nil {
		return *x.Oil
	}
	return 0
}

func (x *CrossResourcePb) GetOre() int64 {
	if x != nil && x.Ore != nil {
		return *x.Ore
	}
	return 0
}

func (x *CrossResourcePb) GetHuman() int64 {
	if x != nil && x.Human != nil {
		return *x.Human
	}
	return 0
}

func (x *CrossResourcePb) GetFoodLost() int64 {
	if x != nil && x.FoodLost != nil {
		return *x.FoodLost
	}
	return 0
}

func (x *CrossResourcePb) GetElecLost() int64 {
	if x != nil && x.ElecLost != nil {
		return *x.ElecLost
	}
	return 0
}

func (x *CrossResourcePb) GetOilLost() int64 {
	if x != nil && x.OilLost != nil {
		return *x.OilLost
	}
	return 0
}

func (x *CrossResourcePb) GetRate() float32 {
	if x != nil && x.Rate != nil {
		return *x.Rate
	}
	return 0
}

func (x *CrossResourcePb) GetArm1() int32 {
	if x != nil && x.Arm1 != nil {
		return *x.Arm1
	}
	return 0
}

func (x *CrossResourcePb) GetArm2() int32 {
	if x != nil && x.Arm2 != nil {
		return *x.Arm2
	}
	return 0
}

func (x *CrossResourcePb) GetArm3() int32 {
	if x != nil && x.Arm3 != nil {
		return *x.Arm3
	}
	return 0
}

type CrossPlayerPb struct {
	CrossLord            *CrossLordPb            `protobuf:"bytes,1,opt,name=crossLord" json:"crossLord,omitempty"`
	CrossResource        *CrossResourcePb        `protobuf:"bytes,2,opt,name=crossResource" json:"crossResource,omitempty"`
	Heros                *CrossHeroAllPb         `protobuf:"bytes,3,opt,name=heros" json:"heros,omitempty"`
	Walls                *CrossWallNpcAllPb      `protobuf:"bytes,4,opt,name=walls" json:"walls,omitempty"`
	EffectList           []*Effect               `protobuf:"bytes,5,rep,name=effectList" json:"effectList,omitempty"`
	OtherList            []*IntDouble            `protobuf:"bytes,6,rep,name=otherList" json:"otherList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *CrossPlayerPb) Reset() {
	*x = CrossPlayerPb{}
}

func (x *CrossPlayerPb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrossPlayerPb) ProtoMessage() {}

func (x *CrossPlayerPb) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[216].MessageOf(x)
}

func (m *CrossPlayerPb) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[216].Methods()
}

// Deprecated: Use CrossPlayerPb.ProtoReflect.Type instead.
func (*CrossPlayerPb) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{216}
}

func (x *CrossPlayerPb) GetCrossLord() *CrossLordPb {
	if x != nil {
		return x.CrossLord
	}
	return nil
}

func (x *CrossPlayerPb) GetCrossResource() *CrossResourcePb {
	if x != nil {
		return x.CrossResource
	}
	return nil
}

func (x *CrossPlayerPb) GetHeros() *CrossHeroAllPb {
	if x != nil {
		return x.Heros
	}
	return nil
}

func (x *CrossPlayerPb) GetWalls() *CrossWallNpcAllPb {
	if x != nil {
		return x.Walls
	}
	return nil
}

func (x *CrossPlayerPb) GetEffectList() []*Effect {
	if x != nil {
		return x.EffectList
	}
	return nil
}

func (x *CrossPlayerPb) GetOtherList() []*IntDouble {
	if x != nil {
		return x.OtherList
	}
	return nil
}

// 堡垒信息
type FortressPb struct {
	Id                   *int32                  `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	AtkCnt               *int32                  `protobuf:"varint,2,opt,name=atkCnt" json:"atkCnt,omitempty"`
	DefCnt               *int32                  `protobuf:"varint,3,opt,name=defCnt" json:"defCnt,omitempty"`
	Camp                 *int32                  `protobuf:"varint,4,opt,name=camp" json:"camp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *FortressPb) Reset() {
	*x = FortressPb{}
}

func (x *FortressPb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FortressPb) ProtoMessage() {}

func (x *FortressPb) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[217].MessageOf(x)
}

func (m *FortressPb) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[217].Methods()
}

// Deprecated: Use FortressPb.ProtoReflect.Type instead.
func (*FortressPb) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{217}
}

func (x *FortressPb) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *FortressPb) GetAtkCnt() int32 {
	if x != nil && x.AtkCnt != nil {
		return *x.AtkCnt
	}
	return 0
}

func (x *FortressPb) GetDefCnt() int32 {
	if x != nil && x.DefCnt != nil {
		return *x.DefCnt
	}
	return 0
}

func (x *FortressPb) GetCamp() int32 {
	if x != nil && x.Camp != nil {
		return *x.Camp
	}
	return 0
}

// 堡垒中将领的信息
type FortHeroPb struct {
	HeroId               *int32                  `protobuf:"varint,1,req,name=heroId" json:"heroId,omitempty"`
	Count                *int32                  `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	RevivalTime          *int32                  `protobuf:"varint,3,opt,name=revivalTime" json:"revivalTime,omitempty"`
	State                *int32                  `protobuf:"varint,4,opt,name=state" json:"state,omitempty"`
	FortId               *int32                  `protobuf:"varint,5,opt,name=fortId" json:"fortId,omitempty"`
	RevivalCnt           *int32                  `protobuf:"varint,6,opt,name=revivalCnt" json:"revivalCnt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *FortHeroPb) Reset() {
	*x = FortHeroPb{}
}

func (x *FortHeroPb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FortHeroPb) ProtoMessage() {}

func (x *FortHeroPb) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[218].MessageOf(x)
}

func (m *FortHeroPb) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[218].Methods()
}

// Deprecated: Use FortHeroPb.ProtoReflect.Type instead.
func (*FortHeroPb) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{218}
}

func (x *FortHeroPb) GetHeroId() int32 {
	if x != nil && x.HeroId != nil {
		return *x.HeroId
	}
	return 0
}

func (x *FortHeroPb) GetCount() int32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *FortHeroPb) GetRevivalTime() int32 {
	if x != nil && x.RevivalTime != nil {
		return *x.RevivalTime
	}
	return 0
}

func (x *FortHeroPb) GetState() int32 {
	if x != nil && x.State != nil {
		return *x.State
	}
	return 0
}

func (x *FortHeroPb) GetFortId() int32 {
	if x != nil && x.FortId != nil {
		return *x.FortId
	}
	return 0
}

func (x *FortHeroPb) GetRevivalCnt() int32 {
	if x != nil && x.RevivalCnt != nil {
		return *x.RevivalCnt
	}
	return 0
}

// 跨服与游戏服资源同步使用
type CrossAwardPb struct {
	Award                []*Award                `protobuf:"bytes,1,rep,name=award" json:"award,omitempty"`
	IsAdd                *bool                   `protobuf:"varint,2,opt,name=isAdd" json:"isAdd,omitempty"`
	From                 *int32                  `protobuf:"varint,3,opt,name=from" json:"from,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *CrossAwardPb) Reset() {
	*x = CrossAwardPb{}
}

func (x *CrossAwardPb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrossAwardPb) ProtoMessage() {}

func (x *CrossAwardPb) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[219].MessageOf(x)
}

func (m *CrossAwardPb) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[219].Methods()
}

// Deprecated: Use CrossAwardPb.ProtoReflect.Type instead.
func (*CrossAwardPb) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{219}
}

func (x *CrossAwardPb) GetAward() []*Award {
	if x != nil {
		return x.Award
	}
	return nil
}

func (x *CrossAwardPb) GetIsAdd() bool {
	if x != nil && x.IsAdd != nil {
		return *x.IsAdd
	}
	return false
}

func (x *CrossAwardPb) GetFrom() int32 {
	if x != nil && x.From != nil {
		return *x.From
	}
	return 0
}

// 跨服战将领信息
type CrossWarRptMan struct {
	RoleId               *int64                  `protobuf:"varint,1,opt,name=roleId" json:"roleId,omitempty"`
	SelfServerId         *int32                  `protobuf:"varint,2,opt,name=selfServerId" json:"selfServerId,omitempty"`
	MainServerId         *int32                  `protobuf:"varint,3,opt,name=mainServerId" json:"mainServerId,omitempty"`
	Nick                 *string                 `protobuf:"bytes,4,opt,name=nick" json:"nick,omitempty"`
	HeroId               *int32                  `protobuf:"varint,5,opt,name=heroId" json:"heroId,omitempty"`
	Camp                 *int32                  `protobuf:"varint,6,opt,name=camp" json:"camp,omitempty"`
	Lost                 *int32                  `protobuf:"varint,7,opt,name=lost" json:"lost,omitempty"`
	IsNpc                *bool                   `protobuf:"varint,8,opt,name=isNpc" json:"isNpc,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *CrossWarRptMan) Reset() {
	*x = CrossWarRptMan{}
}

func (x *CrossWarRptMan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrossWarRptMan) ProtoMessage() {}

func (x *CrossWarRptMan) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[220].MessageOf(x)
}

func (m *CrossWarRptMan) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[220].Methods()
}

// Deprecated: Use CrossWarRptMan.ProtoReflect.Type instead.
func (*CrossWarRptMan) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{220}
}

func (x *CrossWarRptMan) GetRoleId() int64 {
	if x != nil && x.RoleId != nil {
		return *x.RoleId
	}
	return 0
}

func (x *CrossWarRptMan) GetSelfServerId() int32 {
	if x != nil && x.SelfServerId != nil {
		return *x.SelfServerId
	}
	return 0
}

func (x *CrossWarRptMan) GetMainServerId() int32 {
	if x != nil && x.MainServerId != nil {
		return *x.MainServerId
	}
	return 0
}

func (x *CrossWarRptMan) GetNick() string {
	if x != nil && x.Nick != nil {
		return *x.Nick
	}
	return ""
}

func (x *CrossWarRptMan) GetHeroId() int32 {
	if x != nil && x.HeroId != nil {
		return *x.HeroId
	}
	return 0
}

func (x *CrossWarRptMan) GetCamp() int32 {
	if x != nil && x.Camp != nil {
		return *x.Camp
	}
	return 0
}

func (x *CrossWarRptMan) GetLost() int32 {
	if x != nil && x.Lost != nil {
		return *x.Lost
	}
	return 0
}

func (x *CrossWarRptMan) GetIsNpc() bool {
	if x != nil && x.IsNpc != nil {
		return *x.IsNpc
	}
	return false
}

//跨服战的战报
type CrossWarReport struct {
	AtkMan               *CrossWarRptMan         `protobuf:"bytes,1,opt,name=atkMan" json:"atkMan,omitempty"`
	DefMan               *CrossWarRptMan         `protobuf:"bytes,2,opt,name=defMan" json:"defMan,omitempty"`
	IsWin                *bool                   `protobuf:"varint,3,opt,name=isWin" json:"isWin,omitempty"`
	Time                 *int32                  `protobuf:"varint,4,opt,name=time" json:"time,omitempty"`
	FortId               *int32                  `protobuf:"varint,5,opt,name=fortId" json:"fortId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *CrossWarReport) Reset() {
	*x = CrossWarReport{}
}

func (x *CrossWarReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrossWarReport) ProtoMessage() {}

func (x *CrossWarReport) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[221].MessageOf(x)
}

func (m *CrossWarReport) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[221].Methods()
}

// Deprecated: Use CrossWarReport.ProtoReflect.Type instead.
func (*CrossWarReport) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{221}
}

func (x *CrossWarReport) GetAtkMan() *CrossWarRptMan {
	if x != nil {
		return x.AtkMan
	}
	return nil
}

func (x *CrossWarReport) GetDefMan() *CrossWarRptMan {
	if x != nil {
		return x.DefMan
	}
	return nil
}

func (x *CrossWarReport) GetIsWin() bool {
	if x != nil && x.IsWin != nil {
		return *x.IsWin
	}
	return false
}

func (x *CrossWarReport) GetTime() int32 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return 0
}

func (x *CrossWarReport) GetFortId() int32 {
	if x != nil && x.FortId != nil {
		return *x.FortId
	}
	return 0
}

// 跨服排行数据
type CrossRankItem struct {
	MainServerId         *int32                  `protobuf:"varint,1,opt,name=mainServerId" json:"mainServerId,omitempty"`
	Camp                 *int32                  `protobuf:"varint,2,opt,name=camp" json:"camp,omitempty"`
	Val                  *int32                  `protobuf:"varint,3,opt,name=val" json:"val,omitempty"`
	Type                 *int32                  `protobuf:"varint,4,opt,name=type" json:"type,omitempty"`
	Nick                 *string                 `protobuf:"bytes,5,opt,name=nick" json:"nick,omitempty"`
	RoleId               *int64                  `protobuf:"varint,6,opt,name=roleId" json:"roleId,omitempty"`
	Portrait             *int32                  `protobuf:"varint,7,opt,name=portrait" json:"portrait,omitempty"`
	Ranking              *int32                  `protobuf:"varint,8,opt,name=ranking" json:"ranking,omitempty"`
	Time                 *int32                  `protobuf:"varint,9,opt,name=time" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *CrossRankItem) Reset() {
	*x = CrossRankItem{}
}

func (x *CrossRankItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrossRankItem) ProtoMessage() {}

func (x *CrossRankItem) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[222].MessageOf(x)
}

func (m *CrossRankItem) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[222].Methods()
}

// Deprecated: Use CrossRankItem.ProtoReflect.Type instead.
func (*CrossRankItem) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{222}
}

func (x *CrossRankItem) GetMainServerId() int32 {
	if x != nil && x.MainServerId != nil {
		return *x.MainServerId
	}
	return 0
}

func (x *CrossRankItem) GetCamp() int32 {
	if x != nil && x.Camp != nil {
		return *x.Camp
	}
	return 0
}

func (x *CrossRankItem) GetVal() int32 {
	if x != nil && x.Val != nil {
		return *x.Val
	}
	return 0
}

func (x *CrossRankItem) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *CrossRankItem) GetNick() string {
	if x != nil && x.Nick != nil {
		return *x.Nick
	}
	return ""
}

func (x *CrossRankItem) GetRoleId() int64 {
	if x != nil && x.RoleId != nil {
		return *x.RoleId
	}
	return 0
}

func (x *CrossRankItem) GetPortrait() int32 {
	if x != nil && x.Portrait != nil {
		return *x.Portrait
	}
	return 0
}

func (x *CrossRankItem) GetRanking() int32 {
	if x != nil && x.Ranking != nil {
		return *x.Ranking
	}
	return 0
}

func (x *CrossRankItem) GetTime() int32 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return 0
}

type ServerInfo_ServerConnectInfo struct {
	Sid                  *int32                  `protobuf:"varint,1,opt,name=sid" json:"sid,omitempty"`
	Sname                *string                 `protobuf:"bytes,2,opt,name=sname" json:"sname,omitempty"`
	Camp                 []int32                 `protobuf:"varint,3,rep,name=camp" json:"camp,omitempty"`
	Ip                   *string                 `protobuf:"bytes,4,req,name=ip" json:"ip,omitempty"`
	Socketport           *int32                  `protobuf:"varint,5,req,name=socketport" json:"socketport,omitempty"`
	Httpurl              *string                 `protobuf:"bytes,6,req,name=httpurl" json:"httpurl,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *ServerInfo_ServerConnectInfo) Reset() {
	*x = ServerInfo_ServerConnectInfo{}
}

func (x *ServerInfo_ServerConnectInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerInfo_ServerConnectInfo) ProtoMessage() {}

func (x *ServerInfo_ServerConnectInfo) ProtoReflect() protoreflect.Message {
	return file_Common_proto_msgTypes[223].MessageOf(x)
}

func (m *ServerInfo_ServerConnectInfo) XXX_Methods() *protoiface.Methods {
	return file_Common_proto_msgTypes[223].Methods()
}

// Deprecated: Use ServerInfo_ServerConnectInfo.ProtoReflect.Type instead.
func (*ServerInfo_ServerConnectInfo) Descriptor() ([]byte, []int) {
	return file_Common_proto_rawDescGZIP(), []int{158, 0}
}

func (x *ServerInfo_ServerConnectInfo) GetSid() int32 {
	if x != nil && x.Sid != nil {
		return *x.Sid
	}
	return 0
}

func (x *ServerInfo_ServerConnectInfo) GetSname() string {
	if x != nil && x.Sname != nil {
		return *x.Sname
	}
	return ""
}

func (x *ServerInfo_ServerConnectInfo) GetCamp() []int32 {
	if x != nil {
		return x.Camp
	}
	return nil
}

func (x *ServerInfo_ServerConnectInfo) GetIp() string {
	if x != nil && x.Ip != nil {
		return *x.Ip
	}
	return ""
}

func (x *ServerInfo_ServerConnectInfo) GetSocketport() int32 {
	if x != nil && x.Socketport != nil {
		return *x.Socketport
	}
	return 0
}

func (x *ServerInfo_ServerConnectInfo) GetHttpurl() string {
	if x != nil && x.Httpurl != nil {
		return *x.Httpurl
	}
	return ""
}

var File_Common_proto protoreflect.FileDescriptor

var file_Common_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x20,
	0x0a, 0x06, 0x54, 0x77, 0x6f, 0x49, 0x6e, 0x74, 0x12, 0x0a, 0x0a, 0x02, 0x76, 0x31, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x05, 0x12, 0x0a, 0x0a, 0x02, 0x76, 0x32, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05,
	0x22, 0x20, 0x0a, 0x06, 0x53, 0x74, 0x72, 0x49, 0x6e, 0x74, 0x12, 0x0a, 0x0a, 0x02, 0x76, 0x31,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x12, 0x0a, 0x0a, 0x02, 0x76, 0x32, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x05, 0x22, 0x21, 0x0a, 0x07, 0x49, 0x6e, 0x74, 0x4c, 0x6f, 0x6e, 0x67, 0x12, 0x0a, 0x0a,
	0x02, 0x76, 0x31, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0a, 0x0a, 0x02, 0x76, 0x32, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x03, 0x22, 0x23, 0x0a, 0x09, 0x49, 0x6e, 0x74, 0x44, 0x6f, 0x75, 0x62,
	0x6c, 0x65, 0x12, 0x0a, 0x0a, 0x02, 0x76, 0x31, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0a,
	0x0a, 0x02, 0x76, 0x32, 0x18, 0x02, 0x20, 0x02, 0x28, 0x01, 0x22, 0x24, 0x0a, 0x0a, 0x49, 0x6e,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x12, 0x0a, 0x0a, 0x02, 0x76, 0x31, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x05, 0x12, 0x0a, 0x0a, 0x02, 0x76, 0x32, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05,
	0x22, 0x21, 0x0a, 0x07, 0x4c, 0x6f, 0x6e, 0x67, 0x49, 0x6e, 0x74, 0x12, 0x0a, 0x0a, 0x02, 0x76,
	0x31, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x12, 0x0a, 0x0a, 0x02, 0x76, 0x32, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x05, 0x22, 0x24, 0x0a, 0x0a, 0x49, 0x6e, 0x74, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65,
	0x73, 0x12, 0x16, 0x0a, 0x02, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x49, 0x6e, 0x74, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x22, 0x50, 0x0a, 0x08, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x0b, 0x0a, 0x03, 0x6f, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x12, 0x0b, 0x0a, 0x03, 0x65, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x12,
	0x0c, 0x0a, 0x04, 0x66, 0x6f, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x12, 0x0b, 0x0a,
	0x03, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x12, 0x0f, 0x0a, 0x07, 0x75, 0x72,
	0x61, 0x6e, 0x69, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x22, 0x2f, 0x0a, 0x03, 0x41,
	0x72, 0x6d, 0x12, 0x0c, 0x0a, 0x04, 0x61, 0x72, 0x6d, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x12, 0x0c, 0x0a, 0x04, 0x61, 0x72, 0x6d, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x12, 0x0c,
	0x0a, 0x04, 0x61, 0x72, 0x6d, 0x33, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x22, 0x85, 0x01, 0x0a,
	0x06, 0x52, 0x65, 0x73, 0x41, 0x64, 0x64, 0x12, 0x0d, 0x0a, 0x05, 0x72, 0x65, 0x73, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07, 0x62, 0x61, 0x73, 0x65, 0x41, 0x64,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07, 0x74, 0x65, 0x63, 0x68, 0x41,
	0x64, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x12, 0x11, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x41, 0x64, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x12, 0x11, 0x0a, 0x09, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x41, 0x64, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x12, 0x12,
	0x0a, 0x0a, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x41, 0x64, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x12, 0x10, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x22, 0x37, 0x0a, 0x07, 0x52, 0x6f, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x12,
	0x0c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0d, 0x0a,
	0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x12, 0x0f, 0x0a, 0x07,
	0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x22, 0xab, 0x01,
	0x0a, 0x08, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x51, 0x75, 0x65, 0x12, 0x0d, 0x0a, 0x05, 0x6b, 0x65,
	0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x12, 0x14, 0x0a, 0x0c, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0a,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x70, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x66,
	0x72, 0x65, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x12, 0x10, 0x0a, 0x08, 0x66, 0x72, 0x6f, 0x6d,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07, 0x6e, 0x65,
	0x77, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x22, 0xaa, 0x01, 0x0a, 0x06,
	0x41, 0x72, 0x6d, 0x51, 0x75, 0x65, 0x12, 0x0d, 0x0a, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0a, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x12, 0x0e, 0x0a, 0x06, 0x61, 0x64, 0x64, 0x41, 0x72, 0x6d, 0x18, 0x03, 0x20, 0x02, 0x28,
	0x05, 0x12, 0x0f, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x12, 0x0c, 0x0a, 0x04, 0x66, 0x72, 0x65, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0d,
	0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x12, 0x10, 0x0a,
	0x08, 0x6e, 0x65, 0x65, 0x64, 0x46, 0x6f, 0x6f, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x12,
	0x16, 0x0a, 0x0e, 0x69, 0x73, 0x4e, 0x6f, 0x74, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x51, 0x75,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x12, 0x0f, 0x0a, 0x07, 0x6e, 0x65, 0x65, 0x64, 0x4f,
	0x49, 0x4c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x22, 0x4f, 0x0a, 0x07, 0x46, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x12, 0x0a, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12,
	0x0d, 0x0a, 0x05, 0x66, 0x63, 0x74, 0x4c, 0x76, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x12, 0x10,
	0x0a, 0x08, 0x66, 0x63, 0x74, 0x45, 0x78, 0x70, 0x4c, 0x76, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x12, 0x17, 0x0a, 0x06, 0x61, 0x72, 0x6d, 0x51, 0x75, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x07, 0x2e, 0x41, 0x72, 0x6d, 0x51, 0x75, 0x65, 0x22, 0x58, 0x0a, 0x0c, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x73, 0x65, 0x12, 0x0c, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0a, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x12, 0x0a, 0x0a, 0x02, 0x6c, 0x76, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x12,
	0x0e, 0x0a, 0x06, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x12,
	0x12, 0x0a, 0x0a, 0x75, 0x6e, 0x4c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x22, 0x5e, 0x0a, 0x04, 0x4d, 0x69, 0x6c, 0x6c, 0x12, 0x0c, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0a, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0a, 0x0a, 0x02, 0x6c, 0x76, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x12, 0x0f, 0x0a, 0x07, 0x67, 0x61, 0x69, 0x6e, 0x43, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x22, 0x32, 0x0a, 0x05, 0x47, 0x61, 0x69, 0x6e, 0x73, 0x12, 0x0c, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0a, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x22, 0x4e, 0x0a, 0x05, 0x41, 0x77, 0x61, 0x72, 0x64,
	0x12, 0x0c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0a,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x6b, 0x65, 0x79,
	0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05, 0x22, 0xb3, 0x03, 0x0a, 0x04, 0x48, 0x65, 0x72, 0x6f,
	0x12, 0x0e, 0x0a, 0x06, 0x68, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05,
	0x12, 0x0d, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x12,
	0x0b, 0x0a, 0x03, 0x65, 0x78, 0x70, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x12, 0x15, 0x0a, 0x04,
	0x61, 0x74, 0x74, 0x72, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x54, 0x77, 0x6f,
	0x49, 0x6e, 0x74, 0x12, 0x15, 0x0a, 0x04, 0x77, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x07, 0x2e, 0x54, 0x77, 0x6f, 0x49, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x05, 0x65, 0x71,
	0x75, 0x69, 0x70, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x54, 0x77, 0x6f, 0x49,
	0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x02,
	0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x12, 0x0b, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0d,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0f, 0x0a,
	0x07, 0x77, 0x61, 0x6c, 0x6c, 0x50, 0x6f, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x12, 0x10,
	0x0a, 0x08, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x45, 0x78, 0x70, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05,
	0x12, 0x14, 0x0a, 0x0c, 0x77, 0x61, 0x6c, 0x6c, 0x41, 0x72, 0x6d, 0x79, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74,
	0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x12, 0x1b, 0x0a, 0x13, 0x77, 0x61, 0x73, 0x68, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x61, 0x63, 0x71, 0x50, 0x6f, 0x73, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x64, 0x65, 0x66, 0x50, 0x6f, 0x73, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x05, 0x12, 0x11, 0x0a, 0x09, 0x64, 0x65, 0x63, 0x6f, 0x72, 0x61, 0x74, 0x65,
	0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x12, 0x19, 0x0a, 0x08, 0x77, 0x61, 0x72, 0x50, 0x6c,
	0x61, 0x6e, 0x65, 0x18, 0x13, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x54, 0x77, 0x6f, 0x49,
	0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x77, 0x46, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x54, 0x77, 0x6f, 0x49, 0x6e, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x50, 0x6f, 0x73, 0x18, 0x15, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x07, 0x2e, 0x54, 0x77, 0x6f, 0x49, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x0a, 0x63, 0x6f, 0x6d,
	0x61, 0x6e, 0x64, 0x6f, 0x50, 0x6f, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x05, 0x22, 0xb7, 0x01,
	0x0a, 0x08, 0x57, 0x61, 0x72, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x12, 0x0f, 0x0a, 0x07, 0x70, 0x6c,
	0x61, 0x6e, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07, 0x71, 0x75,
	0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x12, 0x11, 0x0a, 0x09, 0x71,
	0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x4c, 0x76, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0b,
	0x0a, 0x03, 0x65, 0x78, 0x70, 0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x12, 0x15, 0x0a, 0x04, 0x61,
	0x74, 0x74, 0x72, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x54, 0x77, 0x6f, 0x49,
	0x6e, 0x74, 0x12, 0x0b, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x12,
	0x0f, 0x0a, 0x07, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x12, 0x11, 0x0a, 0x09, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x50, 0x6f, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x12, 0x12, 0x0a, 0x0a, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x22, 0x8b, 0x01, 0x0a, 0x07, 0x57, 0x61, 0x6c, 0x6c,
	0x4e, 0x70, 0x63, 0x12, 0x0b, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x12, 0x0e, 0x0a, 0x06, 0x68, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05,
	0x12, 0x0d, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x12,
	0x0b, 0x0a, 0x03, 0x65, 0x78, 0x70, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x12, 0x15, 0x0a, 0x04,
	0x61, 0x74, 0x74, 0x72, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x54, 0x77, 0x6f,
	0x49, 0x6e, 0x74, 0x12, 0x0d, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x12, 0x10, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x6f, 0x41, 0x72, 0x6d, 0x79, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x22, 0x76, 0x0a, 0x08, 0x57, 0x61, 0x6c, 0x6c, 0x48, 0x65, 0x72,
	0x6f, 0x12, 0x0e, 0x0a, 0x06, 0x68, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x12, 0x0d, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05,
	0x12, 0x0c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0e,
	0x0a, 0x06, 0x6c, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x12, 0x0d,
	0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0d, 0x0a,
	0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07,
	0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x22, 0x96, 0x01,
	0x0a, 0x05, 0x45, 0x71, 0x75, 0x69, 0x70, 0x12, 0x0d, 0x0a, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07, 0x65, 0x71, 0x75, 0x69, 0x70, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x12, 0x15, 0x0a, 0x04, 0x61, 0x74, 0x74, 0x72, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x54, 0x77, 0x6f, 0x49, 0x6e, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x62, 0x61, 0x70, 0x74, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x07, 0x2e, 0x54, 0x77, 0x6f, 0x49, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x06, 0x68, 0x65, 0x72, 0x6f,
	0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x12, 0x12, 0x0a, 0x0a, 0x6e, 0x6f, 0x74, 0x55,
	0x70, 0x4c, 0x76, 0x43, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x12, 0x18, 0x0a, 0x04,
	0x65, 0x78, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x45, 0x71, 0x75,
	0x69, 0x70, 0x45, 0x78, 0x74, 0x72, 0x22, 0x67, 0x0a, 0x09, 0x45, 0x71, 0x75, 0x69, 0x70, 0x45,
	0x78, 0x74, 0x72, 0x12, 0x0a, 0x0a, 0x02, 0x6c, 0x76, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x12,
	0x0d, 0x0a, 0x05, 0x75, 0x70, 0x43, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x12, 0x15,
	0x0a, 0x0d, 0x75, 0x70, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x12, 0x15, 0x0a, 0x04, 0x61, 0x74, 0x74, 0x72, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x54, 0x77, 0x6f, 0x49, 0x6e, 0x74, 0x12, 0x11, 0x0a, 0x09,
	0x72, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x6f, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05, 0x22,
	0x3c, 0x0a, 0x0a, 0x45, 0x71, 0x75, 0x69, 0x70, 0x4a, 0x65, 0x77, 0x65, 0x6c, 0x12, 0x0f, 0x0a,
	0x07, 0x6a, 0x65, 0x77, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0d,
	0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0e, 0x0a,
	0x06, 0x69, 0x6e, 0x6c, 0x61, 0x69, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x22, 0xa3, 0x02,
	0x0a, 0x05, 0x4d, 0x65, 0x64, 0x61, 0x6c, 0x12, 0x0d, 0x0a, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07, 0x6d, 0x65, 0x64, 0x61, 0x6c, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07, 0x71, 0x75, 0x61, 0x6c, 0x69,
	0x74, 0x79, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x12, 0x16, 0x0a, 0x0e, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x6c, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05, 0x12,
	0x16, 0x0a, 0x0e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x49,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x12, 0x13, 0x0a, 0x0b, 0x61, 0x75, 0x72, 0x61, 0x53,
	0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06,
	0x68, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x12, 0x1a, 0x0a, 0x09,
	0x6d, 0x65, 0x64, 0x61, 0x6c, 0x41, 0x74, 0x74, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x07, 0x2e, 0x54, 0x77, 0x6f, 0x49, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x66, 0x79, 0x43, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x12, 0x12,
	0x0a, 0x0a, 0x67, 0x6f, 0x6c, 0x64, 0x42, 0x61, 0x72, 0x43, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x69, 0x73, 0x4c, 0x6f, 0x63, 0x6b, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x05, 0x12, 0x17, 0x0a, 0x0f, 0x69, 0x6e, 0x69, 0x74, 0x41, 0x75, 0x72, 0x61, 0x53, 0x6b,
	0x69, 0x6c, 0x6c, 0x49, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x12, 0x16, 0x0a, 0x03, 0x65,
	0x78, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x4d, 0x65, 0x64, 0x61, 0x6c,
	0x45, 0x78, 0x74, 0x22, 0x3a, 0x0a, 0x08, 0x4d, 0x65, 0x64, 0x61, 0x6c, 0x45, 0x78, 0x74, 0x12,
	0x12, 0x0a, 0x0a, 0x61, 0x75, 0x72, 0x61, 0x55, 0x6e, 0x4c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x08, 0x12, 0x1a, 0x0a, 0x12, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x53, 0x6b,
	0x69, 0x6c, 0x6c, 0x55, 0x6e, 0x4c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x02, 0x28, 0x08, 0x22,
	0x68, 0x0a, 0x0a, 0x4d, 0x65, 0x64, 0x61, 0x6c, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x12, 0x14, 0x0a,
	0x0c, 0x6d, 0x65, 0x64, 0x61, 0x6c, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x12, 0x0f, 0x0a, 0x07, 0x6d, 0x65, 0x64, 0x61, 0x6c, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x12, 0x13, 0x0a, 0x0b, 0x61, 0x75, 0x72, 0x61, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x12, 0x10, 0x0a, 0x08, 0x62, 0x75, 0x79, 0x48, 0x6f,
	0x6e, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x22, 0x81, 0x01, 0x0a, 0x08, 0x45, 0x71,
	0x75, 0x69, 0x70, 0x51, 0x75, 0x65, 0x12, 0x0d, 0x0a, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07, 0x65, 0x71, 0x75, 0x69, 0x70, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x12, 0x10, 0x0a, 0x08, 0x66, 0x72, 0x65, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07, 0x66, 0x72, 0x65,
	0x65, 0x43, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x12, 0x11, 0x0a, 0x09, 0x65, 0x6d,
	0x70, 0x6c, 0x6f, 0x79, 0x65, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x22, 0x52, 0x0a,
	0x0a, 0x53, 0x75, 0x70, 0x65, 0x72, 0x45, 0x71, 0x75, 0x69, 0x70, 0x12, 0x0c, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0a, 0x0a, 0x02, 0x6c, 0x76, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x03, 0x20,
	0x02, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x62, 0x6f, 0x6d, 0x62, 0x18, 0x04, 0x20, 0x02, 0x28,
	0x05, 0x12, 0x0e, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x77, 0x4c, 0x76, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x22, 0x48, 0x0a, 0x04, 0x50, 0x72, 0x6f, 0x70, 0x12, 0x0e, 0x0a, 0x06, 0x70, 0x72, 0x6f,
	0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x12, 0x10, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x22, 0x38, 0x0a, 0x04, 0x54,
	0x61, 0x73, 0x6b, 0x12, 0x0e, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x05, 0x12, 0x10, 0x0a, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x03, 0x12, 0x0e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x22, 0x28, 0x0a, 0x06, 0x43, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x12,
	0x10, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x12, 0x0c, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x72, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x22,
	0x68, 0x0a, 0x08, 0x43, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x46, 0x42, 0x12, 0x10, 0x0a, 0x08, 0x63,
	0x6f, 0x6d, 0x62, 0x61, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0e, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0b, 0x0a,
	0x03, 0x63, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x67,
	0x61, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x62, 0x75, 0x79,
	0x43, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x22, 0x30, 0x0a, 0x0b, 0x53, 0x74, 0x6f,
	0x6e, 0x65, 0x43, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x62,
	0x61, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07, 0x70, 0x61,
	0x73, 0x73, 0x43, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x22, 0x3b, 0x0a, 0x04, 0x47,
	0x72, 0x61, 0x62, 0x12, 0x0b, 0x0a, 0x03, 0x6f, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x12, 0x0b, 0x0a, 0x03, 0x65, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x12, 0x0c, 0x0a,
	0x04, 0x66, 0x6f, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x12, 0x0b, 0x0a, 0x03, 0x6f,
	0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x22, 0x92, 0x01, 0x0a, 0x04, 0x46, 0x6f, 0x72,
	0x6d, 0x12, 0x0a, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0d, 0x0a,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04,
	0x6c, 0x69, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0a, 0x0a, 0x02, 0x6c, 0x76,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x63, 0x61, 0x6d, 0x70, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x12, 0x10, 0x0a, 0x08, 0x68, 0x65, 0x72, 0x6f, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0f, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x4c, 0x69,
	0x6e, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x12, 0x13, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x66, 0x79, 0x4c, 0x76, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x22, 0x40, 0x0a,
	0x04, 0x41, 0x75, 0x72, 0x61, 0x12, 0x0a, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x12, 0x0e, 0x0a, 0x06, 0x68, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x05, 0x12, 0x0e, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28,
	0x03, 0x12, 0x0c, 0x0a, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x02, 0x28, 0x09, 0x22,
	0xb8, 0x01, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x06, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x68, 0x75,
	0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x12, 0x0c, 0x0a, 0x04, 0x63, 0x72, 0x69, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x12, 0x0d, 0x0a, 0x05, 0x64, 0x6f, 0x64, 0x67, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x12, 0x0d, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x12, 0x10, 0x0a, 0x08, 0x64, 0x65, 0x61, 0x64, 0x4c, 0x69, 0x6e, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x49,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x6e, 0x65,
	0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x12, 0x14, 0x0a, 0x0c, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x12, 0x1a,
	0x0a, 0x05, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x46, 0x69, 0x67, 0x68, 0x74, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x22, 0x8e, 0x01, 0x0a, 0x09, 0x46,
	0x69, 0x67, 0x68, 0x74, 0x42, 0x75, 0x66, 0x66, 0x12, 0x0c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07, 0x62, 0x75, 0x66, 0x66, 0x56, 0x61,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x12, 0x13, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x69,
	0x6e, 0x75, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x12, 0x11, 0x0a, 0x09,
	0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x6f, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x12,
	0x13, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x69, 0x73, 0x41, 0x74, 0x6b, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x12, 0x16, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x07, 0x2e, 0x54, 0x77, 0x6f, 0x49, 0x6e, 0x74, 0x22, 0x41, 0x0a, 0x0a, 0x46,
	0x69, 0x67, 0x68, 0x74, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x0c, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x12, 0x16, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x54, 0x77, 0x6f, 0x49, 0x6e, 0x74, 0x22, 0x55,
	0x0a, 0x05, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x07, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x04, 0x62,
	0x75, 0x66, 0x66, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x46, 0x69, 0x67, 0x68,
	0x74, 0x42, 0x75, 0x66, 0x66, 0x22, 0x6f, 0x0a, 0x06, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12,
	0x0d, 0x0a, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x14,
	0x0a, 0x05, 0x66, 0x6f, 0x72, 0x6d, 0x41, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e,
	0x46, 0x6f, 0x72, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x12, 0x15, 0x0a, 0x05, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x52, 0x6f, 0x75, 0x6e,
	0x64, 0x12, 0x13, 0x0a, 0x04, 0x61, 0x75, 0x72, 0x61, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x05, 0x2e, 0x41, 0x75, 0x72, 0x61, 0x22, 0x77, 0x0a, 0x06, 0x52, 0x70, 0x74, 0x4d, 0x61, 0x6e,
	0x12, 0x0b, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0c, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0b, 0x0a, 0x03, 0x76,
	0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0a, 0x0a, 0x02, 0x6c, 0x76, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x12, 0x0d, 0x0a, 0x05, 0x6d, 0x61, 0x70, 0x49, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x6d, 0x61, 0x70, 0x58, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x12, 0x0c, 0x0a, 0x04, 0x6d, 0x61, 0x70, 0x59, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x22,
	0x55, 0x0a, 0x09, 0x52, 0x70, 0x74, 0x42, 0x61, 0x6e, 0x64, 0x69, 0x74, 0x12, 0x10, 0x0a, 0x08,
	0x62, 0x61, 0x6e, 0x64, 0x69, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0b,
	0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x6d,
	0x61, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x6d, 0x61,
	0x70, 0x58, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x6d, 0x61, 0x70, 0x59,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x22, 0x51, 0x0a, 0x07, 0x52, 0x70, 0x74, 0x43, 0x69, 0x74,
	0x79, 0x12, 0x0e, 0x0a, 0x06, 0x63, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x12, 0x0b, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0d,
	0x0a, 0x05, 0x6d, 0x61, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0c, 0x0a,
	0x04, 0x6d, 0x61, 0x70, 0x58, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x6d,
	0x61, 0x70, 0x59, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x22, 0x7c, 0x0a, 0x08, 0x52, 0x70, 0x74,
	0x4f, 0x74, 0x68, 0x65, 0x72, 0x12, 0x0c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x05, 0x12, 0x0a, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x12,
	0x0b, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04,
	0x63, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x12, 0x10, 0x0a, 0x08, 0x65, 0x78,
	0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0d, 0x0a, 0x05,
	0x6d, 0x61, 0x70, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x6d,
	0x61, 0x70, 0x58, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x6d, 0x61, 0x70,
	0x59, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x22, 0x57, 0x0a, 0x0a, 0x52, 0x70, 0x74, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x0d, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x6c, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x63, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x12, 0x0c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x12, 0x10,
	0x0a, 0x08, 0x70, 0x6f, 0x72, 0x74, 0x72, 0x61, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x22, 0x91, 0x01, 0x0a, 0x07, 0x52, 0x70, 0x74, 0x48, 0x65, 0x72, 0x6f, 0x12, 0x0c, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x6b, 0x69,
	0x6c, 0x6c, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x61, 0x77, 0x61, 0x72,
	0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x68, 0x65, 0x72, 0x6f, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0a, 0x0a, 0x02, 0x6c, 0x76, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x12, 0x0b, 0x0a, 0x03, 0x65, 0x78, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x12,
	0x0c, 0x0a, 0x04, 0x6c, 0x6f, 0x73, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x12, 0x15, 0x0a,
	0x0d, 0x68, 0x65, 0x72, 0x6f, 0x44, 0x65, 0x63, 0x6f, 0x72, 0x61, 0x74, 0x65, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x05, 0x22, 0xf1, 0x01, 0x0a, 0x0c, 0x52, 0x70, 0x74, 0x41, 0x74, 0x6b, 0x42,
	0x61, 0x6e, 0x64, 0x69, 0x74, 0x12, 0x0e, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x08, 0x12, 0x17, 0x0a, 0x06, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x52, 0x70, 0x74, 0x4d, 0x61, 0x6e, 0x12, 0x1a,
	0x0a, 0x06, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x52, 0x70, 0x74, 0x42, 0x61, 0x6e, 0x64, 0x69, 0x74, 0x12, 0x1b, 0x0a, 0x06, 0x61, 0x74,
	0x6b, 0x53, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x52, 0x70, 0x74,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x1b, 0x0a, 0x06, 0x64, 0x65, 0x66, 0x53, 0x75,
	0x6d, 0x18, 0x05, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x52, 0x70, 0x74, 0x53, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x12, 0x19, 0x0a, 0x07, 0x61, 0x74, 0x6b, 0x48, 0x65, 0x72, 0x6f, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x52, 0x70, 0x74, 0x48, 0x65, 0x72, 0x6f, 0x12,
	0x19, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x48, 0x65, 0x72, 0x6f, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x08, 0x2e, 0x52, 0x70, 0x74, 0x48, 0x65, 0x72, 0x6f, 0x12, 0x13, 0x0a, 0x04, 0x67, 0x72,
	0x61, 0x62, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x47, 0x72, 0x61, 0x62, 0x12,
	0x17, 0x0a, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x07, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x22, 0xbe, 0x02, 0x0a, 0x0c, 0x52, 0x70, 0x74,
	0x41, 0x74, 0x6b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x12, 0x17, 0x0a, 0x06, 0x61, 0x74, 0x74,
	0x61, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x52, 0x70, 0x74, 0x4d,
	0x61, 0x6e, 0x12, 0x17, 0x0a, 0x06, 0x64, 0x65, 0x66, 0x4d, 0x61, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x07, 0x2e, 0x52, 0x70, 0x74, 0x4d, 0x61, 0x6e, 0x12, 0x19, 0x0a, 0x07, 0x64,
	0x65, 0x66, 0x43, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x52,
	0x70, 0x74, 0x43, 0x69, 0x74, 0x79, 0x12, 0x1b, 0x0a, 0x06, 0x61, 0x74, 0x6b, 0x53, 0x75, 0x6d,
	0x18, 0x05, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x52, 0x70, 0x74, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x12, 0x1b, 0x0a, 0x06, 0x64, 0x65, 0x66, 0x53, 0x75, 0x6d, 0x18, 0x06, 0x20,
	0x02, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x52, 0x70, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x12, 0x19, 0x0a, 0x07, 0x61, 0x74, 0x6b, 0x48, 0x65, 0x72, 0x6f, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x08, 0x2e, 0x52, 0x70, 0x74, 0x48, 0x65, 0x72, 0x6f, 0x12, 0x19, 0x0a, 0x07, 0x64,
	0x65, 0x66, 0x48, 0x65, 0x72, 0x6f, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x52,
	0x70, 0x74, 0x48, 0x65, 0x72, 0x6f, 0x12, 0x13, 0x0a, 0x04, 0x67, 0x72, 0x61, 0x62, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x47, 0x72, 0x61, 0x62, 0x12, 0x17, 0x0a, 0x06, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x12, 0x13, 0x0a, 0x0b, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x45, 0x66, 0x66,
	0x65, 0x63, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x12, 0x1e, 0x0a, 0x0b, 0x64, 0x65, 0x66,
	0x52, 0x70, 0x74, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x52, 0x70, 0x74, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x22, 0x7a, 0x0a, 0x06, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x12, 0x0c, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x12, 0x20, 0x0a, 0x09, 0x72, 0x70, 0x74, 0x42, 0x61, 0x6e, 0x64, 0x69, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x52, 0x70, 0x74, 0x41, 0x74, 0x6b, 0x42, 0x61, 0x6e,
	0x64, 0x69, 0x74, 0x12, 0x20, 0x0a, 0x09, 0x72, 0x70, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x52, 0x70, 0x74, 0x41, 0x74, 0x6b, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x0d, 0x0a, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07, 0x69, 0x73, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x22, 0x85, 0x01, 0x0a, 0x0b, 0x4d, 0x61, 0x69, 0x6c, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x0c, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x68, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x68, 0x65, 0x72, 0x6f, 0x4c, 0x76, 0x18, 0x03, 0x20,
	0x02, 0x28, 0x05, 0x12, 0x0b, 0x0a, 0x03, 0x65, 0x78, 0x70, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05,
	0x12, 0x14, 0x0a, 0x04, 0x67, 0x72, 0x61, 0x62, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06,
	0x2e, 0x41, 0x77, 0x61, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x06, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x12, 0x15, 0x0a, 0x0d, 0x68, 0x65, 0x72, 0x6f, 0x44, 0x65,
	0x63, 0x6f, 0x72, 0x61, 0x74, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x22, 0x6b, 0x0a,
	0x08, 0x53, 0x63, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x12, 0x0b, 0x0a, 0x03, 0x6f, 0x69, 0x6c,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x12, 0x0b, 0x0a, 0x03, 0x65, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x03, 0x12, 0x0c, 0x0a, 0x04, 0x66, 0x6f, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28,
	0x03, 0x12, 0x0b, 0x0a, 0x03, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28, 0x03, 0x12, 0x0d,
	0x0a, 0x05, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x18, 0x05, 0x20, 0x02, 0x28, 0x03, 0x12, 0x1b, 0x0a,
	0x0a, 0x63, 0x61, 0x6e, 0x50, 0x6c, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x07, 0x2e, 0x54, 0x77, 0x6f, 0x49, 0x6e, 0x74, 0x22, 0x52, 0x0a, 0x09, 0x53, 0x63,
	0x6f, 0x75, 0x74, 0x43, 0x69, 0x74, 0x79, 0x12, 0x0c, 0x0a, 0x04, 0x77, 0x61, 0x6c, 0x6c, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x66, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x03, 0x12, 0x0c, 0x0a, 0x04, 0x61, 0x72, 0x6d, 0x31, 0x18, 0x03, 0x20, 0x02,
	0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x61, 0x72, 0x6d, 0x32, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05,
	0x12, 0x0c, 0x0a, 0x04, 0x61, 0x72, 0x6d, 0x33, 0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x22, 0xa3,
	0x01, 0x0a, 0x09, 0x53, 0x63, 0x6f, 0x75, 0x74, 0x48, 0x65, 0x72, 0x6f, 0x12, 0x0e, 0x0a, 0x06,
	0x68, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x12, 0x15, 0x0a, 0x0d, 0x68, 0x65, 0x72,
	0x6f, 0x44, 0x65, 0x63, 0x6f, 0x72, 0x61, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x12, 0x17, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x07, 0x2e, 0x54, 0x77, 0x6f, 0x49, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x6c, 0x61,
	0x6e, 0x65, 0x50, 0x6f, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x54, 0x77,
	0x6f, 0x49, 0x6e, 0x74, 0x22, 0x57, 0x0a, 0x09, 0x4d, 0x61, 0x69, 0x6c, 0x53, 0x63, 0x6f, 0x75,
	0x74, 0x12, 0x16, 0x0a, 0x03, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x53, 0x63, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x04, 0x63, 0x69, 0x74,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x53, 0x63, 0x6f, 0x75, 0x74, 0x43,
	0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x04, 0x68, 0x65, 0x72, 0x6f, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x53, 0x63, 0x6f, 0x75, 0x74, 0x48, 0x65, 0x72, 0x6f, 0x22, 0xc1, 0x01,
	0x0a, 0x08, 0x4d, 0x61, 0x69, 0x6c, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x0d, 0x0a, 0x05, 0x6b, 0x65,
	0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x6d, 0x6f, 0x6c, 0x64, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x12, 0x10, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0d, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x09, 0x12, 0x0c, 0x0a, 0x04, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x05, 0x12, 0x14, 0x0a, 0x04, 0x64, 0x72, 0x6f, 0x70, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x06, 0x2e, 0x41, 0x77, 0x61, 0x72, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x41, 0x77, 0x61, 0x72,
	0x64, 0x22, 0xf4, 0x02, 0x0a, 0x04, 0x4d, 0x61, 0x69, 0x6c, 0x12, 0x0d, 0x0a, 0x05, 0x6b, 0x65,
	0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x12, 0x10, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0e, 0x0a, 0x06, 0x74, 0x6f, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x12, 0x0d, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x06, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0c, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x08, 0x20, 0x02, 0x28, 0x05, 0x12, 0x15, 0x0a, 0x05, 0x61, 0x77, 0x61, 0x72, 0x64, 0x18,
	0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x41, 0x77, 0x61, 0x72, 0x64, 0x12, 0x0e, 0x0a,
	0x06, 0x6d, 0x6f, 0x6c, 0x64, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0e, 0x0a,
	0x06, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x12, 0x0a, 0x0a,
	0x02, 0x6c, 0x76, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x76, 0x69, 0x70,
	0x4c, 0x76, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x12, 0x17, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x12, 0x14, 0x0a, 0x04, 0x64, 0x72, 0x6f, 0x70, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x06, 0x2e, 0x41, 0x77, 0x61, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x06, 0x63, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x18, 0x10, 0x20, 0x03, 0x28, 0x09, 0x12, 0x1d, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x19, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x75, 0x74, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x4d, 0x61, 0x69, 0x6c, 0x53, 0x63, 0x6f, 0x75,
	0x74, 0x12, 0x0c, 0x0a, 0x04, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x12,
	0x17, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x06, 0x2e, 0x41, 0x77, 0x61, 0x72, 0x64, 0x22, 0x46, 0x0a, 0x09, 0x41, 0x72, 0x65, 0x61,
	0x46, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x0b, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x63, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05,
	0x12, 0x0d, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x12,
	0x0f, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x22, 0x3d, 0x0a, 0x0b, 0x41, 0x72, 0x65, 0x61, 0x47, 0x65, 0x73, 0x74, 0x61, 0x70, 0x6f, 0x12,
	0x0b, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x10, 0x0a, 0x08,
	0x73, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x12, 0x0f,
	0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x22,
	0xe5, 0x01, 0x0a, 0x08, 0x41, 0x72, 0x65, 0x61, 0x43, 0x69, 0x74, 0x79, 0x12, 0x0e, 0x0a, 0x06,
	0x63, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04,
	0x63, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x66, 0x72,
	0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x12, 0x12, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61,
	0x63, 0x6b, 0x43, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x12, 0x13, 0x0a, 0x0b,
	0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x12, 0x10, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x12, 0x12, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x12, 0x1a, 0x0a, 0x12, 0x68, 0x61, 0x73, 0x46, 0x69,
	0x72, 0x73, 0x74, 0x4b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x08, 0x12, 0x0f, 0x0a, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x12, 0x0d, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x12, 0x10, 0x0a, 0x08, 0x70, 0x6f, 0x72, 0x74, 0x72, 0x61, 0x69, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x05, 0x12, 0x10, 0x0a, 0x08, 0x63, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x22, 0xcf, 0x01, 0x0a, 0x07, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x12, 0x0c, 0x0a, 0x04, 0x63, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x12, 0x0a, 0x0a, 0x02, 0x6c, 0x76, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0e, 0x0a,
	0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x03, 0x12, 0x0c, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28, 0x09, 0x12, 0x0e, 0x0a, 0x06, 0x68,
	0x65, 0x72, 0x6f, 0x4c, 0x76, 0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x68,
	0x65, 0x72, 0x6f, 0x49, 0x64, 0x18, 0x06, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x02, 0x28, 0x05, 0x12, 0x15, 0x0a, 0x0d, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x12, 0x19, 0x0a, 0x11, 0x63, 0x61, 0x6e, 0x4d, 0x61, 0x78, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x12, 0x14, 0x0a, 0x0c,
	0x68, 0x65, 0x72, 0x6f, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x05, 0x12, 0x15, 0x0a, 0x0d, 0x68, 0x65, 0x72, 0x6f, 0x44, 0x65, 0x63, 0x6f, 0x72, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x22, 0xe1, 0x02, 0x0a, 0x08, 0x4d, 0x61,
	0x70, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x0b, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x05, 0x12, 0x0d, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05,
	0x12, 0x0c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0c,
	0x0a, 0x04, 0x63, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x12, 0x19, 0x0a, 0x07,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x10, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x62, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x12, 0x0c, 0x0a, 0x04, 0x70, 0x72, 0x6f,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x12, 0x11, 0x0a, 0x09, 0x73, 0x75, 0x6d, 0x6d, 0x6f,
	0x6e, 0x43, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x12, 0x11, 0x0a, 0x09, 0x73, 0x75,
	0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x12, 0x12, 0x0a,
	0x0a, 0x73, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x05, 0x12, 0x0e, 0x0a, 0x06, 0x6c, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x03, 0x12, 0x13, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x12, 0x12, 0x0a, 0x0a, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x73, 0x65,
	0x71, 0x49, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x12, 0x14, 0x0a, 0x0c, 0x72, 0x65, 0x62,
	0x65, 0x6c, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x12,
	0x15, 0x0a, 0x0d, 0x65, 0x63, 0x69, 0x73, 0x69, 0x76, 0x65, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x12, 0x15, 0x0a, 0x0d, 0x77, 0x68, 0x69, 0x74, 0x65, 0x46,
	0x6c, 0x61, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x22, 0x3c, 0x0a,
	0x0d, 0x43, 0x61, 0x6d, 0x70, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x0c,
	0x0a, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x12, 0x0d, 0x0a, 0x05,
	0x72, 0x61, 0x6e, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x72,
	0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x22, 0xaf, 0x02, 0x0a, 0x07,
	0x4d, 0x61, 0x70, 0x43, 0x69, 0x74, 0x79, 0x12, 0x0b, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x63, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x63, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x02,
	0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x66, 0x72, 0x65, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x12, 0x10, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x12, 0x12, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x12, 0x0d, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x12, 0x14, 0x0a, 0x0c, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69,
	0x67, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x12, 0x1c, 0x0a, 0x04,
	0x72, 0x6f, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x43, 0x61, 0x6d,
	0x70, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x13, 0x0a, 0x0b, 0x70, 0x72,
	0x6f, 0x74, 0x65, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x12,
	0x0e, 0x0a, 0x06, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x12,
	0x1a, 0x0a, 0x12, 0x68, 0x61, 0x73, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4b, 0x69, 0x6c, 0x6c, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x12, 0x0e, 0x0a, 0x06, 0x63,
	0x75, 0x72, 0x41, 0x72, 0x6d, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x6d,
	0x61, 0x78, 0x41, 0x72, 0x6d, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x12, 0x10, 0x0a, 0x08, 0x63,
	0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x22, 0xd3, 0x01,
	0x0a, 0x07, 0x4d, 0x61, 0x70, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x10, 0x0a, 0x08, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x50, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x65,
	0x6e, 0x64, 0x50, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x6e,
	0x69, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x12, 0x11, 0x0a, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07,
	0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0c, 0x0a,
	0x04, 0x63, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x6b,
	0x65, 0x79, 0x49, 0x64, 0x18, 0x07, 0x20, 0x02, 0x28, 0x05, 0x12, 0x11, 0x0a, 0x09, 0x61, 0x72,
	0x6d, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x12, 0x10, 0x0a,
	0x08, 0x61, 0x72, 0x6d, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x12,
	0x0e, 0x0a, 0x06, 0x68, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x05, 0x12,
	0x12, 0x0a, 0x0a, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x6c, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x03, 0x22, 0x47, 0x0a, 0x04, 0x41, 0x72, 0x65, 0x61, 0x12, 0x0c, 0x0a, 0x04, 0x61,
	0x72, 0x65, 0x61, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x12, 0x21, 0x0a, 0x09, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x4b, 0x69, 0x6c, 0x6c, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x43,
	0x69, 0x74, 0x79, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4b, 0x69, 0x6c, 0x6c, 0x22, 0x63, 0x0a, 0x0d,
	0x43, 0x69, 0x74, 0x79, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4b, 0x69, 0x6c, 0x6c, 0x12, 0x10, 0x0a,
	0x08, 0x63, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x12,
	0x1f, 0x0a, 0x07, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4b, 0x69, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1f, 0x0a, 0x07, 0x61, 0x74, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4b, 0x69, 0x6c, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x2e, 0x0a, 0x0d, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4b, 0x69, 0x6c, 0x6c, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x0c, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x12, 0x0f, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x49, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x03, 0x22, 0x51, 0x0a, 0x10, 0x41, 0x74, 0x6b, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4b, 0x69, 0x6c,
	0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x06, 0x6c, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x12, 0x10, 0x0a, 0x08, 0x70, 0x6f, 0x72, 0x74, 0x72, 0x61, 0x69,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0d, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x22, 0x94, 0x01, 0x0a, 0x10, 0x43, 0x69, 0x74, 0x79, 0x41, 0x74, 0x6b,
	0x46, 0x69, 0x72, 0x73, 0x74, 0x4b, 0x69, 0x6c, 0x6c, 0x12, 0x0c, 0x0a, 0x04, 0x61, 0x72, 0x65,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x63, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x63, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x12, 0x22, 0x0a, 0x07, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x41, 0x74, 0x6b, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4b,
	0x69, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x07, 0x61, 0x74, 0x6b, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x41, 0x74, 0x6b, 0x46, 0x69,
	0x72, 0x73, 0x74, 0x4b, 0x69, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xea, 0x03, 0x0a, 0x04,
	0x43, 0x69, 0x74, 0x79, 0x12, 0x0e, 0x0a, 0x06, 0x63, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x63, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x02,
	0x28, 0x05, 0x12, 0x11, 0x0a, 0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x02, 0x28, 0x05, 0x12, 0x12, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x43,
	0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x12, 0x11, 0x0a, 0x09, 0x62, 0x65,
	0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0f, 0x0a,
	0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x12, 0x10,
	0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x12, 0x12, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x12, 0x14, 0x0a, 0x0c, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x12, 0x1c, 0x0a, 0x04, 0x72, 0x6f,
	0x6c, 0x65, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x70,
	0x61, 0x69, 0x67, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x13, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x72,
	0x61, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x12, 0x15, 0x0a,
	0x04, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x54, 0x77,
	0x6f, 0x49, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x06, 0x63, 0x69, 0x74, 0x79, 0x4c, 0x76, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x12, 0x0f, 0x0a, 0x07, 0x63, 0x69, 0x74, 0x79, 0x45, 0x78, 0x70, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x05, 0x12, 0x14, 0x0a, 0x0c, 0x61, 0x74, 0x6b, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07, 0x64, 0x65, 0x76,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x12, 0x13, 0x0a, 0x0b, 0x70, 0x72,
	0x6f, 0x74, 0x65, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x12,
	0x14, 0x0a, 0x0c, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18,
	0x15, 0x20, 0x03, 0x28, 0x03, 0x12, 0x21, 0x0a, 0x0f, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4b, 0x69,
	0x6c, 0x6c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x16, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08,
	0x2e, 0x49, 0x6e, 0x74, 0x4c, 0x6f, 0x6e, 0x67, 0x12, 0x13, 0x0a, 0x0b, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x69, 0x6e, 0x67, 0x45, 0x78, 0x70, 0x18, 0x17, 0x20, 0x01, 0x28, 0x05, 0x12, 0x19, 0x0a,
	0x11, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x49, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x05, 0x22, 0xfa, 0x01, 0x0a, 0x04, 0x41, 0x72, 0x6d,
	0x79, 0x12, 0x0d, 0x0a, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05,
	0x12, 0x0c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0e,
	0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0d,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x12, 0x10, 0x0a,
	0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x12,
	0x0f, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x02, 0x28, 0x05,
	0x12, 0x15, 0x0a, 0x04, 0x68, 0x65, 0x72, 0x6f, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07,
	0x2e, 0x54, 0x77, 0x6f, 0x49, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x04, 0x67, 0x72, 0x61, 0x62, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x41, 0x77, 0x61, 0x72, 0x64, 0x12, 0x10, 0x0a,
	0x08, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x12,
	0x0a, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x12, 0x12, 0x0a, 0x0a, 0x62,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x12,
	0x0e, 0x0a, 0x06, 0x6c, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x12,
	0x11, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x4c, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x03, 0x12, 0x11, 0x0a, 0x09, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x50, 0x6f, 0x73, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x05, 0x22, 0x93, 0x03, 0x0a, 0x04, 0x43, 0x68, 0x61, 0x74, 0x12, 0x0c,
	0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0c, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x12, 0x10, 0x0a, 0x08, 0x70,
	0x6f, 0x72, 0x74, 0x72, 0x61, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0b, 0x0a,
	0x03, 0x76, 0x69, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0b, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0e, 0x0a, 0x06, 0x6d, 0x6f, 0x6c, 0x64, 0x49,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x12, 0x0e, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x69, 0x73, 0x47, 0x6d, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x08, 0x12, 0x10, 0x0a, 0x08, 0x69, 0x73, 0x47, 0x75, 0x69, 0x64, 0x65, 0x72, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x08, 0x12, 0x0a, 0x0a, 0x02, 0x6c, 0x76, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x05, 0x12, 0x0b, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0c,
	0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07,
	0x6d, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x11, 0x20, 0x03, 0x28, 0x09, 0x12, 0x0e, 0x0a,
	0x06, 0x6c, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x12, 0x0c, 0x0a,
	0x04, 0x63, 0x61, 0x6d, 0x70, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x72,
	0x61, 0x6e, 0x6b, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x12, 0x12, 0x0a, 0x0a, 0x69, 0x73,
	0x43, 0x61, 0x6d, 0x70, 0x43, 0x68, 0x61, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x12, 0x10,
	0x0a, 0x08, 0x62, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x05,
	0x12, 0x0f, 0x0a, 0x07, 0x72, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28,
	0x05, 0x12, 0x14, 0x0a, 0x0c, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x05, 0x12, 0x12, 0x0a, 0x0a, 0x6d, 0x79, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x19, 0x20, 0x01, 0x28, 0x05, 0x22, 0xe3, 0x01, 0x0a, 0x0a,
	0x43, 0x68, 0x61, 0x74, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x12, 0x10, 0x0a, 0x08, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x12, 0x10, 0x0a, 0x08,
	0x70, 0x6f, 0x72, 0x74, 0x72, 0x61, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0a,
	0x0a, 0x02, 0x6c, 0x76, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0b, 0x0a, 0x03, 0x6a, 0x6f,
	0x62, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0b, 0x0a, 0x03, 0x76, 0x69, 0x70, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x12, 0x0c, 0x0a, 0x04, 0x63, 0x61, 0x6d, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0b,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0c, 0x0a, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x69, 0x73, 0x53,
	0x65, 0x6c, 0x66, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x12, 0x0d, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x12, 0x10, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x12, 0x15, 0x0a, 0x0d, 0x69, 0x73,
	0x43, 0x61, 0x6d, 0x70, 0x43, 0x68, 0x61, 0x74, 0x44, 0x69, 0x61, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x05, 0x22, 0x36, 0x0a, 0x0d, 0x44, 0x62, 0x43, 0x68, 0x61, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x12, 0x0f, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x09, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x05, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x22, 0x44, 0x0a, 0x0c, 0x44, 0x62, 0x43,
	0x68, 0x61, 0x74, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x12, 0x10, 0x0a, 0x08, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x12, 0x0d, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x12, 0x13, 0x0a, 0x04, 0x63, 0x68,
	0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x22,
	0x43, 0x0a, 0x12, 0x44, 0x62, 0x43, 0x68, 0x61, 0x74, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x42,
	0x79, 0x4c, 0x6f, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x03, 0x12, 0x1d, 0x0a, 0x06, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x44, 0x62, 0x43, 0x68, 0x61, 0x74, 0x44, 0x69,
	0x61, 0x6c, 0x6f, 0x67, 0x22, 0x32, 0x0a, 0x06, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x12, 0x0a,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0b, 0x0a, 0x03, 0x76,
	0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x22, 0x2b, 0x0a, 0x04, 0x54, 0x65, 0x63, 0x68,
	0x12, 0x0a, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0a, 0x0a, 0x02,
	0x6c, 0x76, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0b, 0x0a, 0x03, 0x65, 0x78, 0x70, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x22, 0x7b, 0x0a, 0x07, 0x54, 0x65, 0x63, 0x68, 0x51, 0x75, 0x65,
	0x12, 0x0e, 0x0a, 0x06, 0x74, 0x65, 0x63, 0x68, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x12, 0x13, 0x0a, 0x0b, 0x74, 0x65, 0x63, 0x68, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x12, 0x14, 0x0a, 0x0c, 0x66, 0x72, 0x65, 0x65, 0x53, 0x70, 0x65,
	0x65, 0x64, 0x43, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x12, 0x10, 0x0a, 0x08, 0x66,
	0x72, 0x65, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x12, 0x14, 0x0a,
	0x0c, 0x66, 0x72, 0x65, 0x65, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x43, 0x6e, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x22, 0x33, 0x0a, 0x07, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x0c, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0a, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x70, 0x72, 0x61, 0x72, 0x61,
	0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x22, 0xd0, 0x02, 0x0a, 0x06, 0x42, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x12, 0x10, 0x0a, 0x08, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x12, 0x12, 0x0a, 0x0a, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07, 0x61, 0x74, 0x6b, 0x43,
	0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07, 0x64, 0x65, 0x66,
	0x43, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x61, 0x74,
	0x6b, 0x50, 0x6f, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x64, 0x65,
	0x66, 0x50, 0x6f, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07, 0x61, 0x74,
	0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0f, 0x0a, 0x07, 0x64,
	0x65, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x12, 0x12, 0x0a, 0x0a,
	0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05,
	0x12, 0x16, 0x0a, 0x0e, 0x61, 0x74, 0x6b, 0x48, 0x65, 0x6c, 0x70, 0x43, 0x68, 0x61, 0x74, 0x43,
	0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x12, 0x16, 0x0a, 0x0e, 0x64, 0x65, 0x66, 0x48,
	0x65, 0x6c, 0x70, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05,
	0x12, 0x11, 0x0a, 0x09, 0x61, 0x74, 0x6b, 0x43, 0x69, 0x74, 0x79, 0x4c, 0x76, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x05, 0x12, 0x11, 0x0a, 0x09, 0x64, 0x65, 0x66, 0x43, 0x69, 0x74, 0x79, 0x4c, 0x76,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x12, 0x11, 0x0a, 0x09, 0x61, 0x74, 0x6b, 0x4c, 0x6f, 0x72,
	0x64, 0x49, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x12, 0x11, 0x0a, 0x09, 0x64, 0x65, 0x66,
	0x4c, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x12, 0x0c, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x22, 0x3b, 0x0a, 0x0a, 0x42, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x12, 0x0e, 0x0a, 0x06, 0x68, 0x65, 0x72, 0x6f,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x6b, 0x65, 0x79, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x22, 0xb8, 0x02, 0x0a, 0x08, 0x42, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x50, 0x4f, 0x12, 0x10, 0x0a, 0x08, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0b, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28,
	0x05, 0x12, 0x12, 0x0a, 0x0a, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x02, 0x28, 0x05, 0x12, 0x11, 0x0a, 0x09, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72,
	0x49, 0x64, 0x18, 0x05, 0x20, 0x02, 0x28, 0x03, 0x12, 0x12, 0x0a, 0x0a, 0x64, 0x65, 0x66, 0x65,
	0x6e, 0x63, 0x65, 0x72, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x12, 0x1c, 0x0a, 0x07,
	0x61, 0x74, 0x6b, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x07, 0x64, 0x65,
	0x66, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x42, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x0f, 0x0a, 0x07, 0x61, 0x74, 0x6b, 0x43,
	0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07, 0x61, 0x74, 0x6b,
	0x43, 0x61, 0x6d, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x12, 0x10, 0x0a, 0x08, 0x61, 0x74,
	0x6b, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x03, 0x12, 0x10, 0x0a, 0x08,
	0x64, 0x65, 0x66, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x03, 0x12, 0x0e,
	0x0a, 0x06, 0x61, 0x74, 0x6b, 0x50, 0x6f, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x12, 0x12,
	0x0a, 0x0a, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x61, 0x74, 0x6b, 0x41, 0x72, 0x6d, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x64, 0x65, 0x66, 0x41, 0x72, 0x6d, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x05, 0x22, 0x98, 0x01, 0x0a, 0x0b, 0x43, 0x68, 0x65, 0x6d, 0x69, 0x63, 0x61, 0x6c, 0x51,
	0x75, 0x65, 0x12, 0x0a, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0f,
	0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x12,
	0x0e, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x12,
	0x0e, 0x0a, 0x06, 0x70, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x12,
	0x0b, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x12, 0x10, 0x0a, 0x08,
	0x63, 0x6c, 0x6f, 0x6e, 0x65, 0x50, 0x6f, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x12, 0x0b,
	0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x12, 0x11, 0x0a, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x22, 0x52, 0x0a,
	0x0a, 0x43, 0x61, 0x6d, 0x70, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x06, 0x63,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07, 0x61,
	0x74, 0x6b, 0x43, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07,
	0x64, 0x65, 0x66, 0x43, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x12, 0x12, 0x0a,
	0x0a, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28,
	0x05, 0x22, 0x35, 0x0a, 0x0a, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x0c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0a, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x03, 0x22, 0x96, 0x01, 0x0a, 0x09, 0x50, 0x61, 0x72,
	0x74, 0x79, 0x43, 0x69, 0x74, 0x79, 0x12, 0x0b, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x63, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x63, 0x69, 0x74, 0x79, 0x4c, 0x76, 0x18, 0x03, 0x20,
	0x02, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x41, 0x72, 0x6d, 0x18, 0x04, 0x20,
	0x02, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x6d, 0x61, 0x78, 0x41, 0x72, 0x6d, 0x18, 0x05, 0x20,
	0x02, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x12, 0x0f, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x12, 0x1c, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x6f, 0x6c,
	0x65, 0x22, 0x5d, 0x0a, 0x0e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x52,
	0x61, 0x6e, 0x6b, 0x12, 0x0c, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x12, 0x0c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x12,
	0x0d, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0e,
	0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x12, 0x10,
	0x0a, 0x08, 0x72, 0x61, 0x6e, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x22, 0x36, 0x0a, 0x08, 0x50, 0x61, 0x72, 0x74, 0x79, 0x4c, 0x6f, 0x67, 0x12, 0x0d, 0x0a, 0x05,
	0x6c, 0x6f, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x22, 0x7f, 0x0a, 0x08, 0x50, 0x61, 0x72, 0x74,
	0x79, 0x4a, 0x6f, 0x62, 0x12, 0x0e, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x03, 0x12, 0x0c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x09, 0x12, 0x0b, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x12,
	0x0a, 0x0a, 0x02, 0x6c, 0x76, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x66,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x12, 0x0c, 0x0a, 0x04, 0x61, 0x72,
	0x65, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x12, 0x10, 0x0a, 0x08, 0x70, 0x6f, 0x72, 0x74,
	0x72, 0x61, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x72, 0x61,
	0x6e, 0x6b, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x22, 0x66, 0x0a, 0x0d, 0x50, 0x61, 0x72,
	0x74, 0x79, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x06, 0x72, 0x6f,
	0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x12, 0x0c, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x12, 0x0d, 0x0a, 0x05, 0x76, 0x6f, 0x74, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0a, 0x0a, 0x02, 0x6c, 0x76, 0x18, 0x04, 0x20,
	0x02, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x66, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x02,
	0x28, 0x03, 0x12, 0x0d, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x6b, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x22, 0x8a, 0x01, 0x0a, 0x08, 0x52, 0x61, 0x6e, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0c,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0a, 0x0a, 0x02,
	0x6c, 0x76, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x12, 0x0c, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x63, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x12, 0x0d, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09,
	0x12, 0x0c, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0e,
	0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x22, 0x32,
	0x0a, 0x0a, 0x54, 0x79, 0x70, 0x65, 0x41, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x0c, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x41, 0x77, 0x61,
	0x72, 0x64, 0x22, 0x8b, 0x02, 0x0a, 0x03, 0x4d, 0x61, 0x6e, 0x12, 0x0e, 0x0a, 0x06, 0x6c, 0x6f,
	0x72, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x12, 0x0c, 0x0a, 0x04, 0x69, 0x63,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0b, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x12, 0x0d, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x66, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x12, 0x0d, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x6b, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x12, 0x0b, 0x0a, 0x03, 0x65, 0x78, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0b, 0x0a,
	0x03, 0x70, 0x6f, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0b, 0x0a, 0x03, 0x76, 0x69,
	0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x63, 0x61, 0x6d, 0x70, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x05, 0x12, 0x11, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0b, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x05, 0x12, 0x10, 0x0a, 0x08, 0x66, 0x69, 0x67, 0x68, 0x74, 0x4e, 0x75, 0x6d, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x05, 0x12, 0x1a, 0x0a, 0x09, 0x53, 0x68, 0x6f, 0x77, 0x46, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x54, 0x77, 0x6f, 0x49, 0x6e, 0x74,
	0x22, 0xa2, 0x01, 0x0a, 0x08, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a,
	0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x12, 0x0c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x12,
	0x11, 0x0a, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x02,
	0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x02, 0x28, 0x05, 0x12, 0x13, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x12, 0x0c, 0x0a, 0x04, 0x74, 0x69, 0x70, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x12, 0x11, 0x0a, 0x09, 0x61, 0x77, 0x61, 0x72, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x05, 0x22, 0x7e, 0x0a, 0x0c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x43, 0x6f, 0x6e, 0x64, 0x12, 0x0d, 0x0a, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x12, 0x15, 0x0a, 0x05, 0x61, 0x77, 0x61, 0x72, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x06, 0x2e, 0x41, 0x77, 0x61, 0x72, 0x64, 0x12, 0x0d, 0x0a, 0x05, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0c, 0x0a, 0x04, 0x63, 0x6f, 0x6e, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x22, 0x38, 0x0a, 0x07, 0x44, 0x61, 0x79, 0x37, 0x41, 0x63, 0x74,
	0x12, 0x0d, 0x0a, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12,
	0x0e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x12,
	0x0e, 0x0a, 0x06, 0x72, 0x65, 0x63, 0x76, 0x65, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x22,
	0x48, 0x0a, 0x10, 0x41, 0x74, 0x6b, 0x43, 0x69, 0x74, 0x79, 0x41, 0x63, 0x74, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x12, 0x0d, 0x0a, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x72, 0x65, 0x63, 0x76, 0x65, 0x64, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x05, 0x12, 0x15, 0x0a, 0x05, 0x61, 0x77, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x06, 0x2e, 0x41, 0x77, 0x61, 0x72, 0x64, 0x22, 0x68, 0x0a, 0x0e, 0x41, 0x74, 0x6b,
	0x43, 0x69, 0x74, 0x79, 0x41, 0x63, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x0d, 0x0a, 0x05, 0x6b,
	0x65, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0b, 0x0a, 0x03, 0x64, 0x61,
	0x79, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x63, 0x6f, 0x6e, 0x64, 0x18,
	0x03, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04,
	0x20, 0x02, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x63, 0x65, 0x18, 0x05,
	0x20, 0x02, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x22, 0x33, 0x0a, 0x0a, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x48, 0x65, 0x72,
	0x6f, 0x12, 0x10, 0x0a, 0x08, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x05, 0x12, 0x13, 0x0a, 0x04, 0x68, 0x65, 0x72, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x05, 0x2e, 0x48, 0x65, 0x72, 0x6f, 0x22, 0x56, 0x0a, 0x09, 0x57, 0x6f, 0x72, 0x6c,
	0x64, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x0e, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x43, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x63, 0x61, 0x6d, 0x70, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x12, 0x0a, 0x0a, 0x02, 0x68, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x12, 0x0e, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x22, 0x33, 0x0a, 0x05, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x0d, 0x0a, 0x05, 0x6e, 0x70, 0x63,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0a, 0x0a, 0x02, 0x68, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x4c, 0x69, 0x6e, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x22, 0x3a, 0x0a, 0x08, 0x44, 0x62, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x12, 0x0e, 0x0a, 0x06, 0x6c, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x03, 0x12, 0x0f, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28,
	0x05, 0x22, 0x56, 0x0a, 0x06, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x11, 0x0a, 0x03, 0x6d,
	0x61, 0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x04, 0x2e, 0x4d, 0x61, 0x6e, 0x12, 0x0f,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x12,
	0x0d, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x12, 0x19,
	0x0a, 0x04, 0x68, 0x65, 0x72, 0x6f, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x48, 0x65, 0x72, 0x6f, 0x22, 0x9b, 0x01, 0x0a, 0x0a, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x48, 0x65, 0x72, 0x6f, 0x12, 0x0e, 0x0a, 0x06, 0x68, 0x65, 0x72, 0x6f,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0b, 0x0a, 0x03, 0x65, 0x78, 0x70, 0x18, 0x03,
	0x20, 0x02, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x12, 0x0b, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x12, 0x11, 0x0a, 0x09, 0x64, 0x65, 0x63, 0x6f, 0x72, 0x61, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x12, 0x17, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x73, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x54, 0x77, 0x6f, 0x49, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x70, 0x6c, 0x61, 0x6e, 0x65, 0x50, 0x6f, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07,
	0x2e, 0x54, 0x77, 0x6f, 0x49, 0x6e, 0x74, 0x22, 0x4a, 0x0a, 0x12, 0x44, 0x62, 0x4d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x41, 0x70, 0x70, 0x72, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x65, 0x12, 0x0e, 0x0a,
	0x06, 0x6c, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x12, 0x12, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x05, 0x12, 0x10, 0x0a, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x02, 0x28, 0x05, 0x22, 0x4b, 0x0a, 0x10, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x41, 0x70, 0x70,
	0x72, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x65, 0x12, 0x11, 0x0a, 0x03, 0x6d, 0x61, 0x6e, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x0b, 0x32, 0x04, 0x2e, 0x4d, 0x61, 0x6e, 0x12, 0x12, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x12, 0x10,
	0x0a, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05,
	0x22, 0x88, 0x01, 0x0a, 0x0d, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x68, 0x61, 0x77, 0x6b, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x0d, 0x0a, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x12, 0x0c, 0x0a, 0x04, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x12,
	0x0d, 0x0a, 0x05, 0x61, 0x77, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x12, 0x13,
	0x0a, 0x0b, 0x69, 0x73, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x64, 0x18, 0x04, 0x20,
	0x02, 0x28, 0x08, 0x12, 0x0d, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x02,
	0x28, 0x05, 0x12, 0x10, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x12, 0x15, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x22, 0x8e, 0x01, 0x0a, 0x0c,
	0x41, 0x63, 0x74, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x68, 0x61, 0x77, 0x6b, 0x12, 0x13, 0x0a, 0x0b,
	0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x12, 0x17, 0x0a, 0x0f, 0x70, 0x61, 0x79, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x12, 0x14, 0x0a, 0x0c, 0x72, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x12, 0x12, 0x0a, 0x0a, 0x69, 0x73, 0x52, 0x65, 0x63, 0x76, 0x48, 0x65, 0x72, 0x6f, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x12, 0x26, 0x0a, 0x0e, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x68, 0x61, 0x77,
	0x6b, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x42,
	0x6c, 0x61, 0x63, 0x6b, 0x68, 0x61, 0x77, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x9c, 0x01, 0x0a,
	0x0d, 0x41, 0x63, 0x74, 0x42, 0x61, 0x72, 0x74, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0d,
	0x0a, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0c, 0x0a,
	0x04, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x61,
	0x77, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x12, 0x13, 0x0a, 0x0b, 0x69, 0x73,
	0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x64, 0x18, 0x04, 0x20, 0x02, 0x28, 0x08, 0x12,
	0x0d, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x12, 0x10,
	0x0a, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x12, 0x15, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x12, 0x12, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x22, 0x67, 0x0a, 0x09, 0x41,
	0x63, 0x74, 0x42, 0x61, 0x72, 0x74, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x14, 0x0a, 0x0c,
	0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x12, 0x1d, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x41, 0x63, 0x74, 0x42, 0x61, 0x72, 0x74, 0x6f, 0x6e, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x11, 0x0a, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x22, 0x49, 0x0a, 0x0d, 0x44, 0x62, 0x41, 0x63, 0x74, 0x54, 0x75, 0x72,
	0x6e, 0x70, 0x6c, 0x61, 0x74, 0x12, 0x14, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x12, 0x12, 0x0a, 0x0a, 0x73,
	0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x43, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x12,
	0x0e, 0x0a, 0x06, 0x77, 0x69, 0x6e, 0x43, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x22,
	0x4b, 0x0a, 0x0f, 0x44, 0x62, 0x45, 0x71, 0x75, 0x69, 0x70, 0x54, 0x75, 0x72, 0x6e, 0x70, 0x6c,
	0x61, 0x74, 0x12, 0x14, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x12, 0x12, 0x0a, 0x0a, 0x73, 0x70, 0x65, 0x63,
	0x69, 0x61, 0x6c, 0x43, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06,
	0x77, 0x69, 0x6e, 0x43, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x22, 0x30, 0x0a, 0x0d,
	0x44, 0x62, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x12, 0x0c, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x12, 0x11, 0x0a, 0x09, 0x73,
	0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x22, 0x89,
	0x01, 0x0a, 0x07, 0x41, 0x63, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x0e, 0x0a, 0x06, 0x6c, 0x6f,
	0x72, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x12, 0x0c, 0x0a, 0x04, 0x72, 0x61,
	0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x12, 0x10, 0x0a, 0x08, 0x72, 0x61, 0x6e, 0x6b,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x12, 0x11, 0x0a, 0x09, 0x72, 0x61,
	0x6e, 0x6b, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x12, 0x0d, 0x0a,
	0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0c, 0x0a, 0x04,
	0x6e, 0x69, 0x63, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x12, 0x10, 0x0a, 0x08, 0x72, 0x61,
	0x6e, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04,
	0x63, 0x61, 0x6d, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x22, 0x52, 0x0a, 0x09, 0x52, 0x61,
	0x6e, 0x6b, 0x41, 0x77, 0x61, 0x72, 0x64, 0x12, 0x0c, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x72, 0x61, 0x6e, 0x6b, 0x45, 0x64, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x05, 0x12, 0x10, 0x0a, 0x08, 0x72, 0x61, 0x6e, 0x6b, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x12, 0x15, 0x0a, 0x05, 0x61, 0x77, 0x61, 0x72, 0x64,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x41, 0x77, 0x61, 0x72, 0x64, 0x22, 0x4f,
	0x0a, 0x0b, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x12, 0x0b, 0x0a,
	0x03, 0x70, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x15, 0x0a, 0x0d, 0x63, 0x61,
	0x62, 0x69, 0x6e, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x05, 0x12, 0x0e, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28,
	0x03, 0x12, 0x0c, 0x0a, 0x04, 0x63, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x22,
	0x59, 0x0a, 0x06, 0x53, 0x75, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x0d, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x10, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x12, 0x11, 0x0a, 0x09, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x64, 0x49, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x12, 0x0e, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0b, 0x0a,
	0x03, 0x73, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x22, 0x30, 0x0a, 0x0b, 0x53, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x74, 0x61, 0x73, 0x6b, 0x12, 0x11, 0x0a, 0x09, 0x73, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x22, 0x6e, 0x0a, 0x0b,
	0x52, 0x6f, 0x62, 0x6f, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x73, 0x12, 0x14, 0x0a, 0x0c, 0x61,
	0x72, 0x65, 0x61, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x12, 0x16, 0x0a, 0x0e, 0x61, 0x72, 0x65, 0x61, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x12, 0x15, 0x0a, 0x0d, 0x65, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05,
	0x12, 0x1a, 0x0a, 0x12, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x22, 0x5a, 0x0a, 0x07,
	0x50, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0d, 0x0a, 0x05, 0x50, 0x61, 0x79, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07, 0x62, 0x61, 0x6e, 0x46, 0x6c, 0x61,
	0x67, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x75, 0x70, 0x18,
	0x04, 0x20, 0x02, 0x28, 0x05, 0x12, 0x11, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x72, 0x61, 0x47, 0x6f,
	0x6c, 0x64, 0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x22, 0xc8, 0x01, 0x0a, 0x0f, 0x54, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x47, 0x69, 0x66, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x11, 0x0a, 0x09,
	0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x12,
	0x0e, 0x0a, 0x06, 0x67, 0x69, 0x66, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x12,
	0x0d, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x12, 0x10,
	0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x12, 0x0e, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x02, 0x28, 0x03,
	0x12, 0x0d, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x12,
	0x19, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x08, 0x2e, 0x50, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x0a, 0x70, 0x61,
	0x79, 0x69, 0x6e, 0x66, 0x6f, 0x49, 0x6f, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08,
	0x2e, 0x50, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0c, 0x0a, 0x04, 0x67, 0x6f, 0x6c, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0b, 0x0a, 0x03, 0x63, 0x75, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x05, 0x22, 0xc3, 0x01, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x13, 0x0a, 0x04, 0x70, 0x72, 0x6f, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x05, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x12, 0x15, 0x0a, 0x05, 0x65, 0x71, 0x75, 0x69, 0x70,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x45, 0x71, 0x75, 0x69, 0x70, 0x12, 0x13,
	0x0a, 0x04, 0x68, 0x65, 0x72, 0x6f, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x48,
	0x65, 0x72, 0x6f, 0x12, 0x1f, 0x0a, 0x0a, 0x73, 0x75, 0x70, 0x65, 0x72, 0x45, 0x71, 0x75, 0x69,
	0x70, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x53, 0x75, 0x70, 0x65, 0x72, 0x45,
	0x71, 0x75, 0x69, 0x70, 0x12, 0x13, 0x0a, 0x04, 0x74, 0x65, 0x63, 0x68, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x05, 0x2e, 0x54, 0x65, 0x63, 0x68, 0x12, 0x1c, 0x0a, 0x05, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x69, 0x6e, 0x67, 0x42, 0x61, 0x73, 0x65, 0x12, 0x13, 0x0a, 0x04, 0x6d, 0x69, 0x6c, 0x6c, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x4d, 0x69, 0x6c, 0x6c, 0x12, 0x0b, 0x0a, 0x03,
	0x65, 0x78, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x22, 0x5a, 0x0a, 0x07, 0x47, 0x65, 0x73,
	0x74, 0x61, 0x70, 0x6f, 0x12, 0x0b, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x12, 0x11, 0x0a, 0x09, 0x67, 0x65, 0x73, 0x74, 0x61, 0x70, 0x6f, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x02, 0x28, 0x03, 0x12, 0x0f, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x05, 0x20, 0x02, 0x28, 0x05, 0x22, 0x45, 0x0a, 0x0d, 0x47, 0x65, 0x73, 0x74, 0x61, 0x70, 0x6f,
	0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x12, 0x0f, 0x0a, 0x07, 0x67, 0x65, 0x73, 0x74, 0x61, 0x70,
	0x6f, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07, 0x61, 0x74, 0x6b, 0x43, 0x61,
	0x6d, 0x70, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x12, 0x12, 0x0a, 0x0a, 0x62, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x22, 0x3a, 0x0a, 0x0f,
	0x47, 0x65, 0x73, 0x74, 0x61, 0x70, 0x6f, 0x43, 0x61, 0x6d, 0x70, 0x52, 0x61, 0x6e, 0x6b, 0x12,
	0x0c, 0x0a, 0x04, 0x63, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0b, 0x0a,
	0x03, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x22, 0x25, 0x0a, 0x05, 0x53, 0x74, 0x6f, 0x6e,
	0x65, 0x12, 0x0f, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x05, 0x12, 0x0b, 0x0a, 0x03, 0x63, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x22,
	0x55, 0x0a, 0x0c, 0x53, 0x74, 0x6f, 0x6e, 0x65, 0x49, 0x6d, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x12,
	0x0d, 0x0a, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x16,
	0x0a, 0x0e, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x49, 0x6d, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0b, 0x0a, 0x03, 0x65, 0x78, 0x70, 0x18, 0x03, 0x20,
	0x02, 0x28, 0x05, 0x12, 0x11, 0x0a, 0x09, 0x68, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x22, 0x3d, 0x0a, 0x09, 0x53, 0x74, 0x6f, 0x6e, 0x65, 0x48,
	0x6f, 0x6c, 0x65, 0x12, 0x11, 0x0a, 0x09, 0x68, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x22, 0x95, 0x01, 0x0a, 0x09, 0x53, 0x74, 0x6f, 0x6e, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x15, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x06, 0x2e, 0x53, 0x74, 0x6f, 0x6e, 0x65, 0x12, 0x1d, 0x0a, 0x09, 0x73, 0x74,
	0x6f, 0x6e, 0x65, 0x48, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x53, 0x74, 0x6f, 0x6e, 0x65, 0x48, 0x6f, 0x6c, 0x65, 0x12, 0x17, 0x0a, 0x0f, 0x61, 0x74, 0x74,
	0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x43, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x12, 0x14, 0x0a, 0x0c, 0x62, 0x75, 0x79, 0x43, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x43,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x12, 0x23, 0x0a, 0x0c, 0x73, 0x74, 0x6f, 0x6e,
	0x65, 0x49, 0x6d, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x53, 0x74, 0x6f, 0x6e, 0x65, 0x49, 0x6d, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x22, 0x5a, 0x0a,
	0x0b, 0x46, 0x65, 0x6d, 0x61, 0x6c, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x0a, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07, 0x71, 0x75, 0x61, 0x6c,
	0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07, 0x61, 0x74, 0x74,
	0x72, 0x56, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x12, 0x10, 0x0a, 0x08, 0x73, 0x6b,
	0x69, 0x6c, 0x6c, 0x56, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0b, 0x0a, 0x03,
	0x65, 0x78, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x22, 0x38, 0x0a, 0x07, 0x42, 0x61, 0x72,
	0x72, 0x61, 0x67, 0x65, 0x12, 0x0c, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x05, 0x12, 0x10, 0x0a, 0x08, 0x62, 0x61, 0x72, 0x72, 0x67, 0x65, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x22, 0x57, 0x0a, 0x0d, 0x54, 0x75, 0x72, 0x6e, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0a, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x12, 0x0d, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x12,
	0x0d, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0d,
	0x0a, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0d, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x22, 0x5c, 0x0a, 0x12,
	0x45, 0x71, 0x75, 0x69, 0x70, 0x54, 0x75, 0x72, 0x6e, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x0a, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0d,
	0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0d, 0x0a,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x22, 0x7b, 0x0a, 0x0d, 0x52, 0x65,
	0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x06, 0x72,
	0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x12, 0x0c, 0x0a, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x6e, 0x69, 0x63,
	0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0f, 0x0a, 0x07, 0x61, 0x77, 0x61, 0x72, 0x64,
	0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x6d, 0x73, 0x67, 0x49,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x12, 0x10, 0x0a, 0x08, 0x70, 0x6f, 0x72, 0x74, 0x72,
	0x61, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x63, 0x61, 0x6d,
	0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x22, 0xb1, 0x01, 0x0a, 0x09, 0x52, 0x65, 0x64, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x0a, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x12, 0x10, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x05, 0x12, 0x12, 0x0a, 0x0a, 0x65, 0x78, 0x63, 0x65, 0x65, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x12, 0x11, 0x0a, 0x09, 0x72, 0x65, 0x64, 0x50, 0x61,
	0x63, 0x6b, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x63, 0x68,
	0x61, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x12, 0x1c, 0x0a, 0x04, 0x72, 0x6f,
	0x6c, 0x65, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x52, 0x65, 0x64, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x11, 0x0a, 0x09, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x50, 0x6f, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x03, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x12, 0x0f, 0x0a, 0x07, 0x72, 0x65,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x22, 0x6e, 0x0a, 0x0d, 0x52,
	0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x0a, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x10, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x12, 0x12, 0x0a, 0x0a, 0x65, 0x78,
	0x63, 0x65, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0e,
	0x0a, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0d,
	0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x12, 0x0c, 0x0a,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x22, 0x8c, 0x01, 0x0a, 0x0c,
	0x44, 0x61, 0x79, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x0e, 0x0a, 0x06,
	0x67, 0x69, 0x66, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x67,
	0x72, 0x61, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x12, 0x15, 0x0a, 0x05, 0x61, 0x77,
	0x61, 0x72, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x41, 0x77, 0x61, 0x72,
	0x64, 0x12, 0x19, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x08, 0x2e, 0x50, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x0a,
	0x70, 0x61, 0x79, 0x69, 0x6e, 0x66, 0x6f, 0x49, 0x6f, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x08, 0x2e, 0x50, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xbb, 0x02, 0x0a, 0x09, 0x53,
	0x75, 0x70, 0x65, 0x72, 0x4d, 0x69, 0x6e, 0x65, 0x12, 0x0d, 0x0a, 0x05, 0x73, 0x65, 0x71, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x63, 0x61, 0x6d, 0x70, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0b, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28,
	0x05, 0x12, 0x10, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x12, 0x12, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x52, 0x65,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x12, 0x10, 0x0a, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63,
	0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x63, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x12, 0x11, 0x0a, 0x09, 0x62, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x05, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x41, 0x72, 0x6d, 0x79, 0x18, 0x0a, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x53, 0x75, 0x70, 0x65, 0x72, 0x47, 0x75, 0x61, 0x72, 0x64, 0x12, 0x17,
	0x0a, 0x08, 0x68, 0x65, 0x6c, 0x70, 0x41, 0x72, 0x6d, 0x79, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x05, 0x2e, 0x41, 0x72, 0x6d, 0x79, 0x12, 0x10, 0x0a, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x12, 0x11, 0x0a, 0x09, 0x72, 0x65, 0x6d,
	0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x12, 0x1d, 0x0a, 0x0b,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x0e, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x08, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x1b, 0x0a, 0x08, 0x68,
	0x65, 0x6c, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x57, 0x61, 0x6c, 0x6c, 0x48, 0x65, 0x72, 0x6f, 0x22, 0x94, 0x01, 0x0a, 0x0a, 0x53, 0x75, 0x70,
	0x65, 0x72, 0x47, 0x75, 0x61, 0x72, 0x64, 0x12, 0x13, 0x0a, 0x04, 0x61, 0x72, 0x6d, 0x79, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x41, 0x72, 0x6d, 0x79, 0x12, 0x11, 0x0a, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x12,
	0x16, 0x0a, 0x0e, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x12, 0x13, 0x0a, 0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x12, 0x19, 0x0a, 0x11,
	0x63, 0x61, 0x6e, 0x4d, 0x61, 0x78, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x12, 0x16, 0x0a, 0x0e, 0x61, 0x72, 0x6d, 0x79, 0x41,
	0x72, 0x72, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x22,
	0xfb, 0x01, 0x0a, 0x0b, 0x42, 0x65, 0x72, 0x6c, 0x69, 0x6e, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x12,
	0x10, 0x0a, 0x08, 0x61, 0x74, 0x6b, 0x4f, 0x72, 0x44, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x12, 0x0f, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x12, 0x1e, 0x0a, 0x08, 0x61, 0x74, 0x74, 0x72, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x53, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x0f, 0x0a, 0x07, 0x61, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x12, 0x12, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x6c, 0x65, 0x61, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0a, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x63, 0x61, 0x6d, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x12, 0x0d, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x12,
	0x13, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x66, 0x79, 0x4c, 0x76, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x05, 0x12, 0x17, 0x0a, 0x0f, 0x69, 0x6d, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74,
	0x65, 0x6c, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x22, 0xcd, 0x01,
	0x0a, 0x0b, 0x53, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a,
	0x06, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0e, 0x0a,
	0x06, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0c, 0x0a,
	0x04, 0x6c, 0x65, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x6c,
	0x69, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x63, 0x72, 0x69,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07, 0x63, 0x72, 0x69, 0x74, 0x44,
	0x65, 0x66, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07, 0x61, 0x74, 0x6b, 0x54,
	0x6f, 0x77, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07, 0x64, 0x65, 0x66,
	0x54, 0x6f, 0x77, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x61, 0x74,
	0x6b, 0x45, 0x78, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x64, 0x65,
	0x66, 0x45, 0x78, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x12, 0x12, 0x0a, 0x0a, 0x63, 0x72,
	0x69, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0d,
	0x0a, 0x05, 0x65, 0x76, 0x61, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x22, 0x28, 0x0a,
	0x0a, 0x43, 0x61, 0x6d, 0x70, 0x4f, 0x63, 0x63, 0x75, 0x70, 0x79, 0x12, 0x0c, 0x0a, 0x04, 0x63,
	0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x22, 0x2b, 0x0a, 0x09, 0x52, 0x61, 0x6e, 0x6b, 0x45,
	0x71, 0x75, 0x69, 0x70, 0x12, 0x0f, 0x0a, 0x07, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x6c, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x03, 0x22, 0x93, 0x01, 0x0a, 0x09, 0x42, 0x65, 0x72, 0x6c, 0x69, 0x6e, 0x4a,
	0x6f, 0x62, 0x12, 0x0e, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x03, 0x12, 0x0c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09,
	0x12, 0x0b, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0a, 0x0a,
	0x02, 0x6c, 0x76, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x63, 0x61, 0x6d,
	0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x12, 0x0c, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x12, 0x10, 0x0a, 0x08, 0x70, 0x6f, 0x72, 0x74, 0x72, 0x61, 0x69,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x6b, 0x73,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x12, 0x12, 0x0a, 0x0a, 0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x22, 0x81, 0x01, 0x0a, 0x0b, 0x48,
	0x6f, 0x6e, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x0d, 0x0a, 0x05, 0x69, 0x73,
	0x57, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x12, 0x12, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x12, 0x1d, 0x0a,
	0x03, 0x61, 0x74, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x48, 0x6f, 0x6e,
	0x6f, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x03,
	0x64, 0x65, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x48, 0x6f, 0x6e, 0x6f,
	0x72, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x11, 0x0a, 0x09, 0x68,
	0x6f, 0x6e, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x22, 0x61,
	0x0a, 0x0c, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x32, 0x12, 0x12,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x12, 0x1e, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x64, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x09, 0x22, 0x79, 0x0a, 0x0f, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x12, 0x0c, 0x0a, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x12, 0x0c, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x12, 0x0b, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0c, 0x0a,
	0x04, 0x63, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x72,
	0x61, 0x6e, 0x6b, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x12, 0x10, 0x0a, 0x08, 0x70, 0x6f,
	0x72, 0x74, 0x72, 0x61, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x22, 0x43, 0x0a, 0x0c,
	0x4f, 0x66, 0x66, 0x4c, 0x69, 0x6e, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x0c, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0a, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0a, 0x0a, 0x02, 0x6c, 0x76, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x6e, 0x65, 0x77, 0x4c, 0x76, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x22, 0x62, 0x0a, 0x0e, 0x42, 0x65, 0x72, 0x6c, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x73, 0x73, 0x43, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x12, 0x17, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x75, 0x72, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x12, 0x16,
	0x0a, 0x0e, 0x69, 0x6d, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x6c, 0x79, 0x43, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x61, 0x74, 0x6b, 0x43, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x22, 0x4c, 0x0a, 0x0e, 0x42, 0x65, 0x72, 0x6c, 0x69, 0x6e, 0x48,
	0x65, 0x72, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x06, 0x68, 0x65, 0x72, 0x6f, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0b, 0x0a, 0x03, 0x63, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x22, 0x5b, 0x0a, 0x0d, 0x42, 0x65, 0x72, 0x6c, 0x69, 0x6e, 0x41, 0x74, 0x6b,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x12, 0x0c, 0x0a, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x12, 0x0e, 0x0a, 0x06, 0x68, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x61, 0x72, 0x6d, 0x4e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x22, 0x90, 0x01, 0x0a, 0x11, 0x42, 0x65, 0x72, 0x6c, 0x69, 0x6e, 0x42, 0x61, 0x73, 0x69, 0x63,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x0d, 0x0a, 0x05, 0x69, 0x73, 0x57, 0x69, 0x6e, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x08, 0x12, 0x0f, 0x0a, 0x07, 0x61, 0x74, 0x6b, 0x4c, 0x6f, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x6c, 0x6f, 0x73, 0x74, 0x18, 0x03,
	0x20, 0x02, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x12, 0x0e, 0x0a, 0x06, 0x68, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x63, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x12, 0x11, 0x0a, 0x09, 0x64, 0x65, 0x63, 0x6f, 0x72, 0x61, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x05, 0x22, 0x42, 0x0a, 0x0c, 0x4d, 0x6f, 0x6e, 0x6f, 0x70, 0x6f, 0x6c, 0x79, 0x47,
	0x72, 0x69, 0x64, 0x12, 0x0d, 0x0a, 0x05, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x67, 0x72, 0x69, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05,
	0x12, 0x15, 0x0a, 0x05, 0x61, 0x77, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x06, 0x2e, 0x41, 0x77, 0x61, 0x72, 0x64, 0x22, 0x8e, 0x01, 0x0a, 0x0f, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x0a, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x12,
	0x0e, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x12,
	0x10, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x12, 0x0d, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x12, 0x10, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x12, 0x0c, 0x0a, 0x04, 0x63, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x12, 0x16, 0x0a, 0x0e, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x22, 0x84, 0x02, 0x0a, 0x0a, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x12, 0x0a, 0x0a, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x12, 0x14, 0x0a,
	0x0c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20,
	0x02, 0x28, 0x05, 0x12, 0x29, 0x0a, 0x02, 0x73, 0x63, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f,
	0x0a, 0x05, 0x61, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a,
	0x6e, 0x0a, 0x11, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0b, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x12, 0x0d, 0x0a, 0x05, 0x73, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x12, 0x0c, 0x0a, 0x04, 0x63, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x12, 0x0a,
	0x0a, 0x02, 0x69, 0x70, 0x18, 0x04, 0x20, 0x02, 0x28, 0x09, 0x12, 0x12, 0x0a, 0x0a, 0x73, 0x6f,
	0x63, 0x6b, 0x65, 0x74, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0f,
	0x0a, 0x07, 0x68, 0x74, 0x74, 0x70, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x02, 0x28, 0x09, 0x22,
	0xca, 0x02, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x12, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x12, 0x10, 0x0a, 0x08, 0x74, 0x65,
	0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x12, 0x12, 0x0a, 0x0a,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28, 0x09,
	0x12, 0x17, 0x0a, 0x0f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x77, 0x68, 0x69, 0x74, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x02, 0x28, 0x09, 0x12, 0x11, 0x0a, 0x09, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x06, 0x20, 0x02, 0x28, 0x09, 0x12, 0x16, 0x0a, 0x0e,
	0x6d, 0x73, 0x67, 0x5f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07,
	0x20, 0x02, 0x28, 0x09, 0x12, 0x13, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x02, 0x28, 0x09, 0x12, 0x0b, 0x0a, 0x03, 0x70, 0x61, 0x79,
	0x18, 0x09, 0x20, 0x02, 0x28, 0x09, 0x12, 0x0a, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x0a, 0x20, 0x02,
	0x28, 0x09, 0x12, 0x13, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x0b, 0x20, 0x02, 0x28, 0x05, 0x12, 0x11, 0x0a, 0x09, 0x68, 0x74, 0x74, 0x70, 0x5f,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x0c, 0x20, 0x02, 0x28, 0x05, 0x12, 0x11, 0x0a, 0x09, 0x6f, 0x70,
	0x65, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x02, 0x28, 0x03, 0x12, 0x10, 0x0a,
	0x08, 0x61, 0x63, 0x74, 0x5f, 0x6d, 0x6f, 0x6c, 0x64, 0x18, 0x0e, 0x20, 0x02, 0x28, 0x05, 0x12,
	0x16, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x0f, 0x20, 0x02, 0x28, 0x09, 0x12, 0x13, 0x0a, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x10, 0x20, 0x02, 0x28, 0x09, 0x22, 0x5d, 0x0a, 0x0d,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x0c, 0x0a,
	0x04, 0x70, 0x6c, 0x61, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x12, 0x10, 0x0a, 0x08, 0x61,
	0x6c, 0x6c, 0x6f, 0x77, 0x4d, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x12, 0x10, 0x0a,
	0x08, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x4d, 0x61, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x12,
	0x0d, 0x0a, 0x05, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x18, 0x04, 0x20, 0x03, 0x28, 0x05, 0x12, 0x0b,
	0x0a, 0x03, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x22, 0xd4, 0x01, 0x0a, 0x0f,
	0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x65, 0x62, 0x65, 0x6c, 0x6c, 0x69, 0x6f, 0x6e, 0x12,
	0x0f, 0x0a, 0x07, 0x6f, 0x70, 0x65, 0x6e, 0x43, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x12, 0x16, 0x0a, 0x0e, 0x63, 0x75, 0x72, 0x50, 0x72, 0x65, 0x56, 0x69, 0x65, 0x77, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x12, 0x19, 0x0a, 0x11, 0x63, 0x75, 0x72, 0x52,
	0x6f, 0x75, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x12, 0x17, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x45,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x12, 0x12, 0x0a, 0x0a,
	0x63, 0x75, 0x72, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x12, 0x10, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x12, 0x13, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x12, 0x15, 0x0a, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x52,
	0x6f, 0x75, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x12, 0x12,
	0x0a, 0x0a, 0x6a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x03, 0x22, 0x49, 0x0a, 0x09, 0x52, 0x65, 0x62, 0x65, 0x6c, 0x42, 0x75, 0x66, 0x66, 0x12,
	0x11, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x12, 0x0a, 0x0a, 0x02, 0x6c, 0x76, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x12,
	0x0c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x22, 0xa5, 0x01,
	0x0a, 0x09, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0f, 0x0a, 0x07, 0x6f,
	0x70, 0x65, 0x6e, 0x43, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x12, 0x16, 0x0a, 0x0e,
	0x63, 0x75, 0x72, 0x50, 0x72, 0x65, 0x56, 0x69, 0x65, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x12, 0x19, 0x0a, 0x11, 0x63, 0x75, 0x72, 0x52, 0x6f, 0x75, 0x6e, 0x64,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x12,
	0x17, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x12, 0x12, 0x0a, 0x0a, 0x63, 0x75, 0x72, 0x45,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x12, 0x10, 0x0a, 0x08,
	0x63, 0x75, 0x72, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x12, 0x15,
	0x0a, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x22, 0x84, 0x01, 0x0a, 0x0e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65,
	0x72, 0x41, 0x74, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x09, 0x63, 0x79, 0x63, 0x6c,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x79,
	0x63, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x06, 0x63, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x12, 0x1e, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x48, 0x69, 0x74, 0x52,
	0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x13, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x42, 0x6f, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x22, 0x55, 0x0a, 0x0b,
	0x48, 0x69, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x06, 0x72,
	0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x12, 0x0c, 0x0a, 0x04, 0x6e,
	0x69, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0b, 0x0a, 0x03, 0x70, 0x6f, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0a, 0x0a, 0x02, 0x6c, 0x76, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x22, 0x40, 0x0a, 0x07, 0x46, 0x75, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x12, 0x0c,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x15, 0x0a, 0x0d,
	0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x44, 0x61, 0x79, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x05, 0x12, 0x10, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x02, 0x28, 0x05, 0x22, 0xe0, 0x01, 0x0a, 0x06, 0x4d, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x12, 0x0a, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0a, 0x0a, 0x02, 0x6c, 0x76,
	0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0b, 0x0a, 0x03, 0x65, 0x78, 0x70, 0x18, 0x04, 0x20,
	0x02, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x66, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x02,
	0x28, 0x05, 0x12, 0x15, 0x0a, 0x04, 0x61, 0x74, 0x74, 0x72, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x07, 0x2e, 0x54, 0x77, 0x6f, 0x49, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x74,
	0x41, 0x74, 0x74, 0x72, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x54, 0x77, 0x6f,
	0x49, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x05, 0x65, 0x71, 0x75, 0x69, 0x70, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x07, 0x2e, 0x54, 0x77, 0x6f, 0x49, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x75,
	0x70, 0x41, 0x77, 0x61, 0x72, 0x64, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x54,
	0x77, 0x6f, 0x49, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4d, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x53, 0x6b,
	0x69, 0x6c, 0x6c, 0x12, 0x13, 0x0a, 0x0b, 0x62, 0x65, 0x74, 0x74, 0x65, 0x72, 0x45, 0x71, 0x75,
	0x69, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x22, 0xbd, 0x01, 0x0a, 0x0b, 0x4d, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x45, 0x71, 0x75, 0x69, 0x70, 0x12, 0x0d, 0x0a, 0x05, 0x6b, 0x65, 0x79, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07, 0x65, 0x71, 0x75, 0x69, 0x70,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0a, 0x0a, 0x02, 0x6c, 0x76, 0x18, 0x04, 0x20, 0x02,
	0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x72, 0x4c, 0x76, 0x18, 0x05, 0x20, 0x02,
	0x28, 0x05, 0x12, 0x15, 0x0a, 0x04, 0x61, 0x74, 0x74, 0x72, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x07, 0x2e, 0x54, 0x77, 0x6f, 0x49, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x74,
	0x41, 0x74, 0x74, 0x72, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x54, 0x77, 0x6f,
	0x49, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x08, 0x6d, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x66, 0x69, 0x67, 0x68, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x05, 0x12, 0x12, 0x0a, 0x0a, 0x6d, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x22, 0x59, 0x0a, 0x0b, 0x4d, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x0b, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x12, 0x0a, 0x0a, 0x02, 0x6c, 0x76, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x12,
	0x12, 0x0a, 0x0a, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x22, 0xa3, 0x01, 0x0a, 0x0b, 0x50, 0x69, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6d,
	0x62, 0x61, 0x74, 0x12, 0x0c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x12, 0x17, 0x0a, 0x0f, 0x68, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x62,
	0x61, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07, 0x77, 0x69,
	0x70, 0x65, 0x43, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x12, 0x15, 0x0a, 0x0d, 0x74,
	0x6f, 0x64, 0x61, 0x79, 0x43, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x12, 0x17, 0x0a, 0x06, 0x62, 0x75, 0x79, 0x43, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x07, 0x2e, 0x54, 0x77, 0x6f, 0x49, 0x6e, 0x74, 0x12, 0x13, 0x0a, 0x0b, 0x63,
	0x6f, 0x6d, 0x62, 0x61, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x02, 0x28, 0x05,
	0x12, 0x17, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x44,
	0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x22, 0xaa, 0x01, 0x0a, 0x0a, 0x4d, 0x75,
	0x6c, 0x74, 0x43, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x12, 0x17, 0x0a, 0x0f, 0x68, 0x69, 0x67, 0x68,
	0x65, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x05, 0x12, 0x0f, 0x0a, 0x07, 0x77, 0x69, 0x70, 0x65, 0x43, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x12, 0x15, 0x0a, 0x0d, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x43, 0x6f, 0x6d, 0x62, 0x61,
	0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x12, 0x17, 0x0a, 0x06, 0x62, 0x75, 0x79,
	0x43, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x54, 0x77, 0x6f, 0x49,
	0x6e, 0x74, 0x12, 0x13, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x12, 0x17, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x52,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x44, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x12, 0x14, 0x0a, 0x0c, 0x74, 0x65, 0x61, 0x6d, 0x41, 0x77, 0x61, 0x72, 0x64, 0x43, 0x6e, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x22, 0x87, 0x01, 0x0a, 0x0e, 0x4d, 0x75, 0x6c, 0x74, 0x43,
	0x6f, 0x6d, 0x62, 0x61, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x0e, 0x0a, 0x06, 0x74, 0x65, 0x61,
	0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x10, 0x0a, 0x08, 0x63, 0x6f, 0x6d,
	0x62, 0x61, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x12, 0x15, 0x0a, 0x0d, 0x63,
	0x61, 0x70, 0x74, 0x61, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x12, 0x17, 0x0a, 0x02, 0x74, 0x6d, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x11, 0x0a, 0x09, 0x61,
	0x75, 0x74, 0x6f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x12, 0x10,
	0x0a, 0x08, 0x61, 0x75, 0x74, 0x6f, 0x4a, 0x6f, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x22, 0x84, 0x01, 0x0a, 0x0a, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x0e, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x12,
	0x0c, 0x0a, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0d, 0x0a,
	0x05, 0x66, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x12, 0x0a, 0x0a, 0x02,
	0x6c, 0x76, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x63, 0x61, 0x6d, 0x70,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x6b, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x12, 0x10, 0x0a, 0x08, 0x70, 0x6f, 0x72, 0x74, 0x72, 0x61, 0x69,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x22, 0x4d, 0x0a, 0x0a, 0x53, 0x70, 0x65, 0x63, 0x69,
	0x61, 0x6c, 0x41, 0x63, 0x74, 0x12, 0x0d, 0x0a, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x05, 0x12, 0x11, 0x0a, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x22, 0x72, 0x0a, 0x0a, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x03, 0x12, 0x0d, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x05, 0x12, 0x0d, 0x0a, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05,
	0x12, 0x0e, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05,
	0x12, 0x14, 0x0a, 0x0c, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x12, 0x12, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x22, 0x47, 0x0a, 0x0a, 0x53, 0x69,
	0x6d, 0x70, 0x6c, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x0c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x12, 0x0c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x09, 0x12, 0x0e, 0x0a, 0x06, 0x70, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x02, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20,
	0x02, 0x28, 0x05, 0x22, 0xd8, 0x02, 0x0a, 0x07, 0x41, 0x69, 0x72, 0x73, 0x68, 0x69, 0x70, 0x12,
	0x0a, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x6b,
	0x65, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x61, 0x72,
	0x65, 0x61, 0x49, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0b, 0x0a, 0x03, 0x70, 0x6f,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x12, 0x13, 0x0a, 0x03, 0x6e, 0x70, 0x63, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x12, 0x13, 0x0a, 0x0b,
	0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x12, 0x14, 0x0a, 0x0c, 0x62, 0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x52, 0x6f, 0x6c, 0x65, 0x49,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x12, 0x1e, 0x0a, 0x09, 0x63, 0x61, 0x6d, 0x70, 0x31,
	0x41, 0x72, 0x6d, 0x79, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x42, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x09, 0x63, 0x61, 0x6d, 0x70, 0x32,
	0x41, 0x72, 0x6d, 0x79, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x42, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x09, 0x63, 0x61, 0x6d, 0x70, 0x33,
	0x41, 0x72, 0x6d, 0x79, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x42, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x65, 0x6c, 0x6f, 0x6e,
	0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0a, 0x6a, 0x6f,
	0x69, 0x6e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x08, 0x72,
	0x65, 0x6d, 0x61, 0x69, 0x6e, 0x48, 0x70, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0f, 0x0a,
	0x07, 0x6a, 0x6f, 0x69, 0x6e, 0x43, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x22, 0x7c,
	0x0a, 0x11, 0x42, 0x61, 0x73, 0x65, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x09, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x09,
	0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x77, 0x69, 0x64,
	0x74, 0x68, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x12, 0x15, 0x0a, 0x0d, 0x6d, 0x61, 0x70, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x12,
	0x0d, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0c,
	0x0a, 0x04, 0x63, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x22, 0x2d, 0x0a, 0x0d,
	0x4d, 0x61, 0x70, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a,
	0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x12, 0x0c, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x22, 0x51, 0x0a, 0x09, 0x4d,
	0x61, 0x70, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x24, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e,
	0x0a, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x4d, 0x61, 0x70, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x67,
	0x0a, 0x0b, 0x50, 0x61, 0x72, 0x74, 0x79, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x0b, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0a, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x12, 0x14, 0x0a, 0x0c, 0x69, 0x6e, 0x63, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x12, 0x18, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e,
	0x4c, 0x6f, 0x6e, 0x67, 0x49, 0x6e, 0x74, 0x22, 0x40, 0x0a, 0x10, 0x50, 0x61, 0x72, 0x74, 0x79,
	0x53, 0x75, 0x70, 0x65, 0x72, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x0a, 0x0a, 0x02, 0x6c,
	0x76, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x65, 0x6e, 0x65, 0x72, 0x67,
	0x79, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x12, 0x10, 0x0a, 0x08, 0x63, 0x6f, 0x73, 0x74, 0x47,
	0x6f, 0x6c, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x03, 0x22, 0x3d, 0x0a, 0x10, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0c, 0x0a,
	0x04, 0x63, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x61,
	0x72, 0x65, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x03, 0x22, 0xe4, 0x01, 0x0a, 0x0d, 0x57, 0x6f, 0x72,
	0x6c, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x0a, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x11, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x12, 0x12, 0x0a, 0x0a, 0x66, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0e, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x12, 0x1b, 0x0a,
	0x04, 0x67, 0x6f, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x47, 0x6f, 0x61, 0x6c, 0x12, 0x1b, 0x0a, 0x04, 0x72, 0x61,
	0x6e, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x1b, 0x0a, 0x04, 0x62, 0x6f, 0x73, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x42, 0x6f, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6e,
	0x74, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x54, 0x77, 0x6f, 0x49, 0x6e, 0x74,
	0x12, 0x1d, 0x0a, 0x0c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x54, 0x77, 0x6f, 0x49, 0x6e, 0x74, 0x22,
	0x66, 0x0a, 0x0c, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x12,
	0x10, 0x0a, 0x08, 0x72, 0x61, 0x6e, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x12, 0x11, 0x0a, 0x09, 0x72, 0x61, 0x6e, 0x6b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x12, 0x10, 0x0a, 0x08, 0x72, 0x61, 0x6e, 0x6b, 0x41, 0x72, 0x65, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x12, 0x1f, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52,
	0x61, 0x6e, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x45, 0x0a, 0x0c, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x42, 0x6f, 0x73, 0x73, 0x12, 0x0a, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x05, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x6f, 0x73, 0x73, 0x4e, 0x70, 0x63, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x08,
	0x66, 0x69, 0x67, 0x68, 0x74, 0x43, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x22, 0x34,
	0x0a, 0x0c, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x47, 0x6f, 0x61, 0x6c, 0x12, 0x0a,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x18, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x4c, 0x6f, 0x6e,
	0x67, 0x49, 0x6e, 0x74, 0x22, 0x72, 0x0a, 0x15, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c,
	0x57, 0x6f, 0x72, 0x6c, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x13, 0x0a,
	0x0b, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x12, 0x12, 0x0a, 0x0a, 0x61, 0x74, 0x6b, 0x42, 0x6f, 0x73, 0x73, 0x43, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x12, 0x30, 0x0a, 0x0c, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x61, 0x6c, 0x52, 0x61, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x22, 0x56, 0x0a, 0x19, 0x50, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x61, 0x6c, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x0a, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x12, 0x0c, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x12,
	0x1f, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x49, 0x74, 0x65, 0x6d,
	0x22, 0x41, 0x0a, 0x0c, 0x42, 0x61, 0x73, 0x65, 0x4d, 0x61, 0x70, 0x6f, 0x64, 0x65, 0x50, 0x62,
	0x12, 0x0d, 0x0a, 0x05, 0x6d, 0x61, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x12,
	0x09, 0x0a, 0x01, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x12, 0x09, 0x0a, 0x01, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x22, 0x72, 0x0a, 0x09, 0x4d, 0x61, 0x70, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x62,
	0x12, 0x1f, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x4d, 0x61, 0x70, 0x6f, 0x64, 0x65, 0x50,
	0x62, 0x12, 0x21, 0x0a, 0x0a, 0x62, 0x61, 0x6e, 0x64, 0x69, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x42, 0x61, 0x6e, 0x64, 0x69, 0x74, 0x4e, 0x6f,
	0x64, 0x65, 0x50, 0x62, 0x12, 0x21, 0x0a, 0x0a, 0x63, 0x61, 0x73, 0x74, 0x6c, 0x65, 0x4e, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x43, 0x61, 0x73, 0x74, 0x6c,
	0x65, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x62, 0x22, 0x20, 0x0a, 0x0c, 0x42, 0x61, 0x6e, 0x64, 0x69,
	0x74, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x62, 0x12, 0x10, 0x0a, 0x08, 0x62, 0x61, 0x6e, 0x64, 0x69,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x22, 0x58, 0x0a, 0x0c, 0x43, 0x61, 0x73,
	0x74, 0x6c, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x62, 0x12, 0x0e, 0x0a, 0x06, 0x6c, 0x6f, 0x72,
	0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x12, 0x0c, 0x0a, 0x04, 0x6e, 0x69, 0x63,
	0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0c, 0x0a, 0x04, 0x63, 0x61, 0x6d, 0x70, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x66, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x22, 0x8b, 0x02, 0x0a, 0x0d, 0x42, 0x61, 0x73, 0x65, 0x4d, 0x61, 0x70, 0x41,
	0x72, 0x6d, 0x79, 0x50, 0x62, 0x12, 0x0d, 0x0a, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x72, 0x74, 0x58, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x72, 0x74, 0x59, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x65, 0x6e, 0x64, 0x58, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x12, 0x0c, 0x0a, 0x04, 0x65, 0x6e, 0x64, 0x59, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0d,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0e, 0x0a,
	0x06, 0x6c, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x12, 0x10, 0x0a,
	0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x12,
	0x18, 0x0a, 0x07, 0x68, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x07, 0x2e, 0x54, 0x77, 0x6f, 0x49, 0x6e, 0x74, 0x12, 0x11, 0x0a, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07,
	0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0c, 0x0a,
	0x04, 0x63, 0x61, 0x6d, 0x70, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x12, 0x10, 0x0a, 0x08, 0x62,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x12, 0x12, 0x0a,
	0x0a, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x05, 0x22, 0x2d, 0x0a, 0x09, 0x4d, 0x61, 0x70, 0x41, 0x72, 0x6d, 0x79, 0x50, 0x62, 0x12, 0x20,
	0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x41, 0x72, 0x6d, 0x79, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x4d, 0x61, 0x70, 0x41, 0x72, 0x6d, 0x79, 0x50, 0x62,
	0x22, 0xf2, 0x01, 0x0a, 0x0d, 0x4d, 0x61, 0x70, 0x43, 0x68, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x50, 0x62, 0x12, 0x11, 0x0a, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x11, 0x0a, 0x09, 0x63, 0x75, 0x72, 0x64, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0b, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x12, 0x1b, 0x0a, 0x08, 0x6d, 0x61, 0x70, 0x46, 0x6f, 0x72, 0x63,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x4d, 0x61, 0x70, 0x46, 0x6f, 0x72,
	0x63, 0x65, 0x12, 0x19, 0x0a, 0x07, 0x6d, 0x61, 0x70, 0x43, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x4d, 0x61, 0x70, 0x43, 0x69, 0x74, 0x79, 0x12, 0x17, 0x0a,
	0x05, 0x6d, 0x61, 0x72, 0x63, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x4d,
	0x61, 0x70, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x1d, 0x0a, 0x09, 0x61, 0x72, 0x65, 0x61, 0x46, 0x6f,
	0x72, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x41, 0x72, 0x65, 0x61,
	0x46, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x08, 0x61, 0x72, 0x65, 0x61, 0x43, 0x69, 0x74,
	0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x43, 0x69,
	0x74, 0x79, 0x12, 0x12, 0x0a, 0x0a, 0x61, 0x72, 0x6d, 0x79, 0x4c, 0x6f, 0x72, 0x64, 0x49, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x12, 0x0d, 0x0a, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x05, 0x22, 0xb0, 0x01, 0x0a, 0x12, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x57,
	0x61, 0x72, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x62, 0x12, 0x0a, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x12, 0x14, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6c,
	0x64, 0x57, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x12, 0x14,
	0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x12, 0x11, 0x0a, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x12, 0x13, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x12, 0x13, 0x0a,
	0x0b, 0x6f, 0x70, 0x65, 0x6e, 0x57, 0x65, 0x65, 0x6b, 0x64, 0x61, 0x79, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x05, 0x12, 0x14, 0x0a, 0x0c, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70,
	0x65, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x22, 0x40, 0x0a, 0x0e, 0x42, 0x61, 0x73, 0x65,
	0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x69, 0x79, 0x50, 0x62, 0x12, 0x0b, 0x0a, 0x03, 0x70, 0x6f,
	0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x12, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x63,
	0x66, 0x67, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x22, 0x3c, 0x0a, 0x09, 0x4d, 0x61,
	0x70, 0x4d, 0x69, 0x6e, 0x65, 0x50, 0x62, 0x12, 0x0a, 0x0a, 0x02, 0x6c, 0x76, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x12, 0x10, 0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x12, 0x11, 0x0a, 0x09, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x52,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x22, 0x5b, 0x0a, 0x0b, 0x4d, 0x61, 0x70, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x62, 0x12, 0x1d, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x4d, 0x61, 0x70, 0x45,
	0x6e, 0x74, 0x69, 0x79, 0x50, 0x62, 0x12, 0x13, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x43, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x04, 0x6d,
	0x69, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x4d, 0x61, 0x70, 0x4d,
	0x69, 0x6e, 0x65, 0x50, 0x62, 0x22, 0x64, 0x0a, 0x14, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x57, 0x61,
	0x72, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x23, 0x0a,
	0x08, 0x63, 0x61, 0x6d, 0x70, 0x52, 0x61, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x57, 0x61, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x6c, 0x12, 0x27, 0x0a, 0x0c, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x52, 0x61,
	0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x57, 0x6f, 0x72, 0x6c, 0x64,
	0x57, 0x61, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x22, 0x5e, 0x0a, 0x10, 0x57,
	0x6f, 0x72, 0x6c, 0x64, 0x57, 0x61, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12,
	0x0c, 0x0a, 0x04, 0x63, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0e, 0x0a,
	0x06, 0x6c, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x12, 0x0c, 0x0a,
	0x04, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0d, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07, 0x72, 0x61,
	0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x22, 0x6b, 0x0a, 0x12, 0x57,
	0x6f, 0x72, 0x6c, 0x64, 0x57, 0x61, 0x72, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x43, 0x69, 0x74,
	0x79, 0x12, 0x14, 0x0a, 0x0c, 0x63, 0x61, 0x6d, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x12, 0x18, 0x0a, 0x10, 0x70, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x12, 0x17, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x07, 0x2e, 0x54, 0x77, 0x6f, 0x49, 0x6e, 0x74, 0x12, 0x0c, 0x0a, 0x04, 0x74, 0x69,
	0x70, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x22, 0x3f, 0x0a, 0x12, 0x57, 0x6f, 0x72, 0x6c,
	0x64, 0x57, 0x61, 0x72, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x53, 0x68, 0x6f, 0x70, 0x12, 0x17,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07,
	0x2e, 0x54, 0x77, 0x6f, 0x49, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x22, 0x4d, 0x0a, 0x08, 0x53, 0x69, 0x67,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0c, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x05, 0x12, 0x14, 0x0a, 0x0c, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x22, 0x5a, 0x0a, 0x0c, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x6c, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x0c, 0x0a, 0x04, 0x63, 0x61, 0x6d, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x6c, 0x6f, 0x72, 0x64, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x12, 0x0c, 0x0a, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x12, 0x0d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x12, 0x0f, 0x0a, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x22, 0x49, 0x0a, 0x09, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x42, 0x75, 0x66,
	0x66, 0x12, 0x11, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0a, 0x0a, 0x02, 0x6c, 0x76, 0x18, 0x03, 0x20, 0x02, 0x28,
	0x05, 0x12, 0x0c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x22,
	0xb1, 0x01, 0x0a, 0x0b, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x4c, 0x6f, 0x72, 0x64, 0x50, 0x62, 0x12,
	0x0e, 0x0a, 0x06, 0x6c, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x12,
	0x0c, 0x0a, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x12, 0x10, 0x0a,
	0x08, 0x70, 0x6f, 0x72, 0x74, 0x72, 0x61, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x12,
	0x0c, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0c, 0x0a,
	0x04, 0x63, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0b, 0x0a, 0x03, 0x76, 0x69,
	0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x66, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x12, 0x0b, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x12, 0x10, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x05, 0x22, 0x86, 0x01, 0x0a, 0x0c, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x50, 0x6c, 0x61,
	0x6e, 0x65, 0x50, 0x62, 0x12, 0x0f, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x12, 0x11, 0x0a, 0x09, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x50, 0x6f,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x12, 0x14, 0x0a, 0x0c, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x12, 0x15, 0x0a,
	0x0d, 0x6d, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x12, 0x16, 0x0a, 0x0e, 0x6d, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x53, 0x6b,
	0x69, 0x6c, 0x6c, 0x43, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x22, 0x6e, 0x0a, 0x0c,
	0x43, 0x72, 0x6f, 0x73, 0x73, 0x4d, 0x65, 0x64, 0x61, 0x6c, 0x50, 0x62, 0x12, 0x0f, 0x0a, 0x07,
	0x6d, 0x65, 0x64, 0x61, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0e, 0x0a,
	0x06, 0x68, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x12, 0x16, 0x0a,
	0x0e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x12, 0x13, 0x0a, 0x0b, 0x61, 0x75, 0x72, 0x61, 0x53, 0x6b, 0x69,
	0x6c, 0x6c, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x12, 0x10, 0x0a, 0x08, 0x6c, 0x61,
	0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x22, 0xfb, 0x02, 0x0a,
	0x0b, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x48, 0x65, 0x72, 0x6f, 0x50, 0x62, 0x12, 0x0e, 0x0a, 0x06,
	0x6c, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x12, 0x0e, 0x0a, 0x06,
	0x68, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x12, 0x10, 0x0a, 0x08,
	0x68, 0x65, 0x72, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0d,
	0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x12, 0x11, 0x0a,
	0x09, 0x64, 0x65, 0x63, 0x6f, 0x72, 0x61, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x12, 0x0d, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x12,
	0x0c, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0c, 0x0a,
	0x04, 0x6c, 0x65, 0x61, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x12, 0x15, 0x0a, 0x04, 0x61,
	0x74, 0x74, 0x72, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x54, 0x77, 0x6f, 0x49,
	0x6e, 0x74, 0x12, 0x13, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x66, 0x79, 0x4c,
	0x76, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x12, 0x10, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x12, 0x20, 0x0a, 0x09, 0x70, 0x6c, 0x61,
	0x6e, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x43,
	0x72, 0x6f, 0x73, 0x73, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x50, 0x62, 0x12, 0x1c, 0x0a, 0x05, 0x6d,
	0x65, 0x64, 0x61, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x43, 0x72, 0x6f,
	0x73, 0x73, 0x4d, 0x65, 0x64, 0x61, 0x6c, 0x50, 0x62, 0x12, 0x0e, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0b, 0x0a, 0x03, 0x70, 0x6f, 0x73,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x61, 0x63, 0x71, 0x50, 0x6f, 0x73,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0e, 0x0a, 0x06, 0x64, 0x65, 0x66, 0x50, 0x6f, 0x73,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0f, 0x0a, 0x07, 0x77, 0x61, 0x6c, 0x6c, 0x50, 0x6f,
	0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x12, 0x12, 0x0a, 0x0a, 0x72, 0x65, 0x76, 0x69, 0x76, 0x61,
	0x6c, 0x43, 0x6e, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x22, 0x2d, 0x0a, 0x0e, 0x43, 0x72,
	0x6f, 0x73, 0x73, 0x48, 0x65, 0x72, 0x6f, 0x41, 0x6c, 0x6c, 0x50, 0x62, 0x12, 0x1b, 0x0a, 0x05,
	0x68, 0x65, 0x72, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x72,
	0x6f, 0x73, 0x73, 0x48, 0x65, 0x72, 0x6f, 0x50, 0x62, 0x22, 0x65, 0x0a, 0x0e, 0x43, 0x72, 0x6f,
	0x73, 0x73, 0x57, 0x61, 0x6c, 0x6c, 0x4e, 0x70, 0x63, 0x50, 0x62, 0x12, 0x0a, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x12, 0x17, 0x0a, 0x0f, 0x77, 0x61, 0x6c, 0x6c, 0x48,
	0x65, 0x72, 0x6f, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x12, 0x0d, 0x0a, 0x05, 0x6e, 0x70, 0x63, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x12,
	0x10, 0x0a, 0x08, 0x6e, 0x70, 0x63, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x12, 0x0d, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x22, 0x33, 0x0a, 0x11, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x57, 0x61, 0x6c, 0x6c, 0x4e, 0x70, 0x63,
	0x41, 0x6c, 0x6c, 0x50, 0x62, 0x12, 0x1e, 0x0a, 0x05, 0x77, 0x61, 0x6c, 0x6c, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x57, 0x61, 0x6c, 0x6c,
	0x4e, 0x70, 0x63, 0x50, 0x62, 0x22, 0xc3, 0x01, 0x0a, 0x0f, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x62, 0x12, 0x0c, 0x0a, 0x04, 0x66, 0x6f, 0x6f,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x12, 0x0c, 0x0a, 0x04, 0x65, 0x6c, 0x65, 0x63, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x12, 0x0b, 0x0a, 0x03, 0x6f, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x12, 0x0b, 0x0a, 0x03, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x12,
	0x0d, 0x0a, 0x05, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x12, 0x10,
	0x0a, 0x08, 0x66, 0x6f, 0x6f, 0x64, 0x4c, 0x6f, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x12, 0x10, 0x0a, 0x08, 0x65, 0x6c, 0x65, 0x63, 0x4c, 0x6f, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x12, 0x0f, 0x0a, 0x07, 0x6f, 0x69, 0x6c, 0x4c, 0x6f, 0x73, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x12, 0x0c, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x02, 0x12, 0x0c, 0x0a, 0x04, 0x61, 0x72, 0x6d, 0x31, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x12,
	0x0c, 0x0a, 0x04, 0x61, 0x72, 0x6d, 0x32, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0c, 0x0a,
	0x04, 0x61, 0x72, 0x6d, 0x33, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x22, 0xd8, 0x01, 0x0a, 0x0d,
	0x43, 0x72, 0x6f, 0x73, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x62, 0x12, 0x1f, 0x0a,
	0x09, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x4c, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x4c, 0x6f, 0x72, 0x64, 0x50, 0x62, 0x12, 0x27,
	0x0a, 0x0d, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x62, 0x12, 0x1e, 0x0a, 0x05, 0x68, 0x65, 0x72, 0x6f, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x48, 0x65,
	0x72, 0x6f, 0x41, 0x6c, 0x6c, 0x50, 0x62, 0x12, 0x21, 0x0a, 0x05, 0x77, 0x61, 0x6c, 0x6c, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x57, 0x61,
	0x6c, 0x6c, 0x4e, 0x70, 0x63, 0x41, 0x6c, 0x6c, 0x50, 0x62, 0x12, 0x1b, 0x0a, 0x0a, 0x65, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07,
	0x2e, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x12, 0x1d, 0x0a, 0x09, 0x6f, 0x74, 0x68, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x49, 0x6e, 0x74,
	0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x22, 0x46, 0x0a, 0x0a, 0x46, 0x6f, 0x72, 0x74, 0x72, 0x65,
	0x73, 0x73, 0x50, 0x62, 0x12, 0x0a, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05,
	0x12, 0x0e, 0x0a, 0x06, 0x61, 0x74, 0x6b, 0x43, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x12, 0x0e, 0x0a, 0x06, 0x64, 0x65, 0x66, 0x43, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x12, 0x0c, 0x0a, 0x04, 0x63, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x22, 0x73,
	0x0a, 0x0a, 0x46, 0x6f, 0x72, 0x74, 0x48, 0x65, 0x72, 0x6f, 0x50, 0x62, 0x12, 0x0e, 0x0a, 0x06,
	0x68, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x12, 0x13, 0x0a, 0x0b, 0x72,
	0x65, 0x76, 0x69, 0x76, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x12, 0x0d, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x12,
	0x0e, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x12,
	0x12, 0x0a, 0x0a, 0x72, 0x65, 0x76, 0x69, 0x76, 0x61, 0x6c, 0x43, 0x6e, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x22, 0x42, 0x0a, 0x0c, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x41, 0x77, 0x61, 0x72,
	0x64, 0x50, 0x62, 0x12, 0x15, 0x0a, 0x05, 0x61, 0x77, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x06, 0x2e, 0x41, 0x77, 0x61, 0x72, 0x64, 0x12, 0x0d, 0x0a, 0x05, 0x69, 0x73,
	0x41, 0x64, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x12, 0x0c, 0x0a, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x22, 0x95, 0x01, 0x0a, 0x0e, 0x43, 0x72, 0x6f, 0x73,
	0x73, 0x57, 0x61, 0x72, 0x52, 0x70, 0x74, 0x4d, 0x61, 0x6e, 0x12, 0x0e, 0x0a, 0x06, 0x72, 0x6f,
	0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x12, 0x14, 0x0a, 0x0c, 0x73, 0x65,
	0x6c, 0x66, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x12, 0x14, 0x0a, 0x0c, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x12, 0x0e, 0x0a, 0x06, 0x68, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x63, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x6c, 0x6f, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x12, 0x0d, 0x0a, 0x05, 0x69, 0x73, 0x4e, 0x70, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x22,
	0x7f, 0x0a, 0x0e, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x57, 0x61, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x12, 0x1f, 0x0a, 0x06, 0x61, 0x74, 0x6b, 0x4d, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x57, 0x61, 0x72, 0x52, 0x70, 0x74, 0x4d,
	0x61, 0x6e, 0x12, 0x1f, 0x0a, 0x06, 0x64, 0x65, 0x66, 0x4d, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x57, 0x61, 0x72, 0x52, 0x70, 0x74,
	0x4d, 0x61, 0x6e, 0x12, 0x0d, 0x0a, 0x05, 0x69, 0x73, 0x57, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x12, 0x0c, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x12, 0x0e, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x22, 0x9d, 0x01, 0x0a, 0x0d, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x52, 0x61, 0x6e, 0x6b, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x14, 0x0a, 0x0c, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x63, 0x61, 0x6d, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0b, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x12, 0x0c, 0x0a, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x12,
	0x0e, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x12,
	0x10, 0x0a, 0x08, 0x70, 0x6f, 0x72, 0x74, 0x72, 0x61, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x12, 0x0f, 0x0a, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x12, 0x0c, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x2a, 0x35, 0x0a, 0x0e, 0x46, 0x69, 0x67, 0x68, 0x74, 0x42, 0x75, 0x66, 0x66, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x12, 0x11, 0x0a, 0x0d, 0x46, 0x49, 0x52, 0x53, 0x54, 0x5f, 0x52, 0x45, 0x4c, 0x45,
	0x41, 0x53, 0x45, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x45, 0x46, 0x45, 0x4e, 0x43, 0x45,
	0x5f, 0x48, 0x55, 0x52, 0x54, 0x10, 0x02, 0x2a, 0x31, 0x0a, 0x08, 0x43, 0x61, 0x6d, 0x70, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x61, 0x6d, 0x70, 0x5f, 0x4c, 0x4a, 0x10, 0x01,
	0x12, 0x0b, 0x0a, 0x07, 0x43, 0x61, 0x6d, 0x70, 0x5f, 0x4d, 0x4a, 0x10, 0x02, 0x12, 0x0b, 0x0a,
	0x07, 0x43, 0x61, 0x6d, 0x70, 0x5f, 0x44, 0x47, 0x10, 0x03, 0x2a, 0x40, 0x0a, 0x10, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0d,
	0x0a, 0x09, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x48, 0x6f, 0x74, 0x10, 0x01, 0x12, 0x0d, 0x0a,
	0x09, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x65, 0x77, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x70, 0x10, 0x03, 0x42, 0x52, 0x0a, 0x1a,
	0x63, 0x6f, 0x6d, 0x2e, 0x68, 0x75, 0x6e, 0x64, 0x72, 0x65, 0x64, 0x63, 0x65, 0x6e, 0x74, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x2e, 0x6d, 0x77, 0x2e, 0x70, 0x62, 0x42, 0x08, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x50, 0x62, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x71, 0x69, 0x75, 0x68, 0x6f, 0x75, 0x64, 0x65, 0x2f, 0x67, 0x6f, 0x2d, 0x77, 0x65, 0x62,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x32, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
}

var (
	file_Common_proto_rawDescOnce sync.Once
	file_Common_proto_rawDescData = file_Common_proto_rawDesc
)

func file_Common_proto_rawDescGZIP() []byte {
	file_Common_proto_rawDescOnce.Do(func() {
		file_Common_proto_rawDescData = protoimpl.X.CompressGZIP(file_Common_proto_rawDescData)
	})
	return file_Common_proto_rawDescData
}

var file_Common_proto_enumTypes = make([]protoreflect.EnumType, 3)
var file_Common_proto_msgTypes = make([]protoimpl.MessageInfo, 224)
var file_Common_proto_goTypes = []interface{}{
	(FightBuffParam)(0),                  // 0: FightBuffParam
	(CampType)(0),                        // 1: CampType
	(ServerOpenStatus)(0),                // 2: ServerOpenStatus
	(*TwoInt)(nil),                       // 3: TwoInt
	(*StrInt)(nil),                       // 4: StrInt
	(*IntLong)(nil),                      // 5: IntLong
	(*IntDouble)(nil),                    // 6: IntDouble
	(*IntListInt)(nil),                   // 7: IntListInt
	(*LongInt)(nil),                      // 8: LongInt
	(*IntDoubles)(nil),                   // 9: IntDoubles
	(*Resource)(nil),                     // 10: Resource
	(*Arm)(nil),                          // 11: Arm
	(*ResAdd)(nil),                       // 12: ResAdd
	(*RoleOpt)(nil),                      // 13: RoleOpt
	(*BuildQue)(nil),                     // 14: BuildQue
	(*ArmQue)(nil),                       // 15: ArmQue
	(*Factory)(nil),                      // 16: Factory
	(*BuildingBase)(nil),                 // 17: BuildingBase
	(*Mill)(nil),                         // 18: Mill
	(*Gains)(nil),                        // 19: Gains
	(*Award)(nil),                        // 20: Award
	(*Hero)(nil),                         // 21: Hero
	(*WarPlane)(nil),                     // 22: WarPlane
	(*WallNpc)(nil),                      // 23: WallNpc
	(*WallHero)(nil),                     // 24: WallHero
	(*Equip)(nil),                        // 25: Equip
	(*EquipExtr)(nil),                    // 26: EquipExtr
	(*EquipJewel)(nil),                   // 27: EquipJewel
	(*Medal)(nil),                        // 28: Medal
	(*MedalExt)(nil),                     // 29: MedalExt
	(*MedalGoods)(nil),                   // 30: MedalGoods
	(*EquipQue)(nil),                     // 31: EquipQue
	(*SuperEquip)(nil),                   // 32: SuperEquip
	(*Prop)(nil),                         // 33: Prop
	(*Task)(nil),                         // 34: Task
	(*Combat)(nil),                       // 35: Combat
	(*CombatFB)(nil),                     // 36: CombatFB
	(*StoneCombat)(nil),                  // 37: StoneCombat
	(*Grab)(nil),                         // 38: Grab
	(*Form)(nil),                         // 39: Form
	(*Aura)(nil),                         // 40: Aura
	(*Action)(nil),                       // 41: Action
	(*FightBuff)(nil),                    // 42: FightBuff
	(*FightSkill)(nil),                   // 43: FightSkill
	(*Round)(nil),                        // 44: Round
	(*Record)(nil),                       // 45: Record
	(*RptMan)(nil),                       // 46: RptMan
	(*RptBandit)(nil),                    // 47: RptBandit
	(*RptCity)(nil),                      // 48: RptCity
	(*RptOther)(nil),                     // 49: RptOther
	(*RptSummary)(nil),                   // 50: RptSummary
	(*RptHero)(nil),                      // 51: RptHero
	(*RptAtkBandit)(nil),                 // 52: RptAtkBandit
	(*RptAtkPlayer)(nil),                 // 53: RptAtkPlayer
	(*Report)(nil),                       // 54: Report
	(*MailCollect)(nil),                  // 55: MailCollect
	(*ScoutRes)(nil),                     // 56: ScoutRes
	(*ScoutCity)(nil),                    // 57: ScoutCity
	(*ScoutHero)(nil),                    // 58: ScoutHero
	(*MailScout)(nil),                    // 59: MailScout
	(*MailShow)(nil),                     // 60: MailShow
	(*Mail)(nil),                         // 61: Mail
	(*AreaForce)(nil),                    // 62: AreaForce
	(*AreaGestapo)(nil),                  // 63: AreaGestapo
	(*AreaCity)(nil),                     // 64: AreaCity
	(*Collect)(nil),                      // 65: Collect
	(*MapForce)(nil),                     // 66: MapForce
	(*CamppaignRole)(nil),                // 67: CamppaignRole
	(*MapCity)(nil),                      // 68: MapCity
	(*MapLine)(nil),                      // 69: MapLine
	(*Area)(nil),                         // 70: Area
	(*CityFirstKill)(nil),                // 71: CityFirstKill
	(*FirstKillInfo)(nil),                // 72: FirstKillInfo
	(*AtkFirstKillInfo)(nil),             // 73: AtkFirstKillInfo
	(*CityAtkFirstKill)(nil),             // 74: CityAtkFirstKill
	(*City)(nil),                         // 75: City
	(*Army)(nil),                         // 76: Army
	(*Chat)(nil),                         // 77: Chat
	(*ChatDialog)(nil),                   // 78: ChatDialog
	(*DbChatHistory)(nil),                // 79: DbChatHistory
	(*DbChatDialog)(nil),                 // 80: DbChatDialog
	(*DbChatDialogByLord)(nil),           // 81: DbChatDialogByLord
	(*Effect)(nil),                       // 82: Effect
	(*Tech)(nil),                         // 83: Tech
	(*TechQue)(nil),                      // 84: TechQue
	(*History)(nil),                      // 85: History
	(*Battle)(nil),                       // 86: Battle
	(*BattleRole)(nil),                   // 87: BattleRole
	(*BattlePO)(nil),                     // 88: BattlePO
	(*ChemicalQue)(nil),                  // 89: ChemicalQue
	(*CampBattle)(nil),                   // 90: CampBattle
	(*ChangeInfo)(nil),                   // 91: ChangeInfo
	(*PartyCity)(nil),                    // 92: PartyCity
	(*PartyHonorRank)(nil),               // 93: PartyHonorRank
	(*PartyLog)(nil),                     // 94: PartyLog
	(*PartyJob)(nil),                     // 95: PartyJob
	(*PartyElection)(nil),                // 96: PartyElection
	(*RankData)(nil),                     // 97: RankData
	(*TypeAwards)(nil),                   // 98: TypeAwards
	(*Man)(nil),                          // 99: Man
	(*Activity)(nil),                     // 100: Activity
	(*ActivityCond)(nil),                 // 101: ActivityCond
	(*Day7Act)(nil),                      // 102: Day7Act
	(*AtkCityActActive)(nil),             // 103: AtkCityActActive
	(*AtkCityActTask)(nil),               // 104: AtkCityActTask
	(*SearchHero)(nil),                   // 105: SearchHero
	(*WorldTask)(nil),                    // 106: WorldTask
	(*Force)(nil),                        // 107: Force
	(*DbFriend)(nil),                     // 108: DbFriend
	(*Friend)(nil),                       // 109: Friend
	(*FriendHero)(nil),                   // 110: FriendHero
	(*DbMasterApprentice)(nil),           // 111: DbMasterApprentice
	(*MasterApprentice)(nil),             // 112: MasterApprentice
	(*BlackhawkItem)(nil),                // 113: BlackhawkItem
	(*ActBlackhawk)(nil),                 // 114: ActBlackhawk
	(*ActBartonItem)(nil),                // 115: ActBartonItem
	(*ActBarton)(nil),                    // 116: ActBarton
	(*DbActTurnplat)(nil),                // 117: DbActTurnplat
	(*DbEquipTurnplat)(nil),              // 118: DbEquipTurnplat
	(*DbSpecialProp)(nil),                // 119: DbSpecialProp
	(*ActRank)(nil),                      // 120: ActRank
	(*RankAward)(nil),                    // 121: RankAward
	(*CabinetLead)(nil),                  // 122: CabinetLead
	(*Summon)(nil),                       // 123: Summon
	(*Sectiontask)(nil),                  // 124: Sectiontask
	(*RobotDataRs)(nil),                  // 125: RobotDataRs
	(*PayInfo)(nil),                      // 126: PayInfo
	(*TriggerGiftInfo)(nil),              // 127: TriggerGiftInfo
	(*PlayerInfo)(nil),                   // 128: PlayerInfo
	(*Gestapo)(nil),                      // 129: Gestapo
	(*GestapoBattle)(nil),                // 130: GestapoBattle
	(*GestapoCampRank)(nil),              // 131: GestapoCampRank
	(*Stone)(nil),                        // 132: Stone
	(*StoneImprove)(nil),                 // 133: StoneImprove
	(*StoneHole)(nil),                    // 134: StoneHole
	(*StoneInfo)(nil),                    // 135: StoneInfo
	(*FemaleAgent)(nil),                  // 136: FemaleAgent
	(*Barrage)(nil),                      // 137: Barrage
	(*TurnplateInfo)(nil),                // 138: TurnplateInfo
	(*EquipTurnplateInfo)(nil),           // 139: EquipTurnplateInfo
	(*RedPacketRole)(nil),                // 140: RedPacketRole
	(*RedPacket)(nil),                    // 141: RedPacket
	(*RedPacketShow)(nil),                // 142: RedPacketShow
	(*DayDiscounts)(nil),                 // 143: DayDiscounts
	(*SuperMine)(nil),                    // 144: SuperMine
	(*SuperGuard)(nil),                   // 145: SuperGuard
	(*BerlinForce)(nil),                  // 146: BerlinForce
	(*SerAttrData)(nil),                  // 147: SerAttrData
	(*CampOccupy)(nil),                   // 148: CampOccupy
	(*RankEquip)(nil),                    // 149: RankEquip
	(*BerlinJob)(nil),                    // 150: BerlinJob
	(*HonorReport)(nil),                  // 151: HonorReport
	(*HonorReport2)(nil),                 // 152: HonorReport2
	(*HonorReportInfo)(nil),              // 153: HonorReportInfo
	(*OffLineBuild)(nil),                 // 154: OffLineBuild
	(*BerlinRoleInfo)(nil),               // 155: BerlinRoleInfo
	(*BerlinHeroInfo)(nil),               // 156: BerlinHeroInfo
	(*BerlinAtkInfo)(nil),                // 157: BerlinAtkInfo
	(*BerlinBasicReport)(nil),            // 158: BerlinBasicReport
	(*MonopolyGrid)(nil),                 // 159: MonopolyGrid
	(*AccountRoleInfo)(nil),              // 160: AccountRoleInfo
	(*ServerInfo)(nil),                   // 161: ServerInfo
	(*ServerConfigInfo)(nil),             // 162: ServerConfigInfo
	(*ServerControl)(nil),                // 163: ServerControl
	(*GlobalRebellion)(nil),              // 164: GlobalRebellion
	(*RebelBuff)(nil),                    // 165: RebelBuff
	(*CycleData)(nil),                    // 166: CycleData
	(*CounterAtkData)(nil),               // 167: CounterAtkData
	(*HitRoleInfo)(nil),                  // 168: HitRoleInfo
	(*FunCard)(nil),                      // 169: FunCard
	(*Mentor)(nil),                       // 170: Mentor
	(*MentorEquip)(nil),                  // 171: MentorEquip
	(*MentorSkill)(nil),                  // 172: MentorSkill
	(*PitchCombat)(nil),                  // 173: PitchCombat
	(*MultCombat)(nil),                   // 174: MultCombat
	(*MultCombatTeam)(nil),               // 175: MultCombatTeam
	(*TeamMember)(nil),                   // 176: TeamMember
	(*SpecialAct)(nil),                   // 177: SpecialAct
	(*SignInInfo)(nil),                   // 178: SignInInfo
	(*SimpleRank)(nil),                   // 179: SimpleRank
	(*Airship)(nil),                      // 180: Airship
	(*BaseMapEntityInfo)(nil),            // 181: BaseMapEntityInfo
	(*MapPlayerInfo)(nil),                // 182: MapPlayerInfo
	(*MapEntity)(nil),                    // 183: MapEntity
	(*PartySupply)(nil),                  // 184: PartySupply
	(*PartySuperSupply)(nil),             // 185: PartySuperSupply
	(*ScheduleRankItem)(nil),             // 186: ScheduleRankItem
	(*WorldSchedule)(nil),                // 187: WorldSchedule
	(*ScheduleRank)(nil),                 // 188: ScheduleRank
	(*ScheduleBoss)(nil),                 // 189: ScheduleBoss
	(*ScheduleGoal)(nil),                 // 190: ScheduleGoal
	(*PersonalWorldSchedule)(nil),        // 191: PersonalWorldSchedule
	(*PersonalWorldScheduleRank)(nil),    // 192: PersonalWorldScheduleRank
	(*BaseMapodePb)(nil),                 // 193: BaseMapodePb
	(*MapNodePb)(nil),                    // 194: MapNodePb
	(*BanditNodePb)(nil),                 // 195: BanditNodePb
	(*CastleNodePb)(nil),                 // 196: CastleNodePb
	(*BaseMapArmyPb)(nil),                // 197: BaseMapArmyPb
	(*MapArmyPb)(nil),                    // 198: MapArmyPb
	(*MapChgEventPb)(nil),                // 199: MapChgEventPb
	(*WorldWarPlanInfoPb)(nil),           // 200: WorldWarPlanInfoPb
	(*BaseMapEntiyPb)(nil),               // 201: BaseMapEntiyPb
	(*MapMinePb)(nil),                    // 202: MapMinePb
	(*MapEntityPb)(nil),                  // 203: MapEntityPb
	(*WorldWarIntegralRank)(nil),         // 204: WorldWarIntegralRank
	(*WorldWarIntegral)(nil),             // 205: WorldWarIntegral
	(*WorldWarAttackCity)(nil),           // 206: WorldWarAttackCity
	(*WorldWarSeasonShop)(nil),           // 207: WorldWarSeasonShop
	(*SignInfo)(nil),                     // 208: SignInfo
	(*IntegralRank)(nil),                 // 209: IntegralRank
	(*CrossBuff)(nil),                    // 210: CrossBuff
	(*CrossLordPb)(nil),                  // 211: CrossLordPb
	(*CrossPlanePb)(nil),                 // 212: CrossPlanePb
	(*CrossMedalPb)(nil),                 // 213: CrossMedalPb
	(*CrossHeroPb)(nil),                  // 214: CrossHeroPb
	(*CrossHeroAllPb)(nil),               // 215: CrossHeroAllPb
	(*CrossWallNpcPb)(nil),               // 216: CrossWallNpcPb
	(*CrossWallNpcAllPb)(nil),            // 217: CrossWallNpcAllPb
	(*CrossResourcePb)(nil),              // 218: CrossResourcePb
	(*CrossPlayerPb)(nil),                // 219: CrossPlayerPb
	(*FortressPb)(nil),                   // 220: FortressPb
	(*FortHeroPb)(nil),                   // 221: FortHeroPb
	(*CrossAwardPb)(nil),                 // 222: CrossAwardPb
	(*CrossWarRptMan)(nil),               // 223: CrossWarRptMan
	(*CrossWarReport)(nil),               // 224: CrossWarReport
	(*CrossRankItem)(nil),                // 225: CrossRankItem
	(*ServerInfo_ServerConnectInfo)(nil), // 226: ServerInfo.ServerConnectInfo
}
var file_Common_proto_depIdxs = []int32{
	6,   // IntDoubles.ls:type_name -> IntDouble
	15,  // Factory.armQue:type_name -> ArmQue
	3,   // Hero.attr:type_name -> TwoInt
	3,   // Hero.wash:type_name -> TwoInt
	3,   // Hero.equip:type_name -> TwoInt
	3,   // Hero.warPlane:type_name -> TwoInt
	3,   // Hero.showFight:type_name -> TwoInt
	3,   // Hero.planePos:type_name -> TwoInt
	3,   // WarPlane.attr:type_name -> TwoInt
	3,   // WallNpc.attr:type_name -> TwoInt
	3,   // Equip.attr:type_name -> TwoInt
	3,   // Equip.baptize:type_name -> TwoInt
	26,  // Equip.exta:type_name -> EquipExtr
	3,   // EquipExtr.attr:type_name -> TwoInt
	3,   // Medal.medalAttr:type_name -> TwoInt
	29,  // Medal.ext:type_name -> MedalExt
	43,  // Action.skill:type_name -> FightSkill
	3,   // FightBuff.param:type_name -> TwoInt
	3,   // FightSkill.param:type_name -> TwoInt
	41,  // Round.actionA:type_name -> Action
	41,  // Round.actionB:type_name -> Action
	42,  // Round.buff:type_name -> FightBuff
	39,  // Record.formA:type_name -> Form
	39,  // Record.formB:type_name -> Form
	44,  // Record.round:type_name -> Round
	40,  // Record.aura:type_name -> Aura
	46,  // RptAtkBandit.attack:type_name -> RptMan
	47,  // RptAtkBandit.defend:type_name -> RptBandit
	50,  // RptAtkBandit.atkSum:type_name -> RptSummary
	50,  // RptAtkBandit.defSum:type_name -> RptSummary
	51,  // RptAtkBandit.atkHero:type_name -> RptHero
	51,  // RptAtkBandit.defHero:type_name -> RptHero
	38,  // RptAtkBandit.grab:type_name -> Grab
	45,  // RptAtkBandit.record:type_name -> Record
	46,  // RptAtkPlayer.attack:type_name -> RptMan
	46,  // RptAtkPlayer.defMan:type_name -> RptMan
	48,  // RptAtkPlayer.defCity:type_name -> RptCity
	50,  // RptAtkPlayer.atkSum:type_name -> RptSummary
	50,  // RptAtkPlayer.defSum:type_name -> RptSummary
	51,  // RptAtkPlayer.atkHero:type_name -> RptHero
	51,  // RptAtkPlayer.defHero:type_name -> RptHero
	38,  // RptAtkPlayer.grab:type_name -> Grab
	45,  // RptAtkPlayer.record:type_name -> Record
	49,  // RptAtkPlayer.defRptOther:type_name -> RptOther
	52,  // Report.rptBandit:type_name -> RptAtkBandit
	53,  // Report.rptPlayer:type_name -> RptAtkPlayer
	20,  // MailCollect.grab:type_name -> Award
	3,   // ScoutRes.canPlunder:type_name -> TwoInt
	3,   // ScoutHero.planes:type_name -> TwoInt
	3,   // ScoutHero.planePos:type_name -> TwoInt
	56,  // MailScout.res:type_name -> ScoutRes
	57,  // MailScout.city:type_name -> ScoutCity
	58,  // MailScout.hero:type_name -> ScoutHero
	20,  // MailShow.drop:type_name -> Award
	20,  // MailShow.recover:type_name -> Award
	20,  // Mail.award:type_name -> Award
	54,  // Mail.report:type_name -> Report
	20,  // Mail.drop:type_name -> Award
	55,  // Mail.collect:type_name -> MailCollect
	59,  // Mail.scout:type_name -> MailScout
	20,  // Mail.recover:type_name -> Award
	65,  // MapForce.collect:type_name -> Collect
	67,  // MapCity.role:type_name -> CamppaignRole
	71,  // Area.firstKill:type_name -> CityFirstKill
	72,  // CityFirstKill.sponsor:type_name -> FirstKillInfo
	72,  // CityFirstKill.atklist:type_name -> FirstKillInfo
	73,  // CityAtkFirstKill.sponsor:type_name -> AtkFirstKillInfo
	73,  // CityAtkFirstKill.atklist:type_name -> AtkFirstKillInfo
	67,  // City.role:type_name -> CamppaignRole
	3,   // City.form:type_name -> TwoInt
	5,   // City.firstKillReward:type_name -> IntLong
	3,   // Army.hero:type_name -> TwoInt
	20,  // Army.grab:type_name -> Award
	77,  // DbChatHistory.chats:type_name -> Chat
	77,  // DbChatDialog.chat:type_name -> Chat
	80,  // DbChatDialogByLord.dialog:type_name -> DbChatDialog
	87,  // BattlePO.atkRole:type_name -> BattleRole
	87,  // BattlePO.defRole:type_name -> BattleRole
	67,  // PartyCity.role:type_name -> CamppaignRole
	20,  // TypeAwards.reward:type_name -> Award
	3,   // Man.ShowFight:type_name -> TwoInt
	20,  // ActivityCond.award:type_name -> Award
	20,  // AtkCityActActive.award:type_name -> Award
	21,  // SearchHero.hero:type_name -> Hero
	99,  // Friend.man:type_name -> Man
	110, // Friend.hero:type_name -> FriendHero
	3,   // FriendHero.planes:type_name -> TwoInt
	3,   // FriendHero.planePos:type_name -> TwoInt
	99,  // MasterApprentice.man:type_name -> Man
	113, // ActBlackhawk.blackhawkItems:type_name -> BlackhawkItem
	115, // ActBarton.items:type_name -> ActBartonItem
	20,  // RankAward.award:type_name -> Award
	126, // TriggerGiftInfo.payinfo:type_name -> PayInfo
	126, // TriggerGiftInfo.payinfoIos:type_name -> PayInfo
	33,  // PlayerInfo.prop:type_name -> Prop
	25,  // PlayerInfo.equip:type_name -> Equip
	21,  // PlayerInfo.hero:type_name -> Hero
	32,  // PlayerInfo.superEquip:type_name -> SuperEquip
	83,  // PlayerInfo.tech:type_name -> Tech
	17,  // PlayerInfo.build:type_name -> BuildingBase
	18,  // PlayerInfo.mill:type_name -> Mill
	132, // StoneInfo.stone:type_name -> Stone
	134, // StoneInfo.stoneHole:type_name -> StoneHole
	133, // StoneInfo.stoneImprove:type_name -> StoneImprove
	140, // RedPacket.role:type_name -> RedPacketRole
	20,  // DayDiscounts.award:type_name -> Award
	126, // DayDiscounts.payinfo:type_name -> PayInfo
	126, // DayDiscounts.payinfoIos:type_name -> PayInfo
	145, // SuperMine.collectArmy:type_name -> SuperGuard
	76,  // SuperMine.helpArmy:type_name -> Army
	65,  // SuperMine.collectList:type_name -> Collect
	24,  // SuperMine.helpList:type_name -> WallHero
	76,  // SuperGuard.army:type_name -> Army
	147, // BerlinForce.attrData:type_name -> SerAttrData
	153, // HonorReport.atk:type_name -> HonorReportInfo
	153, // HonorReport.def:type_name -> HonorReportInfo
	153, // HonorReport2.role:type_name -> HonorReportInfo
	20,  // MonopolyGrid.award:type_name -> Award
	226, // ServerInfo.sc:type_name -> ServerInfo.ServerConnectInfo
	160, // ServerInfo.ainfo:type_name -> AccountRoleInfo
	166, // CounterAtkData.cycleData:type_name -> CycleData
	168, // CounterAtkData.roleInfo:type_name -> HitRoleInfo
	3,   // Mentor.attr:type_name -> TwoInt
	3,   // Mentor.extAttr:type_name -> TwoInt
	3,   // Mentor.equip:type_name -> TwoInt
	3,   // Mentor.upAward:type_name -> TwoInt
	172, // Mentor.skills:type_name -> MentorSkill
	3,   // MentorEquip.attr:type_name -> TwoInt
	3,   // MentorEquip.extAttr:type_name -> TwoInt
	3,   // PitchCombat.buyCnt:type_name -> TwoInt
	3,   // MultCombat.buyCnt:type_name -> TwoInt
	176, // MultCombatTeam.tm:type_name -> TeamMember
	107, // Airship.npc:type_name -> Force
	87,  // Airship.camp1Army:type_name -> BattleRole
	87,  // Airship.camp2Army:type_name -> BattleRole
	87,  // Airship.camp3Army:type_name -> BattleRole
	176, // Airship.belongMember:type_name -> TeamMember
	176, // Airship.joinMember:type_name -> TeamMember
	181, // MapEntity.baseInfo:type_name -> BaseMapEntityInfo
	182, // MapEntity.player:type_name -> MapPlayerInfo
	8,   // PartySupply.status:type_name -> LongInt
	190, // WorldSchedule.goal:type_name -> ScheduleGoal
	188, // WorldSchedule.rank:type_name -> ScheduleRank
	189, // WorldSchedule.boss:type_name -> ScheduleBoss
	3,   // WorldSchedule.statusCnt:type_name -> TwoInt
	3,   // WorldSchedule.rewardStatus:type_name -> TwoInt
	186, // ScheduleRank.item:type_name -> ScheduleRankItem
	107, // ScheduleBoss.bossNpc:type_name -> Force
	8,   // ScheduleGoal.status:type_name -> LongInt
	192, // PersonalWorldSchedule.personalRank:type_name -> PersonalWorldScheduleRank
	186, // PersonalWorldScheduleRank.item:type_name -> ScheduleRankItem
	193, // MapNodePb.baseNode:type_name -> BaseMapodePb
	195, // MapNodePb.banditNode:type_name -> BanditNodePb
	196, // MapNodePb.castleNode:type_name -> CastleNodePb
	3,   // BaseMapArmyPb.heroIds:type_name -> TwoInt
	197, // MapArmyPb.baseArmy:type_name -> BaseMapArmyPb
	66,  // MapChgEventPb.mapForce:type_name -> MapForce
	68,  // MapChgEventPb.mapCity:type_name -> MapCity
	69,  // MapChgEventPb.march:type_name -> MapLine
	62,  // MapChgEventPb.areaForce:type_name -> AreaForce
	64,  // MapChgEventPb.areaCity:type_name -> AreaCity
	201, // MapEntityPb.base:type_name -> BaseMapEntiyPb
	75,  // MapEntityPb.city:type_name -> City
	202, // MapEntityPb.mine:type_name -> MapMinePb
	205, // WorldWarIntegralRank.campRank:type_name -> WorldWarIntegral
	205, // WorldWarIntegralRank.personalRank:type_name -> WorldWarIntegral
	3,   // WorldWarAttackCity.status:type_name -> TwoInt
	3,   // WorldWarSeasonShop.status:type_name -> TwoInt
	3,   // CrossHeroPb.attr:type_name -> TwoInt
	212, // CrossHeroPb.planeList:type_name -> CrossPlanePb
	213, // CrossHeroPb.medal:type_name -> CrossMedalPb
	214, // CrossHeroAllPb.heros:type_name -> CrossHeroPb
	216, // CrossWallNpcAllPb.walls:type_name -> CrossWallNpcPb
	211, // CrossPlayerPb.crossLord:type_name -> CrossLordPb
	218, // CrossPlayerPb.crossResource:type_name -> CrossResourcePb
	215, // CrossPlayerPb.heros:type_name -> CrossHeroAllPb
	217, // CrossPlayerPb.walls:type_name -> CrossWallNpcAllPb
	82,  // CrossPlayerPb.effectList:type_name -> Effect
	6,   // CrossPlayerPb.otherList:type_name -> IntDouble
	20,  // CrossAwardPb.award:type_name -> Award
	223, // CrossWarReport.atkMan:type_name -> CrossWarRptMan
	223, // CrossWarReport.defMan:type_name -> CrossWarRptMan
}

func init() { file_Common_proto_init() }
func file_Common_proto_init() {
	if File_Common_proto != nil {
		return
	}
	File_Common_proto = protoimpl.FileBuilder{
		RawDescriptor:      file_Common_proto_rawDesc,
		GoTypes:            file_Common_proto_goTypes,
		DependencyIndexes:  file_Common_proto_depIdxs,
		EnumOutputTypes:    file_Common_proto_enumTypes,
		MessageOutputTypes: file_Common_proto_msgTypes,
		FilesRegistry:      protoregistry.GlobalFiles,
		TypesRegistry:      protoregistry.GlobalTypes,
	}.Init()
	file_Common_proto_rawDesc = nil
	file_Common_proto_goTypes = nil
	file_Common_proto_depIdxs = nil
}
