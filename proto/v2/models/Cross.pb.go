// Code generated by protoc-gen-go. DO NOT EDIT.
// source: Cross.proto

package models

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoregistry "google.golang.org/protobuf/reflect/protoregistry"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	sync "sync"
)

const (
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 0)
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(0 - protoimpl.MinVersion)
)

// 服务器注册
type ServerRegistRq struct {
	ServerId             *int32                  `protobuf:"varint,1,req,name=serverId" json:"serverId,omitempty"`
	Index                *int32                  `protobuf:"varint,2,req,name=index" json:"index,omitempty"`
	Total                *int32                  `protobuf:"varint,3,req,name=total" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *ServerRegistRq) Reset() {
	*x = ServerRegistRq{}
}

func (x *ServerRegistRq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerRegistRq) ProtoMessage() {}

func (x *ServerRegistRq) ProtoReflect() protoreflect.Message {
	return file_Cross_proto_msgTypes[0].MessageOf(x)
}

func (m *ServerRegistRq) XXX_Methods() *protoiface.Methods {
	return file_Cross_proto_msgTypes[0].Methods()
}

// Deprecated: Use ServerRegistRq.ProtoReflect.Type instead.
func (*ServerRegistRq) Descriptor() ([]byte, []int) {
	return file_Cross_proto_rawDescGZIP(), []int{0}
}

func (x *ServerRegistRq) GetServerId() int32 {
	if x != nil && x.ServerId != nil {
		return *x.ServerId
	}
	return 0
}

func (x *ServerRegistRq) GetIndex() int32 {
	if x != nil && x.Index != nil {
		return *x.Index
	}
	return 0
}

func (x *ServerRegistRq) GetTotal() int32 {
	if x != nil && x.Total != nil {
		return *x.Total
	}
	return 0
}

// 游戏服 -> 跨服 发送的心跳
type HeartRq struct {
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *HeartRq) Reset() {
	*x = HeartRq{}
}

func (x *HeartRq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartRq) ProtoMessage() {}

func (x *HeartRq) ProtoReflect() protoreflect.Message {
	return file_Cross_proto_msgTypes[1].MessageOf(x)
}

func (m *HeartRq) XXX_Methods() *protoiface.Methods {
	return file_Cross_proto_msgTypes[1].Methods()
}

// Deprecated: Use HeartRq.ProtoReflect.Type instead.
func (*HeartRq) Descriptor() ([]byte, []int) {
	return file_Cross_proto_rawDescGZIP(), []int{1}
}

type HeartRs struct {
	Time                 *int64                  `protobuf:"varint,1,req,name=time" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *HeartRs) Reset() {
	*x = HeartRs{}
}

func (x *HeartRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartRs) ProtoMessage() {}

func (x *HeartRs) ProtoReflect() protoreflect.Message {
	return file_Cross_proto_msgTypes[2].MessageOf(x)
}

func (m *HeartRs) XXX_Methods() *protoiface.Methods {
	return file_Cross_proto_msgTypes[2].Methods()
}

// Deprecated: Use HeartRs.ProtoReflect.Type instead.
func (*HeartRs) Descriptor() ([]byte, []int) {
	return file_Cross_proto_rawDescGZIP(), []int{2}
}

func (x *HeartRs) GetTime() int64 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return 0
}

// 登陆、退出跨服
type CrossLoginRq struct {
	OpType               *int32                  `protobuf:"varint,1,opt,name=opType" json:"opType,omitempty"`
	Player               *CrossPlayerPb          `protobuf:"bytes,2,opt,name=player" json:"player,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *CrossLoginRq) Reset() {
	*x = CrossLoginRq{}
}

func (x *CrossLoginRq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrossLoginRq) ProtoMessage() {}

func (x *CrossLoginRq) ProtoReflect() protoreflect.Message {
	return file_Cross_proto_msgTypes[3].MessageOf(x)
}

func (m *CrossLoginRq) XXX_Methods() *protoiface.Methods {
	return file_Cross_proto_msgTypes[3].Methods()
}

// Deprecated: Use CrossLoginRq.ProtoReflect.Type instead.
func (*CrossLoginRq) Descriptor() ([]byte, []int) {
	return file_Cross_proto_rawDescGZIP(), []int{3}
}

func (x *CrossLoginRq) GetOpType() int32 {
	if x != nil && x.OpType != nil {
		return *x.OpType
	}
	return 0
}

func (x *CrossLoginRq) GetPlayer() *CrossPlayerPb {
	if x != nil {
		return x.Player
	}
	return nil
}

type CrossLoginRs struct {
	OpType               *int32                  `protobuf:"varint,1,opt,name=opType" json:"opType,omitempty"`
	Hero                 []*FortHeroPb           `protobuf:"bytes,2,rep,name=hero" json:"hero,omitempty"`
	CurKillNum           *int32                  `protobuf:"varint,3,opt,name=curKillNum" json:"curKillNum,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *CrossLoginRs) Reset() {
	*x = CrossLoginRs{}
}

func (x *CrossLoginRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrossLoginRs) ProtoMessage() {}

func (x *CrossLoginRs) ProtoReflect() protoreflect.Message {
	return file_Cross_proto_msgTypes[4].MessageOf(x)
}

func (m *CrossLoginRs) XXX_Methods() *protoiface.Methods {
	return file_Cross_proto_msgTypes[4].Methods()
}

// Deprecated: Use CrossLoginRs.ProtoReflect.Type instead.
func (*CrossLoginRs) Descriptor() ([]byte, []int) {
	return file_Cross_proto_rawDescGZIP(), []int{4}
}

func (x *CrossLoginRs) GetOpType() int32 {
	if x != nil && x.OpType != nil {
		return *x.OpType
	}
	return 0
}

func (x *CrossLoginRs) GetHero() []*FortHeroPb {
	if x != nil {
		return x.Hero
	}
	return nil
}

func (x *CrossLoginRs) GetCurKillNum() int32 {
	if x != nil && x.CurKillNum != nil {
		return *x.CurKillNum
	}
	return 0
}

// 发送跨服聊天
type SendCrossChatRq struct {
	Chat                 *Chat                   `protobuf:"bytes,1,req,name=chat" json:"chat,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *SendCrossChatRq) Reset() {
	*x = SendCrossChatRq{}
}

func (x *SendCrossChatRq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendCrossChatRq) ProtoMessage() {}

func (x *SendCrossChatRq) ProtoReflect() protoreflect.Message {
	return file_Cross_proto_msgTypes[5].MessageOf(x)
}

func (m *SendCrossChatRq) XXX_Methods() *protoiface.Methods {
	return file_Cross_proto_msgTypes[5].Methods()
}

// Deprecated: Use SendCrossChatRq.ProtoReflect.Type instead.
func (*SendCrossChatRq) Descriptor() ([]byte, []int) {
	return file_Cross_proto_rawDescGZIP(), []int{5}
}

func (x *SendCrossChatRq) GetChat() *Chat {
	if x != nil {
		return x.Chat
	}
	return nil
}

// 选择将领加入或
type ChoiceHeroRq struct {
	Heros                []*CrossHeroPb          `protobuf:"bytes,1,rep,name=heros" json:"heros,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *ChoiceHeroRq) Reset() {
	*x = ChoiceHeroRq{}
}

func (x *ChoiceHeroRq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChoiceHeroRq) ProtoMessage() {}

func (x *ChoiceHeroRq) ProtoReflect() protoreflect.Message {
	return file_Cross_proto_msgTypes[6].MessageOf(x)
}

func (m *ChoiceHeroRq) XXX_Methods() *protoiface.Methods {
	return file_Cross_proto_msgTypes[6].Methods()
}

// Deprecated: Use ChoiceHeroRq.ProtoReflect.Type instead.
func (*ChoiceHeroRq) Descriptor() ([]byte, []int) {
	return file_Cross_proto_rawDescGZIP(), []int{6}
}

func (x *ChoiceHeroRq) GetHeros() []*CrossHeroPb {
	if x != nil {
		return x.Heros
	}
	return nil
}

// 扣除资源返回值 游戏服->跨服
type CrossAwardOpRq struct {
	TaskId               *int64                  `protobuf:"varint,1,opt,name=taskId" json:"taskId,omitempty"`
	ReqAwards            *CrossAwardPb           `protobuf:"bytes,2,opt,name=reqAwards" json:"reqAwards,omitempty"`
	Success              *bool                   `protobuf:"varint,3,opt,name=success" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *CrossAwardOpRq) Reset() {
	*x = CrossAwardOpRq{}
}

func (x *CrossAwardOpRq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrossAwardOpRq) ProtoMessage() {}

func (x *CrossAwardOpRq) ProtoReflect() protoreflect.Message {
	return file_Cross_proto_msgTypes[7].MessageOf(x)
}

func (m *CrossAwardOpRq) XXX_Methods() *protoiface.Methods {
	return file_Cross_proto_msgTypes[7].Methods()
}

// Deprecated: Use CrossAwardOpRq.ProtoReflect.Type instead.
func (*CrossAwardOpRq) Descriptor() ([]byte, []int) {
	return file_Cross_proto_rawDescGZIP(), []int{7}
}

func (x *CrossAwardOpRq) GetTaskId() int64 {
	if x != nil && x.TaskId != nil {
		return *x.TaskId
	}
	return 0
}

func (x *CrossAwardOpRq) GetReqAwards() *CrossAwardPb {
	if x != nil {
		return x.ReqAwards
	}
	return nil
}

func (x *CrossAwardOpRq) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

// 异步资源扣除资源  跨服->游戏服
type CrossAwardOpRs struct {
	TaskId               *int64                  `protobuf:"varint,1,opt,name=taskId" json:"taskId,omitempty"`
	ReqAwards            *CrossAwardPb           `protobuf:"bytes,2,opt,name=reqAwards" json:"reqAwards,omitempty"`
	RollBack             *bool                   `protobuf:"varint,3,opt,name=rollBack" json:"rollBack,omitempty"`
	Cmd                  *int32                  `protobuf:"varint,4,opt,name=cmd" json:"cmd,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *CrossAwardOpRs) Reset() {
	*x = CrossAwardOpRs{}
}

func (x *CrossAwardOpRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrossAwardOpRs) ProtoMessage() {}

func (x *CrossAwardOpRs) ProtoReflect() protoreflect.Message {
	return file_Cross_proto_msgTypes[8].MessageOf(x)
}

func (m *CrossAwardOpRs) XXX_Methods() *protoiface.Methods {
	return file_Cross_proto_msgTypes[8].Methods()
}

// Deprecated: Use CrossAwardOpRs.ProtoReflect.Type instead.
func (*CrossAwardOpRs) Descriptor() ([]byte, []int) {
	return file_Cross_proto_rawDescGZIP(), []int{8}
}

func (x *CrossAwardOpRs) GetTaskId() int64 {
	if x != nil && x.TaskId != nil {
		return *x.TaskId
	}
	return 0
}

func (x *CrossAwardOpRs) GetReqAwards() *CrossAwardPb {
	if x != nil {
		return x.ReqAwards
	}
	return nil
}

func (x *CrossAwardOpRs) GetRollBack() bool {
	if x != nil && x.RollBack != nil {
		return *x.RollBack
	}
	return false
}

func (x *CrossAwardOpRs) GetCmd() int32 {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return 0
}

// 将领复活操作
type CrossHeroReviveRq struct {
	Hero                 *CrossHeroPb            `protobuf:"bytes,1,opt,name=hero" json:"hero,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *CrossHeroReviveRq) Reset() {
	*x = CrossHeroReviveRq{}
}

func (x *CrossHeroReviveRq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrossHeroReviveRq) ProtoMessage() {}

func (x *CrossHeroReviveRq) ProtoReflect() protoreflect.Message {
	return file_Cross_proto_msgTypes[9].MessageOf(x)
}

func (m *CrossHeroReviveRq) XXX_Methods() *protoiface.Methods {
	return file_Cross_proto_msgTypes[9].Methods()
}

// Deprecated: Use CrossHeroReviveRq.ProtoReflect.Type instead.
func (*CrossHeroReviveRq) Descriptor() ([]byte, []int) {
	return file_Cross_proto_rawDescGZIP(), []int{9}
}

func (x *CrossHeroReviveRq) GetHero() *CrossHeroPb {
	if x != nil {
		return x.Hero
	}
	return nil
}

// 将领的属性同步
type CrossHeroSyncRq struct {
	Hero                 []*CrossHeroPb          `protobuf:"bytes,1,rep,name=hero" json:"hero,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *CrossHeroSyncRq) Reset() {
	*x = CrossHeroSyncRq{}
}

func (x *CrossHeroSyncRq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrossHeroSyncRq) ProtoMessage() {}

func (x *CrossHeroSyncRq) ProtoReflect() protoreflect.Message {
	return file_Cross_proto_msgTypes[10].MessageOf(x)
}

func (m *CrossHeroSyncRq) XXX_Methods() *protoiface.Methods {
	return file_Cross_proto_msgTypes[10].Methods()
}

// Deprecated: Use CrossHeroSyncRq.ProtoReflect.Type instead.
func (*CrossHeroSyncRq) Descriptor() ([]byte, []int) {
	return file_Cross_proto_rawDescGZIP(), []int{10}
}

func (x *CrossHeroSyncRq) GetHero() []*CrossHeroPb {
	if x != nil {
		return x.Hero
	}
	return nil
}

// 跨服开始结束推送给游戏服
type CrossStartFinishRs struct {
	IsStart              *bool                   `protobuf:"varint,1,req,name=isStart" json:"isStart,omitempty"`
	WinCamp              *int32                  `protobuf:"varint,2,opt,name=winCamp" json:"winCamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *CrossStartFinishRs) Reset() {
	*x = CrossStartFinishRs{}
}

func (x *CrossStartFinishRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrossStartFinishRs) ProtoMessage() {}

func (x *CrossStartFinishRs) ProtoReflect() protoreflect.Message {
	return file_Cross_proto_msgTypes[11].MessageOf(x)
}

func (m *CrossStartFinishRs) XXX_Methods() *protoiface.Methods {
	return file_Cross_proto_msgTypes[11].Methods()
}

// Deprecated: Use CrossStartFinishRs.ProtoReflect.Type instead.
func (*CrossStartFinishRs) Descriptor() ([]byte, []int) {
	return file_Cross_proto_rawDescGZIP(), []int{11}
}

func (x *CrossStartFinishRs) GetIsStart() bool {
	if x != nil && x.IsStart != nil {
		return *x.IsStart
	}
	return false
}

func (x *CrossStartFinishRs) GetWinCamp() int32 {
	if x != nil && x.WinCamp != nil {
		return *x.WinCamp
	}
	return 0
}

// GM命令
type GmDoSomeRq struct {
	Strs                 []string                `protobuf:"bytes,1,rep,name=strs" json:"strs,omitempty"`
	RoleId               *int64                  `protobuf:"varint,2,opt,name=roleId" json:"roleId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     protoimpl.UnknownFields `json:"-"`
	XXX_sizecache        protoimpl.SizeCache     `json:"-"`
}

func (x *GmDoSomeRq) Reset() {
	*x = GmDoSomeRq{}
}

func (x *GmDoSomeRq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GmDoSomeRq) ProtoMessage() {}

func (x *GmDoSomeRq) ProtoReflect() protoreflect.Message {
	return file_Cross_proto_msgTypes[12].MessageOf(x)
}

func (m *GmDoSomeRq) XXX_Methods() *protoiface.Methods {
	return file_Cross_proto_msgTypes[12].Methods()
}

// Deprecated: Use GmDoSomeRq.ProtoReflect.Type instead.
func (*GmDoSomeRq) Descriptor() ([]byte, []int) {
	return file_Cross_proto_rawDescGZIP(), []int{12}
}

func (x *GmDoSomeRq) GetStrs() []string {
	if x != nil {
		return x.Strs
	}
	return nil
}

func (x *GmDoSomeRq) GetRoleId() int64 {
	if x != nil && x.RoleId != nil {
		return *x.RoleId
	}
	return 0
}

var file_Cross_proto_extDescs = []protoiface.ExtensionDescV1{
	{
		ExtendedType:  (*Base)(nil),
		ExtensionType: (*ServerRegistRq)(nil),
		Field:         10001,
		Name:          "ServerRegistRq.ext",
		Tag:           "bytes,10001,opt,name=ext",
		Filename:      "Cross.proto",
	},
	{
		ExtendedType:  (*Base)(nil),
		ExtensionType: (*HeartRq)(nil),
		Field:         10003,
		Name:          "HeartRq.ext",
		Tag:           "bytes,10003,opt,name=ext",
		Filename:      "Cross.proto",
	},
	{
		ExtendedType:  (*Base)(nil),
		ExtensionType: (*HeartRs)(nil),
		Field:         10004,
		Name:          "HeartRs.ext",
		Tag:           "bytes,10004,opt,name=ext",
		Filename:      "Cross.proto",
	},
	{
		ExtendedType:  (*Base)(nil),
		ExtensionType: (*CrossLoginRq)(nil),
		Field:         10005,
		Name:          "CrossLoginRq.ext",
		Tag:           "bytes,10005,opt,name=ext",
		Filename:      "Cross.proto",
	},
	{
		ExtendedType:  (*Base)(nil),
		ExtensionType: (*CrossLoginRs)(nil),
		Field:         10006,
		Name:          "CrossLoginRs.ext",
		Tag:           "bytes,10006,opt,name=ext",
		Filename:      "Cross.proto",
	},
	{
		ExtendedType:  (*Base)(nil),
		ExtensionType: (*SendCrossChatRq)(nil),
		Field:         10007,
		Name:          "SendCrossChatRq.ext",
		Tag:           "bytes,10007,opt,name=ext",
		Filename:      "Cross.proto",
	},
	{
		ExtendedType:  (*Base)(nil),
		ExtensionType: (*ChoiceHeroRq)(nil),
		Field:         10009,
		Name:          "ChoiceHeroRq.ext",
		Tag:           "bytes,10009,opt,name=ext",
		Filename:      "Cross.proto",
	},
	{
		ExtendedType:  (*Base)(nil),
		ExtensionType: (*CrossAwardOpRq)(nil),
		Field:         10010,
		Name:          "CrossAwardOpRq.ext",
		Tag:           "bytes,10010,opt,name=ext",
		Filename:      "Cross.proto",
	},
	{
		ExtendedType:  (*Base)(nil),
		ExtensionType: (*CrossAwardOpRs)(nil),
		Field:         10011,
		Name:          "CrossAwardOpRs.ext",
		Tag:           "bytes,10011,opt,name=ext",
		Filename:      "Cross.proto",
	},
	{
		ExtendedType:  (*Base)(nil),
		ExtensionType: (*CrossHeroReviveRq)(nil),
		Field:         10013,
		Name:          "CrossHeroReviveRq.ext",
		Tag:           "bytes,10013,opt,name=ext",
		Filename:      "Cross.proto",
	},
	{
		ExtendedType:  (*Base)(nil),
		ExtensionType: (*CrossHeroSyncRq)(nil),
		Field:         10015,
		Name:          "CrossHeroSyncRq.ext",
		Tag:           "bytes,10015,opt,name=ext",
		Filename:      "Cross.proto",
	},
	{
		ExtendedType:  (*Base)(nil),
		ExtensionType: (*CrossStartFinishRs)(nil),
		Field:         10016,
		Name:          "CrossStartFinishRs.ext",
		Tag:           "bytes,10016,opt,name=ext",
		Filename:      "Cross.proto",
	},
	{
		ExtendedType:  (*Base)(nil),
		ExtensionType: (*GmDoSomeRq)(nil),
		Field:         10017,
		Name:          "GmDoSomeRq.ext",
		Tag:           "bytes,10017,opt,name=ext",
		Filename:      "Cross.proto",
	},
}
var (
	// extend Base { optional ServerRegistRq ext = 10001; }
	E_ServerRegistRq_Ext = &file_Cross_proto_extDescs[0]

	// extend Base { optional HeartRq ext = 10003; }
	E_HeartRq_Ext = &file_Cross_proto_extDescs[1]

	// extend Base { optional HeartRs ext = 10004; }
	E_HeartRs_Ext = &file_Cross_proto_extDescs[2]

	// extend Base { optional CrossLoginRq ext = 10005; }
	E_CrossLoginRq_Ext = &file_Cross_proto_extDescs[3]

	// extend Base { optional CrossLoginRs ext = 10006; }
	E_CrossLoginRs_Ext = &file_Cross_proto_extDescs[4]

	// extend Base { optional SendCrossChatRq ext = 10007; }
	E_SendCrossChatRq_Ext = &file_Cross_proto_extDescs[5]

	// extend Base { optional ChoiceHeroRq ext = 10009; }
	E_ChoiceHeroRq_Ext = &file_Cross_proto_extDescs[6]

	// extend Base { optional CrossAwardOpRq ext = 10010; }
	E_CrossAwardOpRq_Ext = &file_Cross_proto_extDescs[7]

	// extend Base { optional CrossAwardOpRs ext = 10011; }
	E_CrossAwardOpRs_Ext = &file_Cross_proto_extDescs[8]

	// extend Base { optional CrossHeroReviveRq ext = 10013; }
	E_CrossHeroReviveRq_Ext = &file_Cross_proto_extDescs[9]

	// extend Base { optional CrossHeroSyncRq ext = 10015; }
	E_CrossHeroSyncRq_Ext = &file_Cross_proto_extDescs[10]

	// extend Base { optional CrossStartFinishRs ext = 10016; }
	E_CrossStartFinishRs_Ext = &file_Cross_proto_extDescs[11]

	// extend Base { optional GmDoSomeRq ext = 10017; }
	E_GmDoSomeRq_Ext = &file_Cross_proto_extDescs[12]
)
var File_Cross_proto protoreflect.FileDescriptor

var file_Cross_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x42,
	0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69,
	0x7a, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x66, 0x0a, 0x0e, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x52, 0x71, 0x12, 0x10, 0x0a, 0x08, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x12, 0x0d, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x32, 0x24, 0x0a, 0x03, 0x65, 0x78,
	0x74, 0x12, 0x05, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x18, 0x91, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x52, 0x71,
	0x22, 0x28, 0x0a, 0x07, 0x48, 0x65, 0x61, 0x72, 0x74, 0x52, 0x71, 0x32, 0x1d, 0x0a, 0x03, 0x65,
	0x78, 0x74, 0x12, 0x05, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x18, 0x93, 0x4e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x08, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x52, 0x71, 0x22, 0x36, 0x0a, 0x07, 0x48, 0x65,
	0x61, 0x72, 0x74, 0x52, 0x73, 0x12, 0x0c, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x03, 0x32, 0x1d, 0x0a, 0x03, 0x65, 0x78, 0x74, 0x12, 0x05, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x18, 0x94, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74,
	0x52, 0x73, 0x22, 0x62, 0x0a, 0x0c, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x52, 0x71, 0x12, 0x0e, 0x0a, 0x06, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x12, 0x1e, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x50, 0x62, 0x32, 0x22, 0x0a, 0x03, 0x65, 0x78, 0x74, 0x12, 0x05, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x18, 0x95, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x52, 0x71, 0x22, 0x71, 0x0a, 0x0c, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x52, 0x73, 0x12, 0x0e, 0x0a, 0x06, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x12, 0x19, 0x0a, 0x04, 0x68, 0x65, 0x72, 0x6f, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x46, 0x6f, 0x72, 0x74, 0x48, 0x65, 0x72, 0x6f, 0x50,
	0x62, 0x12, 0x12, 0x0a, 0x0a, 0x63, 0x75, 0x72, 0x4b, 0x69, 0x6c, 0x6c, 0x4e, 0x75, 0x6d, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x32, 0x22, 0x0a, 0x03, 0x65, 0x78, 0x74, 0x12, 0x05, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x18, 0x96, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x43, 0x72, 0x6f,
	0x73, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x73, 0x22, 0x4d, 0x0a, 0x0f, 0x53, 0x65, 0x6e,
	0x64, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x43, 0x68, 0x61, 0x74, 0x52, 0x71, 0x12, 0x13, 0x0a, 0x04,
	0x63, 0x68, 0x61, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x43, 0x68, 0x61,
	0x74, 0x32, 0x25, 0x0a, 0x03, 0x65, 0x78, 0x74, 0x12, 0x05, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x18,
	0x97, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x72, 0x6f,
	0x73, 0x73, 0x43, 0x68, 0x61, 0x74, 0x52, 0x71, 0x22, 0x4f, 0x0a, 0x0c, 0x43, 0x68, 0x6f, 0x69,
	0x63, 0x65, 0x48, 0x65, 0x72, 0x6f, 0x52, 0x71, 0x12, 0x1b, 0x0a, 0x05, 0x68, 0x65, 0x72, 0x6f,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x48,
	0x65, 0x72, 0x6f, 0x50, 0x62, 0x32, 0x22, 0x0a, 0x03, 0x65, 0x78, 0x74, 0x12, 0x05, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x18, 0x99, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x43, 0x68, 0x6f,
	0x69, 0x63, 0x65, 0x48, 0x65, 0x72, 0x6f, 0x52, 0x71, 0x22, 0x79, 0x0a, 0x0e, 0x43, 0x72, 0x6f,
	0x73, 0x73, 0x41, 0x77, 0x61, 0x72, 0x64, 0x4f, 0x70, 0x52, 0x71, 0x12, 0x0e, 0x0a, 0x06, 0x74,
	0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x12, 0x20, 0x0a, 0x09, 0x72,
	0x65, 0x71, 0x41, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x41, 0x77, 0x61, 0x72, 0x64, 0x50, 0x62, 0x12, 0x0f, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x32, 0x24,
	0x0a, 0x03, 0x65, 0x78, 0x74, 0x12, 0x05, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x18, 0x9a, 0x4e, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x41, 0x77, 0x61, 0x72, 0x64,
	0x4f, 0x70, 0x52, 0x71, 0x22, 0x87, 0x01, 0x0a, 0x0e, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x41, 0x77,
	0x61, 0x72, 0x64, 0x4f, 0x70, 0x52, 0x73, 0x12, 0x0e, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x12, 0x20, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x41, 0x77,
	0x61, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x43, 0x72, 0x6f,
	0x73, 0x73, 0x41, 0x77, 0x61, 0x72, 0x64, 0x50, 0x62, 0x12, 0x10, 0x0a, 0x08, 0x72, 0x6f, 0x6c,
	0x6c, 0x42, 0x61, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x12, 0x0b, 0x0a, 0x03, 0x63,
	0x6d, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x32, 0x24, 0x0a, 0x03, 0x65, 0x78, 0x74, 0x12,
	0x05, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x18, 0x9b, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x43, 0x72, 0x6f, 0x73, 0x73, 0x41, 0x77, 0x61, 0x72, 0x64, 0x4f, 0x70, 0x52, 0x73, 0x22, 0x58,
	0x0a, 0x11, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x48, 0x65, 0x72, 0x6f, 0x52, 0x65, 0x76, 0x69, 0x76,
	0x65, 0x52, 0x71, 0x12, 0x1a, 0x0a, 0x04, 0x68, 0x65, 0x72, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x48, 0x65, 0x72, 0x6f, 0x50, 0x62, 0x32,
	0x27, 0x0a, 0x03, 0x65, 0x78, 0x74, 0x12, 0x05, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x18, 0x9d, 0x4e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x48, 0x65, 0x72, 0x6f,
	0x52, 0x65, 0x76, 0x69, 0x76, 0x65, 0x52, 0x71, 0x22, 0x54, 0x0a, 0x0f, 0x43, 0x72, 0x6f, 0x73,
	0x73, 0x48, 0x65, 0x72, 0x6f, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x71, 0x12, 0x1a, 0x0a, 0x04, 0x68,
	0x65, 0x72, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x72, 0x6f, 0x73,
	0x73, 0x48, 0x65, 0x72, 0x6f, 0x50, 0x62, 0x32, 0x25, 0x0a, 0x03, 0x65, 0x78, 0x74, 0x12, 0x05,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x18, 0x9f, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x43,
	0x72, 0x6f, 0x73, 0x73, 0x48, 0x65, 0x72, 0x6f, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x71, 0x22, 0x60,
	0x0a, 0x12, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x53, 0x74, 0x61, 0x72, 0x74, 0x46, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x52, 0x73, 0x12, 0x0f, 0x0a, 0x07, 0x69, 0x73, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x08, 0x12, 0x0f, 0x0a, 0x07, 0x77, 0x69, 0x6e, 0x43, 0x61, 0x6d, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x32, 0x28, 0x0a, 0x03, 0x65, 0x78, 0x74, 0x12, 0x05, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x18, 0xa0, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x43, 0x72,
	0x6f, 0x73, 0x73, 0x53, 0x74, 0x61, 0x72, 0x74, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x52, 0x73,
	0x22, 0x4c, 0x0a, 0x0a, 0x47, 0x6d, 0x44, 0x6f, 0x53, 0x6f, 0x6d, 0x65, 0x52, 0x71, 0x12, 0x0c,
	0x0a, 0x04, 0x73, 0x74, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x12, 0x0e, 0x0a, 0x06,
	0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x32, 0x20, 0x0a, 0x03,
	0x65, 0x78, 0x74, 0x12, 0x05, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x18, 0xa1, 0x4e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x47, 0x6d, 0x44, 0x6f, 0x53, 0x6f, 0x6d, 0x65, 0x52, 0x71, 0x42, 0x51,
	0x0a, 0x1a, 0x63, 0x6f, 0x6d, 0x2e, 0x68, 0x75, 0x6e, 0x64, 0x72, 0x65, 0x64, 0x63, 0x65, 0x6e,
	0x74, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x6d, 0x77, 0x2e, 0x70, 0x62, 0x42, 0x07, 0x43, 0x72,
	0x6f, 0x73, 0x73, 0x50, 0x62, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x71, 0x69, 0x75, 0x68, 0x6f, 0x75, 0x64, 0x65, 0x2f, 0x67, 0x6f, 0x2d, 0x77, 0x65,
	0x62, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x32, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73,
}

var (
	file_Cross_proto_rawDescOnce sync.Once
	file_Cross_proto_rawDescData = file_Cross_proto_rawDesc
)

func file_Cross_proto_rawDescGZIP() []byte {
	file_Cross_proto_rawDescOnce.Do(func() {
		file_Cross_proto_rawDescData = protoimpl.X.CompressGZIP(file_Cross_proto_rawDescData)
	})
	return file_Cross_proto_rawDescData
}

var file_Cross_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_Cross_proto_goTypes = []interface{}{
	(*ServerRegistRq)(nil),     // 0: ServerRegistRq
	(*HeartRq)(nil),            // 1: HeartRq
	(*HeartRs)(nil),            // 2: HeartRs
	(*CrossLoginRq)(nil),       // 3: CrossLoginRq
	(*CrossLoginRs)(nil),       // 4: CrossLoginRs
	(*SendCrossChatRq)(nil),    // 5: SendCrossChatRq
	(*ChoiceHeroRq)(nil),       // 6: ChoiceHeroRq
	(*CrossAwardOpRq)(nil),     // 7: CrossAwardOpRq
	(*CrossAwardOpRs)(nil),     // 8: CrossAwardOpRs
	(*CrossHeroReviveRq)(nil),  // 9: CrossHeroReviveRq
	(*CrossHeroSyncRq)(nil),    // 10: CrossHeroSyncRq
	(*CrossStartFinishRs)(nil), // 11: CrossStartFinishRs
	(*GmDoSomeRq)(nil),         // 12: GmDoSomeRq
	(*Base)(nil),               // 13: Base
	(*CrossPlayerPb)(nil),      // 14: CrossPlayerPb
	(*FortHeroPb)(nil),         // 15: FortHeroPb
	(*Chat)(nil),               // 16: Chat
	(*CrossHeroPb)(nil),        // 17: CrossHeroPb
	(*CrossAwardPb)(nil),       // 18: CrossAwardPb
}
var file_Cross_proto_depIdxs = []int32{
	13, // ServerRegistRq.ext:extendee -> Base
	13, // HeartRq.ext:extendee -> Base
	13, // HeartRs.ext:extendee -> Base
	13, // CrossLoginRq.ext:extendee -> Base
	13, // CrossLoginRs.ext:extendee -> Base
	13, // SendCrossChatRq.ext:extendee -> Base
	13, // ChoiceHeroRq.ext:extendee -> Base
	13, // CrossAwardOpRq.ext:extendee -> Base
	13, // CrossAwardOpRs.ext:extendee -> Base
	13, // CrossHeroReviveRq.ext:extendee -> Base
	13, // CrossHeroSyncRq.ext:extendee -> Base
	13, // CrossStartFinishRs.ext:extendee -> Base
	13, // GmDoSomeRq.ext:extendee -> Base
	14, // CrossLoginRq.player:type_name -> CrossPlayerPb
	15, // CrossLoginRs.hero:type_name -> FortHeroPb
	16, // SendCrossChatRq.chat:type_name -> Chat
	17, // ChoiceHeroRq.heros:type_name -> CrossHeroPb
	18, // CrossAwardOpRq.reqAwards:type_name -> CrossAwardPb
	18, // CrossAwardOpRs.reqAwards:type_name -> CrossAwardPb
	17, // CrossHeroReviveRq.hero:type_name -> CrossHeroPb
	17, // CrossHeroSyncRq.hero:type_name -> CrossHeroPb
	0,  // ServerRegistRq.ext:type_name -> ServerRegistRq
	1,  // HeartRq.ext:type_name -> HeartRq
	2,  // HeartRs.ext:type_name -> HeartRs
	3,  // CrossLoginRq.ext:type_name -> CrossLoginRq
	4,  // CrossLoginRs.ext:type_name -> CrossLoginRs
	5,  // SendCrossChatRq.ext:type_name -> SendCrossChatRq
	6,  // ChoiceHeroRq.ext:type_name -> ChoiceHeroRq
	7,  // CrossAwardOpRq.ext:type_name -> CrossAwardOpRq
	8,  // CrossAwardOpRs.ext:type_name -> CrossAwardOpRs
	9,  // CrossHeroReviveRq.ext:type_name -> CrossHeroReviveRq
	10, // CrossHeroSyncRq.ext:type_name -> CrossHeroSyncRq
	11, // CrossStartFinishRs.ext:type_name -> CrossStartFinishRs
	12, // GmDoSomeRq.ext:type_name -> GmDoSomeRq
}

func init() { file_Cross_proto_init() }
func file_Cross_proto_init() {
	if File_Cross_proto != nil {
		return
	}
	file_Base_proto_init()
	file_Common_proto_init()
	file_Serialize_proto_init()
	extensionTypes := make([]protoreflect.ExtensionType, 13)
	File_Cross_proto = protoimpl.ExtensionFields{
		RawDescriptor:        file_Cross_proto_rawDesc,
		GoTypes:              file_Cross_proto_goTypes,
		DependencyIndexes:    file_Cross_proto_depIdxs,
		LegacyExtensions:     file_Cross_proto_extDescs,
		MessageOutputTypes:   file_Cross_proto_msgTypes,
		ExtensionOutputTypes: extensionTypes,
		FilesRegistry:        protoregistry.GlobalFiles,
		TypesRegistry:        protoregistry.GlobalTypes,
	}.Init()
	file_Cross_proto_rawDesc = nil
	file_Cross_proto_goTypes = nil
	file_Cross_proto_depIdxs = nil
}
